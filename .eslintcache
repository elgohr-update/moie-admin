[{"/home/dev/workspace/repositories/moie-admin/src/index.js":"1","/home/dev/workspace/repositories/moie-admin/src/App.js":"2","/home/dev/workspace/repositories/moie-admin/src/serviceWorker.js":"3","/home/dev/workspace/repositories/moie-admin/src/store/index.js":"4","/home/dev/workspace/repositories/moie-admin/src/routes/allRoutes.js":"5","/home/dev/workspace/repositories/moie-admin/src/routes/middleware/Authmiddleware.js":"6","/home/dev/workspace/repositories/moie-admin/src/components/NonAuthLayout.js":"7","/home/dev/workspace/repositories/moie-admin/src/components/MessageToast/ShowToastMessages.js":"8","/home/dev/workspace/repositories/moie-admin/src/components/VerticalLayout/index.js":"9","/home/dev/workspace/repositories/moie-admin/src/components/HorizontalLayout/index.js":"10","/home/dev/workspace/repositories/moie-admin/src/store/reducers.js":"11","/home/dev/workspace/repositories/moie-admin/src/store/sagas.js":"12","/home/dev/workspace/repositories/moie-admin/src/store/actions.js":"13","/home/dev/workspace/repositories/moie-admin/src/components/VerticalLayout/Sidebar.js":"14","/home/dev/workspace/repositories/moie-admin/src/components/VerticalLayout/Footer.js":"15","/home/dev/workspace/repositories/moie-admin/src/components/HorizontalLayout/Footer.js":"16","/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/ProductDetail.js":"17","/home/dev/workspace/repositories/moie-admin/src/pages/CustomerEdit/CustomerDetail.js":"18","/home/dev/workspace/repositories/moie-admin/src/pages/Dashboard/index.js":"19","/home/dev/workspace/repositories/moie-admin/src/pages/Customer/index.js":"20","/home/dev/workspace/repositories/moie-admin/src/pages/Authentication/Login.js":"21","/home/dev/workspace/repositories/moie-admin/src/pages/Authentication/Logout.js":"22","/home/dev/workspace/repositories/moie-admin/src/pages/Authentication/Register.js":"23","/home/dev/workspace/repositories/moie-admin/src/pages/Authentication/user-profile.js":"24","/home/dev/workspace/repositories/moie-admin/src/pages/Authentication/ForgetPassword.js":"25","/home/dev/workspace/repositories/moie-admin/src/components/VerticalLayout/Header.js":"26","/home/dev/workspace/repositories/moie-admin/src/components/HorizontalLayout/Navbar.js":"27","/home/dev/workspace/repositories/moie-admin/src/components/HorizontalLayout/Header.js":"28","/home/dev/workspace/repositories/moie-admin/src/components/CommonForBoth/Rightbar.js":"29","/home/dev/workspace/repositories/moie-admin/src/store/layout/reducer.js":"30","/home/dev/workspace/repositories/moie-admin/src/store/layout/saga.js":"31","/home/dev/workspace/repositories/moie-admin/src/store/customer/reducer.js":"32","/home/dev/workspace/repositories/moie-admin/src/store/customer/saga.js":"33","/home/dev/workspace/repositories/moie-admin/src/store/product/reducer.js":"34","/home/dev/workspace/repositories/moie-admin/src/store/product/saga.js":"35","/home/dev/workspace/repositories/moie-admin/src/store/location/reducer.js":"36","/home/dev/workspace/repositories/moie-admin/src/store/location/saga.js":"37","/home/dev/workspace/repositories/moie-admin/src/store/sizes/reducer.js":"38","/home/dev/workspace/repositories/moie-admin/src/store/sizes/saga.js":"39","/home/dev/workspace/repositories/moie-admin/src/store/category/reducer.js":"40","/home/dev/workspace/repositories/moie-admin/src/store/category/saga.js":"41","/home/dev/workspace/repositories/moie-admin/src/store/productImages/reducer.js":"42","/home/dev/workspace/repositories/moie-admin/src/store/productImages/saga.js":"43","/home/dev/workspace/repositories/moie-admin/src/store/productSize/reducer.js":"44","/home/dev/workspace/repositories/moie-admin/src/store/productSize/saga.js":"45","/home/dev/workspace/repositories/moie-admin/src/store/fieldOptions/reducer.js":"46","/home/dev/workspace/repositories/moie-admin/src/store/fieldOptions/saga.js":"47","/home/dev/workspace/repositories/moie-admin/src/store/order/reducer.js":"48","/home/dev/workspace/repositories/moie-admin/src/store/order/saga.js":"49","/home/dev/workspace/repositories/moie-admin/src/pages/Product/index.js":"50","/home/dev/workspace/repositories/moie-admin/src/pages/State/index.js":"51","/home/dev/workspace/repositories/moie-admin/src/pages/StateEdit/index.js":"52","/home/dev/workspace/repositories/moie-admin/src/pages/Municipality/index.js":"53","/home/dev/workspace/repositories/moie-admin/src/pages/MunicipalityEdit/index.js":"54","/home/dev/workspace/repositories/moie-admin/src/pages/CategoryEdit/index.js":"55","/home/dev/workspace/repositories/moie-admin/src/pages/Category/index.js":"56","/home/dev/workspace/repositories/moie-admin/src/pages/FieldOption/index.js":"57","/home/dev/workspace/repositories/moie-admin/src/pages/CustomerEdit/index.js":"58","/home/dev/workspace/repositories/moie-admin/src/store/auth/login/reducer.js":"59","/home/dev/workspace/repositories/moie-admin/src/store/auth/login/saga.js":"60","/home/dev/workspace/repositories/moie-admin/src/store/auth/register/reducer.js":"61","/home/dev/workspace/repositories/moie-admin/src/store/auth/register/saga.js":"62","/home/dev/workspace/repositories/moie-admin/src/store/auth/forgetpwd/reducer.js":"63","/home/dev/workspace/repositories/moie-admin/src/store/auth/forgetpwd/saga.js":"64","/home/dev/workspace/repositories/moie-admin/src/store/auth/profile/reducer.js":"65","/home/dev/workspace/repositories/moie-admin/src/store/auth/profile/saga.js":"66","/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/index.js":"67","/home/dev/workspace/repositories/moie-admin/src/store/layout/actions.js":"68","/home/dev/workspace/repositories/moie-admin/src/store/auth/register/actions.js":"69","/home/dev/workspace/repositories/moie-admin/src/store/auth/login/actions.js":"70","/home/dev/workspace/repositories/moie-admin/src/store/location/actions.js":"71","/home/dev/workspace/repositories/moie-admin/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js":"72","/home/dev/workspace/repositories/moie-admin/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js":"73","/home/dev/workspace/repositories/moie-admin/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js":"74","/home/dev/workspace/repositories/moie-admin/src/store/customer/actions.js":"75","/home/dev/workspace/repositories/moie-admin/src/store/auth/profile/actions.js":"76","/home/dev/workspace/repositories/moie-admin/src/pages/FieldOption/configsList.js":"77","/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/ProductPublish.js":"78","/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/ProductImage.js":"79","/home/dev/workspace/repositories/moie-admin/src/store/sizes/actions.js":"80","/home/dev/workspace/repositories/moie-admin/src/components/Common/Breadcrumb.js":"81","/home/dev/workspace/repositories/moie-admin/src/components/Common/ButtonSubmit.js":"82","/home/dev/workspace/repositories/moie-admin/src/store/productSize/actions.js":"83","/home/dev/workspace/repositories/moie-admin/src/store/category/actions.js":"84","/home/dev/workspace/repositories/moie-admin/src/store/productImages/actions.js":"85","/home/dev/workspace/repositories/moie-admin/src/common/constants.js":"86","/home/dev/workspace/repositories/moie-admin/src/common/conditionals.js":"87","/home/dev/workspace/repositories/moie-admin/src/common/pagination.js":"88","/home/dev/workspace/repositories/moie-admin/src/common/converters.js":"89","/home/dev/workspace/repositories/moie-admin/src/common/utils.js":"90","/home/dev/workspace/repositories/moie-admin/src/components/Fields/Autocomplete.js":"91","/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/ProductSize.js":"92","/home/dev/workspace/repositories/moie-admin/src/pages/Category/list/categoryList.js":"93","/home/dev/workspace/repositories/moie-admin/src/helpers/fakebackend_helper.js":"94","/home/dev/workspace/repositories/moie-admin/src/helpers/firebase_helper.js":"95","/home/dev/workspace/repositories/moie-admin/src/store/layout/actionTypes.js":"96","/home/dev/workspace/repositories/moie-admin/src/store/auth/login/actionTypes.js":"97","/home/dev/workspace/repositories/moie-admin/src/store/auth/register/actionTypes.js":"98","/home/dev/workspace/repositories/moie-admin/src/store/location/actionTypes.js":"99","/home/dev/workspace/repositories/moie-admin/src/store/fieldOptions/actions.js":"100","/home/dev/workspace/repositories/moie-admin/src/store/product/actions.js":"101","/home/dev/workspace/repositories/moie-admin/src/store/auth/profile/actionTypes.js":"102","/home/dev/workspace/repositories/moie-admin/src/store/auth/forgetpwd/actions.js":"103","/home/dev/workspace/repositories/moie-admin/src/store/auth/forgetpwd/actionTypes.js":"104","/home/dev/workspace/repositories/moie-admin/src/helpers/backend_helper.js":"105","/home/dev/workspace/repositories/moie-admin/src/helpers/service.js":"106","/home/dev/workspace/repositories/moie-admin/src/store/order/actions.js":"107","/home/dev/workspace/repositories/moie-admin/src/store/order/actionTypes.js":"108","/home/dev/workspace/repositories/moie-admin/src/store/fieldOptions/actionTypes.js":"109","/home/dev/workspace/repositories/moie-admin/src/common/languages.js":"110","/home/dev/workspace/repositories/moie-admin/src/pages/Municipality/list/municipalityList.js":"111","/home/dev/workspace/repositories/moie-admin/src/i18n.js":"112","/home/dev/workspace/repositories/moie-admin/src/pages/State/list/statesList.js":"113","/home/dev/workspace/repositories/moie-admin/src/pages/Product/ProductList/products-list.js":"114","/home/dev/workspace/repositories/moie-admin/src/components/Fields/index.js":"115","/home/dev/workspace/repositories/moie-admin/src/store/productSize/actionTypes.js":"116","/home/dev/workspace/repositories/moie-admin/src/store/productImages/actionTypes.js":"117","/home/dev/workspace/repositories/moie-admin/src/store/customer/actionTypes.js":"118","/home/dev/workspace/repositories/moie-admin/src/store/category/actionTypes.js":"119","/home/dev/workspace/repositories/moie-admin/src/store/sizes/actionTypes.js":"120","/home/dev/workspace/repositories/moie-admin/src/components/Common/DropZoneIcon.js":"121","/home/dev/workspace/repositories/moie-admin/src/helpers/api_helper.js":"122","/home/dev/workspace/repositories/moie-admin/src/helpers/url_helper.js":"123","/home/dev/workspace/repositories/moie-admin/src/pages/Category/list/categoryColumn.js":"124","/home/dev/workspace/repositories/moie-admin/src/components/Fields/messages.js":"125","/home/dev/workspace/repositories/moie-admin/src/components/Common/Image.js":"126","/home/dev/workspace/repositories/moie-admin/src/store/product/actionTypes.js":"127","/home/dev/workspace/repositories/moie-admin/src/components/Modal/ConfirmationModal.js":"128","/home/dev/workspace/repositories/moie-admin/src/config.js":"129","/home/dev/workspace/repositories/moie-admin/src/pages/Dashboard/top-vendors.js":"130","/home/dev/workspace/repositories/moie-admin/src/pages/Dashboard/mini-widget.js":"131","/home/dev/workspace/repositories/moie-admin/src/components/Common/NoDataIndication.js":"132","/home/dev/workspace/repositories/moie-admin/src/pages/Dashboard/latest-transaction.js":"133","/home/dev/workspace/repositories/moie-admin/src/pages/Customer/CustomerList/customers-list.js":"134","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputAsyncSearchField.js":"135","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputPhoneField.js":"136","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputDate.js":"137","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputTextField.js":"138","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputSwitchField.js":"139","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputSearchField.js":"140","/home/dev/workspace/repositories/moie-admin/src/components/Common/WidgetCard.js":"141","/home/dev/workspace/repositories/moie-admin/src/components/TableFilter/index.js":"142","/home/dev/workspace/repositories/moie-admin/src/helpers/jwt-token-access/accessToken.js":"143","/home/dev/workspace/repositories/moie-admin/src/pages/Customer/CustomerFilter/index.js":"144","/home/dev/workspace/repositories/moie-admin/src/components/StatusField/index.js":"145","/home/dev/workspace/repositories/moie-admin/src/pages/Customer/CustomerList/customerColumn.js":"146","/home/dev/workspace/repositories/moie-admin/src/pages/Customer/customer_status.js":"147","/home/dev/workspace/repositories/moie-admin/src/pages/Product/ProductList/productColumn.js":"148","/home/dev/workspace/repositories/moie-admin/src/pages/State/list/statesColumn.js":"149","/home/dev/workspace/repositories/moie-admin/src/pages/Municipality/list/municipalityColumns.js":"150","/home/dev/workspace/repositories/moie-admin/src/components/Common/HtmlTooltip.js":"151","/home/dev/workspace/repositories/moie-admin/src/components/VerticalLayout/SidebarContent.js":"152","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/orderDetail.js":"153","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/index.js":"154","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/index.js":"155","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/orderCustomer.js":"156","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/orderList.js":"157","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/orderColumn.js":"158","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/orderProducts.js":"159","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/orderCar.js":"160","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputSelectBasicField.js":"161","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/orderDeliveryOptions.js":"162","/home/dev/workspace/repositories/moie-admin/src/pages/CustomerEdit/CustomerForm.js":"163","/home/dev/workspace/repositories/moie-admin/src/components/Modal/CommosModal.js":"164","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/orderSummary.js":"165","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/OrderCardList.js":"166","/home/dev/workspace/repositories/moie-admin/src/components/Common/StatusWidgetCard.js":"167","/home/dev/workspace/repositories/moie-admin/src/pages/CustomerEdit/Observations.js":"168","/home/dev/workspace/repositories/moie-admin/src/pages/CustomerEdit/TimeLine.js":"169","/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/ProductsPending.js":"170"},{"size":444,"mtime":1619291194563,"results":"171","hashOfConfig":"172"},{"size":2154,"mtime":1619291194351,"results":"173","hashOfConfig":"172"},{"size":5315,"mtime":1619291194579,"results":"174","hashOfConfig":"172"},{"size":452,"mtime":1619291194579,"results":"175","hashOfConfig":"172"},{"size":2847,"mtime":1620593914414,"results":"176","hashOfConfig":"172"},{"size":760,"mtime":1619291194579,"results":"177","hashOfConfig":"172"},{"size":788,"mtime":1619291194559,"results":"178","hashOfConfig":"172"},{"size":882,"mtime":1619291194559,"results":"179","hashOfConfig":"172"},{"size":3637,"mtime":1619291194559,"results":"180","hashOfConfig":"172"},{"size":3070,"mtime":1619291194559,"results":"181","hashOfConfig":"172"},{"size":944,"mtime":1619293440053,"results":"182","hashOfConfig":"172"},{"size":1023,"mtime":1619293440121,"results":"183","hashOfConfig":"172"},{"size":559,"mtime":1619293440113,"results":"184","hashOfConfig":"172"},{"size":1580,"mtime":1619291194559,"results":"185","hashOfConfig":"172"},{"size":612,"mtime":1619291194559,"results":"186","hashOfConfig":"172"},{"size":454,"mtime":1619291194559,"results":"187","hashOfConfig":"172"},{"size":7934,"mtime":1620959559860,"results":"188","hashOfConfig":"172"},{"size":7628,"mtime":1620956815127,"results":"189","hashOfConfig":"172"},{"size":5435,"mtime":1619291194571,"results":"190","hashOfConfig":"172"},{"size":602,"mtime":1619291194571,"results":"191","hashOfConfig":"172"},{"size":6201,"mtime":1619291194563,"results":"192","hashOfConfig":"172"},{"size":464,"mtime":1619291194563,"results":"193","hashOfConfig":"172"},{"size":7214,"mtime":1619291194563,"results":"194","hashOfConfig":"172"},{"size":4132,"mtime":1619291194563,"results":"195","hashOfConfig":"172"},{"size":4849,"mtime":1619291194563,"results":"196","hashOfConfig":"172"},{"size":9378,"mtime":1619291194559,"results":"197","hashOfConfig":"172"},{"size":9032,"mtime":1619894467561,"results":"198","hashOfConfig":"172"},{"size":9265,"mtime":1619291194559,"results":"199","hashOfConfig":"172"},{"size":13370,"mtime":1619291194555,"results":"200","hashOfConfig":"172"},{"size":1755,"mtime":1619291194579,"results":"201","hashOfConfig":"172"},{"size":4857,"mtime":1619291194579,"results":"202","hashOfConfig":"172"},{"size":4293,"mtime":1620880729496,"results":"203","hashOfConfig":"172"},{"size":3506,"mtime":1620880729528,"results":"204","hashOfConfig":"172"},{"size":3675,"mtime":1620880729644,"results":"205","hashOfConfig":"172"},{"size":4333,"mtime":1620959559920,"results":"206","hashOfConfig":"172"},{"size":5742,"mtime":1619291194579,"results":"207","hashOfConfig":"172"},{"size":5464,"mtime":1619291194579,"results":"208","hashOfConfig":"172"},{"size":2339,"mtime":1619291194587,"results":"209","hashOfConfig":"172"},{"size":3135,"mtime":1619291194587,"results":"210","hashOfConfig":"172"},{"size":2465,"mtime":1619291194579,"results":"211","hashOfConfig":"172"},{"size":3300,"mtime":1619291194579,"results":"212","hashOfConfig":"172"},{"size":2896,"mtime":1619291194587,"results":"213","hashOfConfig":"172"},{"size":3390,"mtime":1619291194587,"results":"214","hashOfConfig":"172"},{"size":1160,"mtime":1619291194587,"results":"215","hashOfConfig":"172"},{"size":1163,"mtime":1619291194587,"results":"216","hashOfConfig":"172"},{"size":3228,"mtime":1619291194579,"results":"217","hashOfConfig":"172"},{"size":3838,"mtime":1619291194579,"results":"218","hashOfConfig":"172"},{"size":5059,"mtime":1620708533279,"results":"219","hashOfConfig":"172"},{"size":4637,"mtime":1620967820108,"results":"220","hashOfConfig":"172"},{"size":545,"mtime":1619291194571,"results":"221","hashOfConfig":"172"},{"size":524,"mtime":1619291194579,"results":"222","hashOfConfig":"172"},{"size":6887,"mtime":1619291194579,"results":"223","hashOfConfig":"172"},{"size":569,"mtime":1619291194571,"results":"224","hashOfConfig":"172"},{"size":7624,"mtime":1619291194571,"results":"225","hashOfConfig":"172"},{"size":5800,"mtime":1619291194571,"results":"226","hashOfConfig":"172"},{"size":545,"mtime":1619291194563,"results":"227","hashOfConfig":"172"},{"size":533,"mtime":1619291194571,"results":"228","hashOfConfig":"172"},{"size":1545,"mtime":1619405578792,"results":"229","hashOfConfig":"172"},{"size":770,"mtime":1619291194579,"results":"230","hashOfConfig":"172"},{"size":2227,"mtime":1619291194579,"results":"231","hashOfConfig":"172"},{"size":903,"mtime":1619291194579,"results":"232","hashOfConfig":"172"},{"size":1512,"mtime":1619291194579,"results":"233","hashOfConfig":"172"},{"size":734,"mtime":1619291194579,"results":"234","hashOfConfig":"172"},{"size":1900,"mtime":1619291194579,"results":"235","hashOfConfig":"172"},{"size":648,"mtime":1619291194579,"results":"236","hashOfConfig":"172"},{"size":1434,"mtime":1619291194579,"results":"237","hashOfConfig":"172"},{"size":29561,"mtime":1620876665559,"results":"238","hashOfConfig":"172"},{"size":1130,"mtime":1619291194579,"results":"239","hashOfConfig":"172"},{"size":439,"mtime":1619291194579,"results":"240","hashOfConfig":"172"},{"size":789,"mtime":1619291194579,"results":"241","hashOfConfig":"172"},{"size":4284,"mtime":1619291194579,"results":"242","hashOfConfig":"172"},{"size":2634,"mtime":1619291194555,"results":"243","hashOfConfig":"172"},{"size":5697,"mtime":1619291194555,"results":"244","hashOfConfig":"172"},{"size":1995,"mtime":1619291194555,"results":"245","hashOfConfig":"172"},{"size":2931,"mtime":1620880729624,"results":"246","hashOfConfig":"172"},{"size":494,"mtime":1619291194579,"results":"247","hashOfConfig":"172"},{"size":16663,"mtime":1620797129917,"results":"248","hashOfConfig":"172"},{"size":3515,"mtime":1619291194571,"results":"249","hashOfConfig":"172"},{"size":7271,"mtime":1619973527330,"results":"250","hashOfConfig":"172"},{"size":1672,"mtime":1619291194587,"results":"251","hashOfConfig":"172"},{"size":1113,"mtime":1619974129730,"results":"252","hashOfConfig":"172"},{"size":630,"mtime":1619291194555,"results":"253","hashOfConfig":"172"},{"size":718,"mtime":1619291194587,"results":"254","hashOfConfig":"172"},{"size":1825,"mtime":1619291194579,"results":"255","hashOfConfig":"172"},{"size":2084,"mtime":1619291194587,"results":"256","hashOfConfig":"172"},{"size":1555,"mtime":1620946313524,"results":"257","hashOfConfig":"172"},{"size":2459,"mtime":1619291194547,"results":"258","hashOfConfig":"172"},{"size":38,"mtime":1619291194547,"results":"259","hashOfConfig":"172"},{"size":974,"mtime":1620579092173,"results":"260","hashOfConfig":"172"},{"size":2932,"mtime":1619406260872,"results":"261","hashOfConfig":"172"},{"size":5304,"mtime":1619291194555,"results":"262","hashOfConfig":"172"},{"size":10402,"mtime":1619291194579,"results":"263","hashOfConfig":"172"},{"size":8762,"mtime":1619291194563,"results":"264","hashOfConfig":"172"},{"size":4097,"mtime":1619301274021,"results":"265","hashOfConfig":"172"},{"size":4879,"mtime":1619291194559,"results":"266","hashOfConfig":"172"},{"size":549,"mtime":1619291194579,"results":"267","hashOfConfig":"172"},{"size":270,"mtime":1619291194579,"results":"268","hashOfConfig":"172"},{"size":172,"mtime":1619291194579,"results":"269","hashOfConfig":"172"},{"size":1780,"mtime":1619291194579,"results":"270","hashOfConfig":"172"},{"size":3133,"mtime":1620583231867,"results":"271","hashOfConfig":"172"},{"size":2933,"mtime":1620959811057,"results":"272","hashOfConfig":"172"},{"size":192,"mtime":1619291194579,"results":"273","hashOfConfig":"172"},{"size":489,"mtime":1619291194579,"results":"274","hashOfConfig":"172"},{"size":175,"mtime":1619291194579,"results":"275","hashOfConfig":"172"},{"size":5885,"mtime":1620967820076,"results":"276","hashOfConfig":"172"},{"size":974,"mtime":1619309437326,"results":"277","hashOfConfig":"172"},{"size":2990,"mtime":1620967820088,"results":"278","hashOfConfig":"172"},{"size":1155,"mtime":1620967820096,"results":"279","hashOfConfig":"172"},{"size":991,"mtime":1619291194579,"results":"280","hashOfConfig":"172"},{"size":581,"mtime":1619291194547,"results":"281","hashOfConfig":"172"},{"size":9241,"mtime":1619291194571,"results":"282","hashOfConfig":"172"},{"size":1234,"mtime":1619291194563,"results":"283","hashOfConfig":"172"},{"size":8337,"mtime":1619291194579,"results":"284","hashOfConfig":"172"},{"size":11297,"mtime":1620881113124,"results":"285","hashOfConfig":"172"},{"size":970,"mtime":1619976660773,"results":"286","hashOfConfig":"172"},{"size":286,"mtime":1619291194587,"results":"287","hashOfConfig":"172"},{"size":872,"mtime":1619291194587,"results":"288","hashOfConfig":"172"},{"size":1105,"mtime":1620880729556,"results":"289","hashOfConfig":"172"},{"size":699,"mtime":1619291194579,"results":"290","hashOfConfig":"172"},{"size":597,"mtime":1619291194587,"results":"291","hashOfConfig":"172"},{"size":1807,"mtime":1619291194555,"results":"292","hashOfConfig":"172"},{"size":1430,"mtime":1619291194559,"results":"293","hashOfConfig":"172"},{"size":2244,"mtime":1620492380494,"results":"294","hashOfConfig":"172"},{"size":2571,"mtime":1619291194563,"results":"295","hashOfConfig":"172"},{"size":213,"mtime":1619291194559,"results":"296","hashOfConfig":"172"},{"size":610,"mtime":1620608782181,"results":"297","hashOfConfig":"172"},{"size":950,"mtime":1620959559804,"results":"298","hashOfConfig":"172"},{"size":1622,"mtime":1619291194559,"results":"299","hashOfConfig":"172"},{"size":125,"mtime":1619291194559,"results":"300","hashOfConfig":"172"},{"size":2857,"mtime":1619291194571,"results":"301","hashOfConfig":"172"},{"size":626,"mtime":1619291194571,"results":"302","hashOfConfig":"172"},{"size":333,"mtime":1619291194555,"results":"303","hashOfConfig":"172"},{"size":8510,"mtime":1619291194571,"results":"304","hashOfConfig":"172"},{"size":9343,"mtime":1620881319427,"results":"305","hashOfConfig":"172"},{"size":2979,"mtime":1619319451678,"results":"306","hashOfConfig":"172"},{"size":2742,"mtime":1619291194555,"results":"307","hashOfConfig":"172"},{"size":3251,"mtime":1619291194555,"results":"308","hashOfConfig":"172"},{"size":3438,"mtime":1619998595656,"results":"309","hashOfConfig":"172"},{"size":1921,"mtime":1619291194559,"results":"310","hashOfConfig":"172"},{"size":3194,"mtime":1619291194555,"results":"311","hashOfConfig":"172"},{"size":2118,"mtime":1620881269107,"results":"312","hashOfConfig":"172"},{"size":11608,"mtime":1620795149637,"results":"313","hashOfConfig":"172"},{"size":56,"mtime":1619291194559,"results":"314","hashOfConfig":"172"},{"size":8226,"mtime":1619291194571,"results":"315","hashOfConfig":"172"},{"size":875,"mtime":1620792234675,"results":"316","hashOfConfig":"172"},{"size":3965,"mtime":1619291194571,"results":"317","hashOfConfig":"172"},{"size":318,"mtime":1619291194571,"results":"318","hashOfConfig":"172"},{"size":6267,"mtime":1620786165121,"results":"319","hashOfConfig":"172"},{"size":2439,"mtime":1619291194579,"results":"320","hashOfConfig":"172"},{"size":2522,"mtime":1619291194571,"results":"321","hashOfConfig":"172"},{"size":713,"mtime":1620786954464,"results":"322","hashOfConfig":"172"},{"size":16404,"mtime":1619291194559,"results":"323","hashOfConfig":"172"},{"size":31485,"mtime":1620968731490,"results":"324","hashOfConfig":"172"},{"size":515,"mtime":1619293784419,"results":"325","hashOfConfig":"172"},{"size":6316,"mtime":1620797130025,"results":"326","hashOfConfig":"172"},{"size":11370,"mtime":1620789744984,"results":"327","hashOfConfig":"172"},{"size":7168,"mtime":1620960675951,"results":"328","hashOfConfig":"172"},{"size":3486,"mtime":1620960225312,"results":"329","hashOfConfig":"172"},{"size":13867,"mtime":1620789744932,"results":"330","hashOfConfig":"172"},{"size":9744,"mtime":1620793615553,"results":"331","hashOfConfig":"172"},{"size":1067,"mtime":1619392040915,"results":"332","hashOfConfig":"172"},{"size":10691,"mtime":1620960542542,"results":"333","hashOfConfig":"172"},{"size":14089,"mtime":1620797130013,"results":"334","hashOfConfig":"172"},{"size":1378,"mtime":1619890122920,"results":"335","hashOfConfig":"172"},{"size":4660,"mtime":1620789744960,"results":"336","hashOfConfig":"172"},{"size":5249,"mtime":1620797129873,"results":"337","hashOfConfig":"172"},{"size":2330,"mtime":1620879989002,"results":"338","hashOfConfig":"172"},{"size":3143,"mtime":1620957834543,"results":"339","hashOfConfig":"172"},{"size":3093,"mtime":1620957834559,"results":"340","hashOfConfig":"172"},{"size":3452,"mtime":1620960225336,"results":"341","hashOfConfig":"172"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},"1k8f8m7",{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"344"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"344"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"344"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"344"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"344"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"344"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"344"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"344"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"344"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"344"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"344"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"344"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"344"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"344"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"344"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"344"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"344"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"344"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"344"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"344"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"344"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"344"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"344"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"550","usedDeprecatedRules":"344"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"344"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"568","usedDeprecatedRules":"344"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"571","usedDeprecatedRules":"344"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"344"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"583","usedDeprecatedRules":"344"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"344"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"344"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"344"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"344"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"344"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"344"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"344"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"344"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"344"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"344"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"344"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"344"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"668","usedDeprecatedRules":"344"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"673","usedDeprecatedRules":"344"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"344"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"344"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"344"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"344"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"344"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"344"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"344"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713","usedDeprecatedRules":"344"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"344"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"344"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"722","usedDeprecatedRules":"344"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"729","usedDeprecatedRules":"344"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"344"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"344"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"344"},"/home/dev/workspace/repositories/moie-admin/src/index.js",[],["741","742"],"/home/dev/workspace/repositories/moie-admin/src/App.js",[],"/home/dev/workspace/repositories/moie-admin/src/serviceWorker.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/routes/allRoutes.js",[],"/home/dev/workspace/repositories/moie-admin/src/routes/middleware/Authmiddleware.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/NonAuthLayout.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/MessageToast/ShowToastMessages.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/VerticalLayout/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/HorizontalLayout/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/reducers.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/sagas.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/VerticalLayout/Sidebar.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/VerticalLayout/Footer.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/HorizontalLayout/Footer.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/ProductDetail.js",["743"],"import React, {useEffect, useState} from \"react\";\nimport {Col, Container, Row} from \"reactstrap\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getProduct} from \"../../store/product/actions\";\nimport {Card} from \"@material-ui/core\";\nimport {STATUS} from \"../../common/constants\";\nimport Images from \"../../components/Common/Image\";\nimport {getImageByQuality, priceFormat} from \"../../common/utils\";\nimport NoDataIndication from \"../../components/Common/NoDataIndication\";\nimport {map} from \"lodash\";\nimport ProductsPendingList from \"./ProductsPending\";\n\nconst ProductDetail = (props) => {\n\n    const {getProduct, product} = props;\n    const [productData, setProductData] = useState({_status: STATUS.ACTIVE});\n    const [imgSelected, setImgSelected] = useState(0);\n\n    useEffect(() => {\n        getProduct(props.match.params.id);\n    }, [getProduct]);\n\n    useEffect(() => {\n        if (product.id) {\n            const productImage = product.productImage.length > 0 ? product.productImage : [{}];\n            setProductData({...product, _status: product.status, productImage: productImage});\n        }\n    }, [product]);\n\n    return productData.id ? (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid>\n                    <Breadcrumb hasBack path=\"/products\" title={productData.reference} item={\"Producto\"}/>\n\n                    <Card id={'details'} className=\"mb-3\">\n                        <Row>\n                            <Col md={4} className=\"p-3 text-center\">\n                                <div className=\"row p-2\">\n                                    <div className=\"col-3 image-left-panel\">\n                                        <div className={`nav flex-column nav-pills`} id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n                                            {map(productData.productImage, (img, key) => (\n                                                <div key={key}\n                                                     className={`cursor-pointer nav-link ${imgSelected === key ? 'custom-active' : ''}`}\n                                                     onClick={() => (setImgSelected(key))}>\n                                                    <Images src={`${getImageByQuality(img, 'small')}`}\n                                                            alt={img.filename}\n                                                            className=\"img-fluid mx-auto d-block tab-img rounded\"/>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-9\">\n                                        <div className=\"tab-content position-relative\" id=\"v-pills-tabContent\">\n                                            {map(productData.productImage, (img, key) => (\n                                                <div key={key} className={`tab-pane fade ${imgSelected === key ? 'show active bg-white border-1' : ''}`} id={`product-${key}`} role=\"tabpanel\">\n                                                    <div className=\"product-img panel-bordered\">\n                                                        <Images src={`${getImageByQuality(img, 'high')}`}\n                                                                alt={img.filename}\n                                                                height={370}\n                                                                className=\"img-fluid mx-auto d-block\"\n                                                                data-zoom={`${img.path}`}/>\n                                                    </div>\n                                                    <div className=\"text-left panel-bordered p-2\">\n                                                        <div className=\"text.muted\"><b>Grupo:</b> {img.group}</div>\n                                                        <div className=\"text.muted\">{img.filename}</div>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col md={8} className=\"p-3\">\n                                <Row>\n                                    <Col md={12}>\n                                        <h3>Código: <b className=\"text-info\">{productData.reference}</b></h3>\n                                    </Col>\n                                </Row>\n                                <hr/>\n                                <Row>\n                                    <Col xs={10}>\n                                        <h4 className=\"card-title\">Descripción del producto</h4>\n                                    </Col>\n                                    <Col xs={2} className=\"text-right\">\n                                        <li className=\"list-inline-item\">\n                                            <Link to={`/product/${productData.id}`} className=\"px-2 text-primary\">\n                                                <i className=\"uil uil-pen font-size-18\"> </i>\n                                            </Link>\n                                        </li>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col md={12}>\n                                        <ul style={{listStyle: 'none'}}>\n                                            <li><b>Nombre:</b> <small>{productData.name}</small></li>\n                                            <li><b>Descripción:</b> {productData.description}</li>\n                                            <li><b>Costo:</b> {priceFormat(productData.cost, \"\", true)}</li>\n                                            <li><b>Precio:</b> {priceFormat(productData.price, \"\", true)}</li>\n                                        </ul>\n                                    </Col>\n                                </Row>\n                                <hr/>\n                                <Row>\n                                    <Col md={12}>\n                                        <h4 className=\"card-title\">Especificaciones</h4>\n                                    </Col>\n                                    <Col md={12}>\n                                        <ul style={{listStyle: 'none'}}>\n                                            <li><b>Tipo:</b> {productData.size?.name}</li>\n                                            <li><b>Categoria:</b> {productData.category?.name}</li>\n                                            <li><b>Material:</b> {productData.material}</li>\n                                            <li><b>Peso (g):</b> {productData.weight}</li>\n                                            <li><b>Proveedor:</b> {productData.provider}</li>\n                                        </ul>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Card>\n                    <ProductsPendingList product={productData}/>\n                </Container>\n            </div>\n        </React.Fragment>\n    ) : <NoDataIndication/>;\n}\n\nconst mapStateToProps = state => {\n    const {error, product, loading} = state.Product\n    return {error, product, loading}\n}\n\nexport default withRouter(\n    connect(mapStateToProps, {getProduct})(ProductDetail)\n)\n\nProductDetail.propTypes = {\n    error: PropTypes.any,\n    history: PropTypes.object\n}\n","/home/dev/workspace/repositories/moie-admin/src/pages/CustomerEdit/CustomerDetail.js",["744"],"import React, {useEffect, useState} from \"react\"\nimport {Col, Container, Row} from \"reactstrap\"\nimport {Card, Tooltip} from \"@material-ui/core\";\nimport {Link, withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\nimport {formatDate} from \"../../common/utils\";\nimport NoDataIndication from \"../../components/Common/NoDataIndication\";\nimport {getCustomer} from \"../../store/customer/actions\";\nimport OrderCardList from \"../Orders/OrderCardList\";\nimport {STATUS_COLORS, StatusField} from \"../../components/StatusField\";\nimport {ConverterCustomerStatus} from \"../Customer/customer_status\";\nimport Observations from \"./Observations\";\n\nconst CustomerDetail = (props) => {\n\n    const {getCustomer, customer} = props;\n    const [customerData, setCustomerData] = useState({});\n\n    useEffect(() => {\n        getCustomer(props.match.params.id);\n    }, [getCustomer]);\n\n    useEffect(() => {\n        if (customer.id) {\n            setCustomerData(customer);\n        }\n    }, [customer]);\n\n    return customerData.id ? (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid className=\"pb-3\">\n                    <Breadcrumb hasBack path=\"/customers\" title={customerData.name} item={\"Cliente\"}/>\n                    <Row>\n                        <Col md={7}>\n                            <Card id={'details'} className=\"mb-3 p-3\">\n                                <Row>\n                                    <Col md={12}>\n                                        <Row>\n                                            <Col xs={10}>\n                                                <h4 className=\"card-title text-info\">Descripción del cliente</h4>\n                                            </Col>\n                                            <Col md={2} className=\"text-right\">\n                                                <li className=\"list-inline-item\">\n                                                    <Link to={`/customer/${customerData.id}`} className=\"px-2 text-primary\">\n                                                        <i className=\"uil uil-pen font-size-18\"> </i>\n                                                    </Link>\n                                                </li>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col md={6}>\n                                        <label>Nombre: </label>\n                                        <span className=\"p-1\">{customerData.name}</span>\n                                        {customerData.isMayorist === true && (\n                                            <Tooltip placement=\"bottom\" title=\"Cliente mayorista\" aria-label=\"add\">\n                                                <i className={\"mdi mdi-crown font-size-18 mr-1 text-warning\"}> </i>\n                                            </Tooltip>\n                                        )}\n                                    </Col>\n                                    <Col md={6}>\n                                        <label>Documento: </label>\n                                        <span className=\"p-1\">{customerData.document}</span>\n                                    </Col>\n\n                                </Row>\n                                <hr/>\n                                <Row>\n                                    <Col xs={12}>\n                                        <h4 className=\"card-title text-info\">Datos de contacto</h4>\n                                    </Col>\n                                    <Col md={6}>\n                                        <label>Email: </label>\n                                        <span className=\"p-1\">{customerData.email}</span>\n                                    </Col>\n                                    <Col md={6}>\n                                        <label>Teléfono Celular: </label>\n                                        <span className=\"p-1\">{customerData.cellphone}</span>\n                                    </Col>\n                                    <Col md={6}>\n                                        <label>Teléfono Residencial: </label>\n                                        <span className=\"p-1\">{customerData.phone}</span>\n                                    </Col>\n                                </Row>\n                                <hr/>\n                                <Row>\n                                    <Col xs={12}>\n                                        <h4 className=\"card-title text-info\">Localidad</h4>\n                                    </Col>\n                                    <Col md={6}>\n                                        <label>Departamento: </label>\n                                        <span className=\"p-1\">{customerData.state?.name}</span>\n                                    </Col>\n                                    <Col md={6}>\n                                        <label>Municipio: </label>\n                                        <span className=\"p-1\">{customerData.municipality?.name}</span>\n                                    </Col>\n                                </Row>\n                                <hr/>\n                                <Row>\n                                    <Col xs={12} className=\"footer-details\">\n                                        {customerData.hasNotification && (\n                                            <Tooltip placement=\"bottom\" title=\"Recibe notificaciones\" aria-label=\"add\">\n                                                <span className=\"badge rounded-pill bg-info font-size-12 p-2\"><i className=\"fa fa-envelope\"> </i></span>\n                                            </Tooltip>\n                                        )}\n                                        <Tooltip placement=\"bottom\" title=\"Estado\" aria-label=\"add\">\n                                            <StatusField color={customerData.status === true ? STATUS_COLORS.SUCCESS : STATUS_COLORS.DANGER}>\n                                                {ConverterCustomerStatus(customerData.status)}\n                                            </StatusField>\n                                        </Tooltip>\n                                        <Tooltip placement=\"bottom\" title=\"Fecha creación\" aria-label=\"add\">\n                                            <small className=\"badge rounded-pill bg-light p-2\">{formatDate(customerData.createdAt)}</small>\n                                        </Tooltip>\n                                    </Col>\n                                </Row>\n                            </Card>\n                            <Observations/>\n                        </Col>\n                        <Col md={5}>\n                            <Card id={'orders'} className=\"p-3\">\n                                <OrderCardList customerId={customerData.id}/>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </React.Fragment>\n    ) : <NoDataIndication/>;\n}\n\nconst mapStateToProps = state => {\n    const {error, customer, loading} = state.Customer\n    return {error, customer, loading}\n}\n\nexport default withRouter(\n    connect(mapStateToProps, {getCustomer})(CustomerDetail)\n)\n\nCustomerDetail.propTypes = {\n    error: PropTypes.any,\n    history: PropTypes.object\n}","/home/dev/workspace/repositories/moie-admin/src/pages/Dashboard/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Customer/index.js",["745"],"import React from \"react\"\nimport { Container } from \"reactstrap\"\nimport CustomersList from \"./CustomerList/customers-list\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\nimport {CustomerFilter} from \"./CustomerFilter\";\nconst Customer = () => {\n\n    return (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid>\n                    <Breadcrumb path=\"/customers\" title={null} item=\"Clientes\" />\n                    <CustomersList />\n                </Container>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Customer\n","/home/dev/workspace/repositories/moie-admin/src/pages/Authentication/Login.js",["746","747","748","749"],"import PropTypes from 'prop-types'\nimport React, {useEffect} from \"react\"\n\nimport {Alert, Card, CardBody, Col, Container, Row, Spinner} from \"reactstrap\"\n\n// Redux\nimport {connect} from \"react-redux\"\nimport {Link, withRouter} from \"react-router-dom\"\n\n// availity-reactstrap-validation\nimport {AvField, AvForm} from \"availity-reactstrap-validation\"\n\n//Social Media Imports\n// import TwitterLogin from \"react-twitter-auth\"\n\n// actions\nimport {apiError, loginUser, socialLogin} from \"../../store/actions\"\n\n// import images\nimport logo from \"../../assets/images/logo-dark.png\"\nimport logolight from \"../../assets/images/logo-light.png\"\n\n//Import config\nimport {facebook, google} from \"../../config\"\n\nconst Login = (props) => {\n   // handleValidSubmit\n   const handleValidSubmit = (event, values) => {\n    console.log(values)\n    props.loginUser(values, props.history)\n  }\n\n  const signIn = (res, type) => {\n    const { socialLogin } = props\n    if (type === \"google\" && res) {\n      const postData = {\n        name: res.profileObj.name,\n        email: res.profileObj.email,\n        token: res.tokenObj.access_token,\n        idToken: res.tokenId,\n      }\n      socialLogin(postData, props.history, type)\n    } else if (type === \"facebook\" && res) {\n      const postData = {\n        name: res.name,\n        email: res.email,\n        token: res.accessToken,\n        idToken: res.tokenId,\n      }\n      socialLogin(postData, props.history, type)\n    }\n  }\n\n  //handleGoogleLoginResponse\n  const googleResponse = response => {\n    signIn(response, \"google\")\n  }\n\n  //handleTwitterLoginResponse\n  // const twitterResponse = e => {}\n\n  //handleFacebookLoginResponse\n  const facebookResponse = response => {\n    signIn(response, \"facebook\")\n  }\n\n  useEffect(() => {\n    document.body.className = \"authentication-bg\";\n    // remove classname when component will unmount\n    return function cleanup() {\n      document.body.className = \"\";\n    };\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"home-btn d-none d-sm-block\">\n        <Link to=\"/\" className=\"text-dark\">\n          <i className=\"mdi mdi-home-variant h2\"></i>\n        </Link>\n      </div>\n      <div className=\"account-pages my-5 pt-sm-5\">\n        <Container>\n          <Row>\n            <Col lg={12}>\n              <div className=\"text-center\">\n                <Link to=\"/\" className=\"mb-5 d-block auth-logo\">\n                  <img src={logo} alt=\"\" height=\"80\" className=\"logo logo-dark\" />\n                  <img src={logolight} alt=\"\" height=\"80\" className=\"logo logo-light\" />\n                </Link>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"align-items-center justify-content-center\">\n            <Col md={8} lg={6} xl={5}>\n              <Card>\n\n                <CardBody className=\"p-4\">\n                  <div className=\"text-center mt-2\">\n                    <h5 className=\"text-primary\">Bienvenido!</h5>\n                    <p className=\"text-muted\">Inicia sesión con Lucy Moie.</p>\n                  </div>\n                  <div className=\"p-2 mt-4\">\n                    <AvForm\n                      className=\"form-horizontal\"\n                      onValidSubmit={(e, v) => {\n                        handleValidSubmit(e, v)\n                      }}\n                    >\n                      {props.error && typeof props.error === \"string\" ? (\n                        <Alert color=\"danger\">{props.error}</Alert>\n                      ) : null}\n\n                      <div className=\"mb-3\">\n                        <AvField\n                          name=\"username\"\n                          label=\"Nombre de Usuario\"\n                          value=\"\"\n                          className=\"form-control\"\n                          placeholder=\"Login\"\n                          type=\"text\"\n                          required\n                        />\n                      </div>\n\n                      <div className=\"mb-3\">\n                      <div className=\"float-end\">\n                          <Link to=\"/forgot-password\" className=\"text-muted\">Olvidaste contraseña?</Link>\n                        </div>\n                        <AvField\n                          name=\"password\"\n                          label=\"Contraseña\"\n                          value=\"\"\n                          type=\"password\"\n                          required\n                          placeholder=\"*********\"\n                        />\n                      </div>\n\n                      <div className=\"form-check\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"form-check-input\"\n                          id=\"customControlInline\"\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"customControlInline\"\n                        >\n                          Recuerdame\n                        </label>\n                      </div>\n\n                      <div className=\"mt-3\">\n                        <button\n                          className=\"btn btn-primary w-100 waves-effect waves-light\"\n                          type=\"submit\"\n                        >\n                          {props.loading && <Spinner size=\"sm\" className=\"m-1\" color=\"white\"/>}\n                          Log In\n                        </button>\n                      </div>\n\n                    </AvForm>\n\n                  </div>\n                </CardBody>\n              </Card>\n              <div className=\"mt-5 text-center\">\n                <p>© {new Date().getFullYear()} Lucy Modas <i\n                  className=\"mdi mdi-heart text-danger\"></i> Moie V2.0.1\n                        </p>\n              </div>\n            </Col>\n          </Row>\n\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = state => {\n  const { error, loading } = state.Login\n  return { error, loading }\n}\n\nexport default withRouter(\n  connect(mapStateToProps, { loginUser, apiError, socialLogin })(Login)\n)\n\nLogin.propTypes = {\n  error: PropTypes.any,\n  history: PropTypes.object,\n  loginUser: PropTypes.func,\n  socialLogin: PropTypes.func\n}\n","/home/dev/workspace/repositories/moie-admin/src/pages/Authentication/Logout.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Authentication/Register.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Authentication/user-profile.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Authentication/ForgetPassword.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/VerticalLayout/Header.js",["750","751","752","753","754","755","756","757","758","759","760"],"import PropTypes from 'prop-types'\nimport React, { useState } from \"react\"\n\nimport { connect } from \"react-redux\"\nimport { Form, Input, Button, Row, Col } from \"reactstrap\"\n\nimport { Link } from \"react-router-dom\"\n\n// Reactstrap\nimport { Dropdown, DropdownToggle, DropdownMenu } from \"reactstrap\"\n\n// Import menuDropdown\nimport LanguageDropdown from \"../CommonForBoth/TopbarDropdown/LanguageDropdown\"\nimport NotificationDropdown from \"../CommonForBoth/TopbarDropdown/NotificationDropdown\"\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\"\n\nimport logoSm from \"../../assets/images/logo-sm.png\"\nimport logoDark from \"../../assets/images/logo-dark.png\"\nimport logoLight from \"../../assets/images/logo-light.png\"\n\n// import images\nimport github from \"../../assets/images/brands/github.png\"\nimport bitbucket from \"../../assets/images/brands/bitbucket.png\"\nimport dribbble from \"../../assets/images/brands/dribbble.png\"\nimport dropbox from \"../../assets/images/brands/dropbox.png\"\nimport mail_chimp from \"../../assets/images/brands/mail_chimp.png\"\nimport slack from \"../../assets/images/brands/slack.png\"\n\n//i18n\nimport { withTranslation } from \"react-i18next\"\n\n// Redux Store\nimport {\n  showRightSidebarAction,\n  toggleLeftmenu,\n  changeSidebarType,\n} from \"../../store/actions\"\n\nconst Header = props => {\n  const [search, setsearch] = useState(false)\n  const [socialDrp, setsocialDrp] = useState(false)\n\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)\n\n  function toggleFullscreen() {\n    if (\n      !document.fullscreenElement &&\n      /* alternative standard method */ !document.mozFullScreenElement &&\n      !document.webkitFullscreenElement\n    ) {\n      // current working methods\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen()\n      } else if (document.documentElement.mozRequestFullScreen) {\n        document.documentElement.mozRequestFullScreen()\n      } else if (document.documentElement.webkitRequestFullscreen) {\n        document.documentElement.webkitRequestFullscreen(\n          Element.ALLOW_KEYBOARD_INPUT\n        )\n      }\n    } else {\n      if (document.cancelFullScreen) {\n        document.cancelFullScreen()\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen()\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen()\n      }\n    }\n  }\n\n  function tToggle() {\n    props.toggleLeftmenu(!props.leftMenu)\n    if (props.leftSideBarType === \"default\") {\n      props.changeSidebarType(\"condensed\", isMobile)\n    } else if (props.leftSideBarType === \"condensed\") {\n      props.changeSidebarType(\"default\", isMobile)\n    }\n  }\n  return (\n    <React.Fragment>\n      <header id=\"page-topbar\">\n        <div className=\"navbar-header\">\n          <div className=\"d-flex\">\n            <div className=\"navbar-brand-box\">\n              <Link to=\"/\" className=\"logo logo-dark\">\n                <span className=\"logo-sm\">\n                  <img src={logoSm} alt=\"\" height=\"22\" />\n                </span>\n                <span className=\"logo-lg\">\n                  <img src={logoDark} alt=\"\" height=\"20\" />\n                </span>\n              </Link>\n\n              <Link to=\"/\" className=\"logo logo-light\">\n                <span className=\"logo-sm\">\n                  <img src={logoSm} alt=\"\" height=\"22\" />\n                </span>\n                <span className=\"logo-lg\">\n                  <img src={logoLight} alt=\"\" height=\"20\" />\n                </span>\n              </Link>\n            </div>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                tToggle()\n              }}\n              className=\"btn btn-sm px-3 font-size-16 header-item waves-effect vertical-menu-btn\"\n              id=\"vertical-menu-btn\"\n            >\n              <i className=\"fa fa-fw fa-bars\" />\n            </button>\n\n            <Form className=\"app-search d-none d-lg-block\">\n              <div className=\"position-relative\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder={props.t(\"Search\") + \"...\"}\n                />\n                <span className=\"uil-search\"></span>\n              </div>\n            </Form>\n          </div>\n\n          <div className=\"d-flex\">\n\n            <Dropdown\n              className=\"d-inline-block d-lg-none ms-2\"\n              onClick={() => {\n                setsearch(!search)\n              }}\n              type=\"button\"\n            >\n              <DropdownToggle\n                className=\"btn header-item noti-icon waves-effect\"\n                id=\"page-header-search-dropdown\"\n                tag=\"button\"\n              > <i className=\"uil-search\" />\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-lg dropdown-menu-end p-0\">\n                <Form className=\"p-3\">\n                  <div className=\"form-group m-0\">\n                    <div className=\"input-group\">\n                      <Input type=\"text\" className=\"form-control\" placeholder=\"Search ...\" aria-label=\"Recipient's username\" />\n                      <div className=\"input-group-append\">\n                        <Button className=\"btn btn-primary\" type=\"submit\"><i className=\"mdi mdi-magnify\"></i></Button>\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </DropdownMenu>\n            </Dropdown>\n\n{/*            <LanguageDropdown />*/}\n\n{/*            <Dropdown\n              className=\"d-none d-lg-inline-block ms-1\"\n              isOpen={socialDrp}\n              toggle={() => {\n                setsocialDrp(!socialDrp)\n              }}\n            >\n              <DropdownToggle\n                className=\"btn header-item noti-icon waves-effect\"\n                tag=\"button\"\n              >\n                <i className=\"uil-apps\"></i>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-lg dropdown-menu-end\" right>\n                <div className=\"px-lg-2\">\n                  <Row className=\"g-0\">\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={github} alt=\"Github\" />\n                        <span>GitHub</span>\n                      </Link>\n                    </Col>\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={bitbucket} alt=\"bitbucket\" />\n                        <span>Bitbucket</span>\n                      </Link>\n                    </Col>\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={dribbble} alt=\"dribbble\" />\n                        <span>Dribbble</span>\n                      </Link>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"g-0\">\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={dropbox} alt=\"dropbox\" />\n                        <span>Dropbox</span>\n                      </Link>\n                    </Col>\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={mail_chimp} alt=\"mail_chimp\" />\n                        <span>Mail Chimp</span>\n                      </Link>\n                    </Col>\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={slack} alt=\"slack\" />\n                        <span>Slack</span>\n                      </Link>\n                    </Col>\n                  </Row>\n                </div>\n              </DropdownMenu>\n            </Dropdown>*/}\n\n            <Dropdown className=\"d-none d-lg-inline-block ms-1\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  toggleFullscreen()\n                }}\n                className=\"btn header-item noti-icon waves-effect\"\n                data-toggle=\"fullscreen\"\n              >\n                <i className=\"uil-minus-path\"></i>\n              </button>\n            </Dropdown>\n\n            <NotificationDropdown />\n\n            <ProfileMenu />\n\n            <div onClick={() => {\n              props.showRightSidebarAction(!props.showRightSidebar)\n            }}\n              className=\"dropdown d-inline-block\">\n              <button type=\"button\" className=\"btn header-item noti-icon right-bar-toggle waves-effect\">\n                <i className=\"uil-cog\"></i>\n              </button>\n            </div>\n\n          </div>\n        </div>\n      </header>\n    </React.Fragment>\n  )\n}\n\nHeader.propTypes = {\n  changeSidebarType: PropTypes.func,\n  leftMenu: PropTypes.any,\n  leftSideBarType: PropTypes.any,\n  showRightSidebar: PropTypes.any,\n  showRightSidebarAction: PropTypes.func,\n  t: PropTypes.any,\n  toggleLeftmenu: PropTypes.func\n}\n\nconst mapStatetoProps = state => {\n  const {\n    layoutType,\n    showRightSidebar,\n    leftMenu,\n    leftSideBarType,\n  } = state.Layout\n  return { layoutType, showRightSidebar, leftMenu, leftSideBarType }\n}\n\nexport default connect(mapStatetoProps, {\n  showRightSidebarAction,\n  toggleLeftmenu,\n  changeSidebarType,\n})(withTranslation()(Header))\n","/home/dev/workspace/repositories/moie-admin/src/components/HorizontalLayout/Navbar.js",["761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786"],"import PropTypes from \"prop-types\"\nimport React, { useState, useEffect } from \"react\"\nimport { Row, Col, Collapse } from \"reactstrap\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport classname from \"classnames\"\n\n//i18n\nimport { withTranslation } from \"react-i18next\"\n\nimport { connect } from \"react-redux\"\n\nconst Navbar = props => {\n  const [ui, setui] = useState(false)\n  const [app, setapp] = useState(false)\n  const [email, setemail] = useState(false)\n  const [ecommerce, setecommerce] = useState(false)\n  const [contact, setcontact] = useState(false)\n  const [component, setcomponent] = useState(false)\n  const [form, setform] = useState(false)\n  const [table, settable] = useState(false)\n  const [chart, setchart] = useState(false)\n  const [icon, seticon] = useState(false)\n  const [map, setmap] = useState(false)\n  const [extra, setextra] = useState(false)\n  const [invoice, setinvoice] = useState(false)\n  const [auth, setauth] = useState(false)\n  const [utility, setutility] = useState(false)\n\n  useEffect(() => {\n    var matchingMenuItem = null\n    var ul = document.getElementById(\"navigation\")\n    var items = ul.getElementsByTagName(\"a\")\n    for (var i = 0; i < items.length; ++i) {\n      if (props.location.pathname === items[i].pathname) {\n        matchingMenuItem = items[i]\n        break\n      }\n    }\n    if (matchingMenuItem) {\n      activateParentDropdown(matchingMenuItem)\n    }\n  })\n  function activateParentDropdown(item) {\n    item.classList.add(\"active\")\n    const parent = item.parentElement\n    if (parent) {\n      parent.classList.add(\"active\") // li\n      const parent2 = parent.parentElement\n      parent2.classList.add(\"active\") // li\n      const parent3 = parent2.parentElement\n      if (parent3) {\n        parent3.classList.add(\"active\") // li\n        const parent4 = parent3.parentElement\n        if (parent4) {\n          parent4.classList.add(\"active\") // li\n          const parent5 = parent4.parentElement\n          if (parent5) {\n            parent5.classList.add(\"active\") // li\n            const parent6 = parent5.parentElement\n            if (parent6) {\n              parent6.classList.add(\"active\") // li\n            }\n          }\n        }\n      }\n    }\n    return false\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"container-fluid\">\n        <div className=\"topnav\">\n          <nav\n            className=\"navbar navbar-light navbar-expand-lg topnav-menu\"\n            id=\"navigation\"\n          >\n            <Collapse\n              isOpen={props.leftMenu}\n              className=\"navbar-collapse\"\n              id=\"topnav-menu-content\"\n            >\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                  <Link\n                    className=\"nav-link\"\n                    to=\"/dashboard\"\n                  >\n                    <i className=\"uil-home-alt me-2\"></i>\n                    {\" \"}{props.t(\"Dashboard\")}\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link\n                      className=\"nav-link\"\n                      to=\"/products\"\n                  >\n                    <i className=\"uil-box me-2\"></i>\n                    {\" \"}{props.t(\"Productos\")}\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link\n                      className=\"nav-link\"\n                      to=\"/customers\"\n                  >\n                    <i className=\"uil-users-alt me-2\"></i>\n                    {\" \"}{props.t(\"Clientes\")}\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link\n                      className=\"nav-link\"\n                      to=\"/orders\"\n                  >\n                    <i className=\"uil-shopping-cart-alt me-2\"></i>\n                    {\" \"}{props.t(\"Ordenes\")}\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link\n                      className=\"nav-link\"\n                      to=\"/bills\"\n                  >\n                    <i className=\"uil-bill me-2\"></i>\n                    {\" \"}{props.t(\"Facturación\")}\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link\n                      className=\"nav-link\"\n                      to=\"/reports\"\n                  >\n                    <i className=\"uil-graph-bar me-2\"></i>\n                    {\" \"}{props.t(\"Reportes\")}\n                  </Link>\n                </li>\n\n                <li className=\"nav-item dropdown\">\n                  <Link\n                      className=\"nav-link dropdown-toggle arrow-none\"\n                      to=\"#\"\n                      onClick={e => {\n                        e.preventDefault()\n                        setextra(!extra)\n                      }}\n                  >\n                    <i className=\"uil-cog me-2\"></i>\n                    {props.t(\"Sistema\")} <div className=\"arrow-down\"></div>\n                  </Link>\n                  <div className={classname(\"dropdown-menu\", { show: extra })}>\n\n                    <div className=\"dropdown\">\n                      <Link\n                          to=\"/#\"\n                          className=\"dropdown-item dropdown-toggle arrow-none\"\n                          onClick={e => {\n                            e.preventDefault()\n                            setauth(!auth)\n                          }}\n                      >\n                        {props.t(\"Autenticación\")}{\" \"}\n                        <div className=\"arrow-down\"></div>\n                      </Link>\n                      <div\n                          className={classname(\"dropdown-menu\", { show: auth })}\n                      >\n                        <Link to=\"#\" className=\"dropdown-item\">\n                          {props.t(\"Usuarios\")}\n                        </Link>\n                        <Link to=\"#\" className=\"dropdown-item\">\n                          {props.t(\"Roles\")}\n                        </Link>\n                      </div>\n                    </div>\n\n                    <div className=\"dropdown\">\n                      <Link\n                          className=\"dropdown-item dropdown-toggle arrow-none\"\n                          to=\"#\"\n                          onClick={e => {\n                            e.preventDefault()\n                            setutility(!utility)\n                          }}\n                      >\n                        {props.t(\"Localidades\")} <div className=\"arrow-down\"></div>\n                      </Link>\n                      <div\n                          className={classname(\"dropdown-menu\", {\n                            show: utility,\n                          })}\n                      >\n                        <Link to=\"#\" className=\"dropdown-item\">\n                          {props.t(\"Localidades de entrega\")}\n                        </Link>\n                        <Link to=\"/states\" className=\"dropdown-item\">\n                          {props.t(\"Estados\")}\n                        </Link>\n                        <Link to=\"/municipalities\" className=\"dropdown-item\">\n                          {props.t(\"Municipios\")}\n                        </Link>\n                      </div>\n                    </div>\n\n                    <div className=\"dropdown\">\n                      <Link\n                          className=\"dropdown-item dropdown-toggle arrow-none\"\n                          to=\"#\"\n                          onClick={e => {\n                            e.preventDefault()\n                            setutility(!utility)\n                          }}\n                      >\n                        {props.t(\"Productos\")} <div className=\"arrow-down\"></div>\n                      </Link>\n                      <div\n                          className={classname(\"dropdown-menu\", {\n                            show: utility,\n                          })}\n                      >\n                        <Link to=\"/categories\" className=\"dropdown-item\">\n                          {props.t(\"Categorias\")}\n                        </Link>\n                        <Link to=\"/configs\" className=\"dropdown-item\">\n                          {props.t(\"Configuraciones\")}\n                        </Link>\n                        {/*<Link to=\"#\" className=\"dropdown-item\">\n                          {props.t(\"Proveedores\")}\n                        </Link>*/}\n                      </div>\n                    </div>\n\n\n                  </div>\n                </li>\n                </ul>\n            </Collapse>\n          </nav>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nNavbar.propTypes = {\n  leftMenu: PropTypes.any,\n  location: PropTypes.any,\n  menuOpen: PropTypes.any,\n  t: PropTypes.any,\n}\n\nconst mapStatetoProps = state => {\n  const { leftMenu } = state.Layout\n  return { leftMenu }\n}\n\nexport default withRouter(\n  connect(mapStatetoProps, {})(withTranslation()(Navbar))\n)\n","/home/dev/workspace/repositories/moie-admin/src/components/HorizontalLayout/Header.js",["787","788","789","790","791","792","793","794","795","796","797","798","799","800","801"],"import React, { useState } from \"react\"\nimport PropTypes from 'prop-types'\n\nimport { connect } from \"react-redux\"\n\nimport {BrowserRouter as Router, Link} from \"react-router-dom\"\n\n// Redux Store\nimport { showRightSidebarAction, toggleLeftmenu } from \"../../store/actions\"\n// reactstrap\nimport { Row, Col, Dropdown, DropdownToggle, DropdownMenu } from \"reactstrap\"\n\n// Import menuDropdown\nimport LanguageDropdown from \"../CommonForBoth/TopbarDropdown/LanguageDropdown\"\nimport NotificationDropdown from \"../CommonForBoth/TopbarDropdown/NotificationDropdown\"\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\"\n\nimport logo from \"../../assets/images/logo-sm.png\"\nimport logoLight from \"../../assets/images/logo-light.png\"\nimport logoDark from \"../../assets/images/logo-dark.png\"\n\n// import images\nimport github from \"../../assets/images/brands/github.png\"\nimport bitbucket from \"../../assets/images/brands/bitbucket.png\"\nimport dribbble from \"../../assets/images/brands/dribbble.png\"\nimport dropbox from \"../../assets/images/brands/dropbox.png\"\nimport mail_chimp from \"../../assets/images/brands/mail_chimp.png\"\nimport slack from \"../../assets/images/brands/slack.png\"\n\n//i18n\nimport { withTranslation } from \"react-i18next\"\n\n\nconst Header = props => {\n  const [isSearch, setSearch] = useState(false)\n  const [socialDrp, setsocialDrp] = useState(false)\n\n  function toggleFullscreen() {\n    if (\n      !document.fullscreenElement &&\n      /* alternative standard method */ !document.mozFullScreenElement &&\n      !document.webkitFullscreenElement\n    ) {\n      // current working methods\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen()\n      } else if (document.documentElement.mozRequestFullScreen) {\n        document.documentElement.mozRequestFullScreen()\n      } else if (document.documentElement.webkitRequestFullscreen) {\n        document.documentElement.webkitRequestFullscreen(\n          Element.ALLOW_KEYBOARD_INPUT\n        )\n      }\n    } else {\n      if (document.cancelFullScreen) {\n        document.cancelFullScreen()\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen()\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen()\n      }\n    }\n  }\n  return (\n    <React.Fragment>\n        <div className=\"navbar-header\">\n          <div className=\"d-flex\">\n            <div className=\"navbar-brand-box\">\n              <Link to=\"/\" className=\"logo logo-dark\">\n                <span className=\"logo-sm\">\n                  <img src={logo} alt=\"\" height=\"22\" />\n                </span>\n                <span className=\"logo-lg\">\n                  <img src={logoDark} alt=\"\" height=\"17\" />\n                </span>\n              </Link>\n\n              <Link to=\"/\" className=\"logo logo-light\">\n                <span className=\"logo-sm\">\n                  <img src={logo} alt=\"\" height=\"22\" />\n                </span>\n                <span className=\"logo-lg\">\n                  <img src={logoLight} alt=\"\" height=\"30\" />\n                </span>\n              </Link>\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-sm px-3 font-size-16 d-lg-none header-item waves-effect waves-light\"\n              data-toggle=\"collapse\"\n              onClick={() => {\n                props.toggleLeftmenu(!props.leftMenu)\n              }}\n              data-target=\"#topnav-menu-content\"\n            >\n              <i className=\"fa fa-fw fa-bars\"/>\n            </button>\n\n            <form className=\"app-search d-none d-lg-block\">\n              <div className=\"position-relative\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Buscar...\"\n                />\n                <span className=\"uil-search\"></span>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"d-flex\">\n            <div className=\"dropdown d-inline-block d-lg-none ms-2\">\n              <button\n                type=\"button\"\n                className=\"btn header-item noti-icon waves-effect\"\n                id=\"page-header-search-dropdown\"\n                onClick={() => setSearch(!isSearch)}\n              >\n                <i className=\"uil-search\"></i>\n              </button>\n              <div\n                className={\n                  isSearch\n                    ? \"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0 show\"\n                    : \"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\"\n                }\n                aria-labelledby=\"page-header-search-dropdown\"\n              >\n                <form className=\"p-3\">\n                  <div className=\"form-group m-0\">\n                    <div className=\"input-group\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder={props.t(\"Search\") + \"...\"}\n                        aria-label=\"Recipient's username\"\n                      />\n                      <div className=\"input-group-append\">\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                          <i className=\"mdi mdi-magnify\"/>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n\n{/*            <LanguageDropdown />*/}\n\n{/*            <Dropdown\n              className=\"d-none d-lg-inline-block ms-1\"\n              isOpen={socialDrp}\n              toggle={() => {\n                setsocialDrp(!socialDrp)\n              }}\n            >\n              <DropdownToggle\n                className=\"btn header-item noti-icon waves-effect\"\n                caret\n                tag=\"button\"\n              >\n                <i className=\"bx bx-customize\"/>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-lg dropdown-menu-end\" right>\n                <div className=\"px-lg-2\">\n                  <Row className=\"g-0\">\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={github} alt=\"Github\" />\n                        <span>GitHub</span>\n                      </Link>\n                    </Col>\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={bitbucket} alt=\"bitbucket\" />\n                        <span>Bitbucket</span>\n                      </Link>\n                    </Col>\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={dribbble} alt=\"dribbble\" />\n                        <span>Dribbble</span>\n                      </Link>\n                    </Col>\n                  </Row>\n                  <Row className=\"g-0\">\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={dropbox} alt=\"dropbox\" />\n                        <span>Dropbox</span>\n                      </Link>\n                    </Col>\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={mail_chimp} alt=\"mail_chimp\" />\n                        <span>Mail Chimp</span>\n                      </Link>\n                    </Col>\n                    <Col>\n                      <Link className=\"dropdown-icon-item\" to=\"#\">\n                        <img src={slack} alt=\"slack\" />\n                        <span>Slack</span>\n                      </Link>\n                    </Col>\n                  </Row>\n                </div>\n              </DropdownMenu>\n            </Dropdown>*/}\n\n            <div className=\"dropdown d-none d-lg-inline-block ms-1\">\n              <button\n                type=\"button\"\n                className=\"btn header-item noti-icon waves-effect\"\n                onClick={() => {\n                  toggleFullscreen()\n                }}\n                data-toggle=\"fullscreen\"\n              >\n                <i className=\"uil-minus-path\"></i>\n              </button>\n            </div>\n\n            <NotificationDropdown />\n\n            <ProfileMenu />\n\n{/*            <div className=\"dropdown d-inline-block\">\n              <button\n                onClick={() => {\n                  props.showRightSidebarAction(!props.showRightSidebar)\n                }}\n                type=\"button\"\n                className=\"btn header-item noti-icon right-bar-toggle waves-effect\"\n              >\n                <i className=\"uil-cog\"></i>\n              </button>\n            </div>*/}\n          </div>\n        </div>\n\n    </React.Fragment>\n  )\n}\n\nHeader.propTypes = {\n  leftMenu: PropTypes.any,\n  showRightSidebar: PropTypes.any,\n  showRightSidebarAction: PropTypes.func,\n  t: PropTypes.any,\n  toggleLeftmenu: PropTypes.func\n}\n\nconst mapStatetoProps = state => {\n  const { layoutType, showRightSidebar, leftMenu } = state.Layout\n  return { layoutType, showRightSidebar, leftMenu }\n}\n\nexport default connect(mapStatetoProps, {\n  showRightSidebarAction,\n  toggleLeftmenu,\n})(withTranslation()(Header))\n","/home/dev/workspace/repositories/moie-admin/src/components/CommonForBoth/Rightbar.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/layout/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/layout/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/customer/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/customer/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/product/reducer.js",["802"],"import {\n    GET_PRODUCT,\n    GET_PRODUCT_FAILED,\n    GET_PRODUCT_SUCCESS,\n    GET_PRODUCTS, GET_PRODUCTS_FAILED, GET_PRODUCTS_SUCCESS, QUERY_PRODUCTS, QUERY_PRODUCTS_FAILED, QUERY_PRODUCTS_SUCCESS,\n    REGISTER_PRODUCT,\n    REGISTER_PRODUCT_FAILED,\n    REGISTER_PRODUCT_SUCCESS, RESET_PRODUCT,\n    UPDATE_PRODUCT, UPDATE_PRODUCT_FAILED,\n    UPDATE_PRODUCT_SUCCESS\n} from \"./actionTypes\";\nimport {RESET_CUSTOMERS} from \"../customer/actionTypes\";\n\nconst initialState = {\n    error: \"\",\n    loading: false,\n    meta: {},\n    products: [],\n    product: {},\n    custom: {\n        loading: false,\n        meta: {},\n        data: {}\n    },\n    refresh: false\n}\n\nconst product = (state = initialState, action) => {\n    switch (action.type) {\n        case RESET_PRODUCT:\n            return {\n                ...initialState\n            }\n        case GET_PRODUCTS:\n            return {\n                ...state,\n                loading: true,\n            }\n        case GET_PRODUCTS_FAILED:\n            return {\n                ...state,\n                error: action.payload,\n                loading: false,\n            }\n        case GET_PRODUCTS_SUCCESS:\n            return {\n                ...state,\n                products: action.payload,\n                meta: action.meta,\n                loading: false,\n            }\n        case QUERY_PRODUCTS:\n            return {\n                ...state,\n                custom: {\n                    ...state.custom,\n                    loading: true\n                }\n            }\n        case QUERY_PRODUCTS_FAILED:\n            return {\n                ...state,\n                custom: {\n                    ...state.custom,\n                    error: action.payload,\n                    loading: false,\n                }\n            }\n        case QUERY_PRODUCTS_SUCCESS:\n            const data = {...state.custom.data};\n            data[action.node] = action.payload;\n\n            return {\n                ...state,\n                custom: {\n                    ...state.custom,\n                    data: data,\n                    meta: action.meta,\n                    loading: false\n                }\n            }\n        case GET_PRODUCT:\n            return {\n                ...state,\n                refresh: false,\n                loading: true,\n            }\n        case GET_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                product: action.payload,\n                loading: false,\n            }\n        case GET_PRODUCT_FAILED:\n            return {\n                ...state,\n                loading: false,\n            }\n        case REGISTER_PRODUCT:\n            state = {\n                ...state,\n                loading: true,\n            }\n            break\n        case REGISTER_PRODUCT_SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                product: action.payload\n            }\n            break\n        case REGISTER_PRODUCT_FAILED:\n            state = {\n                ...state,\n                loading: false,\n            }\n            break\n        case UPDATE_PRODUCT:\n            state = {\n                ...state,\n                loading: true,\n            }\n            break\n        case UPDATE_PRODUCT_SUCCESS:\n            state = {\n                ...state,\n                refresh: true,\n                loading: false,\n            }\n            break\n        case UPDATE_PRODUCT_FAILED:\n            state = {\n                ...state,\n                loading: false,\n            }\n            break\n        default:\n            state = {...state}\n            break\n    }\n    return state\n}\n\nexport default product\n","/home/dev/workspace/repositories/moie-admin/src/store/product/saga.js",["803"],"import {all, call, fork, put, takeEvery} from \"redux-saga/effects\"\n\n//Account Redux states\nimport {GET_PRODUCTS, GET_PRODUCT, REGISTER_PRODUCT, UPDATE_PRODUCT, QUERY_PRODUCTS, QUERY_PENDING_PRODUCTS} from \"./actionTypes\"\n\nimport {\n    getProductsSuccess,\n    getProductsFailed,\n    registerProductSuccess,\n    getProductSuccess,\n    getProductFailed,\n    registerProductFailed,\n    updateProductSuccess,\n    updateProductFail, queryProductsSuccess, queryProductsFailed\n} from \"./actions\"\n\nimport {\n    registerProductApi,\n    updateProductApi,\n    fetchProductApi,\n    fetchProductsApi, getProductsPendingApi\n} from \"../../helpers/backend_helper\"\n\nimport Conditionals from \"../../common/conditionals\";\nimport {showResponseMessage} from \"../../helpers/service\";\n\n/**\n * *  Configuración de CRUD Saga (Realizar configuración para cada uno de las replicas)\n*/\n\nconst ACTION_NAME_QUERY_PENDING_PRODUCTS =   QUERY_PENDING_PRODUCTS;\nconst ACTION_NAME_QUERY      =   QUERY_PRODUCTS;\nconst ACTION_NAME_LIST      =   GET_PRODUCTS;\nconst ACTION_NAME_GET       =   GET_PRODUCT;\nconst ACTION_NAME_CREATE    =   REGISTER_PRODUCT;\nconst ACTION_NAME_UPDATE    =   UPDATE_PRODUCT;\n\nconst PENDING_PRODUCTS_API_REQUEST   =   getProductsPendingApi;\nconst LIST_API_REQUEST      =   fetchProductsApi;\nconst GET_API_REQUEST       =   fetchProductApi;\nconst POST_API_REQUEST      =   registerProductApi;\nconst PUT_API_REQUEST       =   updateProductApi;\n\n//actions\nconst QUERY_SUCCESS_ACTION  =   queryProductsSuccess;\nconst QUERY_FAILED_ACTION   =   queryProductsFailed;\nconst LIST_SUCCESS_ACTION   =   getProductsSuccess;\nconst LIST_FAILED_ACTION    =   getProductsFailed;\nconst GET_SUCCESS_ACTION    =   getProductSuccess;\nconst GET_FAILED_ACTION     =   getProductFailed;\nconst CREATE_SUCCESS_ACTION =   registerProductSuccess;\nconst CREATE_FAILED_ACTION  =   registerProductFailed;\nconst UPDATE_SUCCESS_ACTION =   updateProductSuccess;\nconst UPDATE_FAILED_ACTION  =   updateProductFail;\n\n\nconst LIST_URL = \"/products\";\n\nfunction* get({ id }) {\n    try {\n        const response = yield call(GET_API_REQUEST, { id });\n        yield put(GET_SUCCESS_ACTION(response))\n    } catch (error) {\n        yield put(GET_FAILED_ACTION(error))\n    }\n}\n\n\nfunction* fetch({conditional, limit, offset}) {\n    try {\n        const cond = Conditionals.getConditionalFormat(conditional);\n        const query = Conditionals.buildHttpGetQuery(cond, limit, offset);\n        const response = yield call(LIST_API_REQUEST, query)\n        yield put(LIST_SUCCESS_ACTION(response.data, response.meta));\n    } catch (error) {\n        yield put(LIST_FAILED_ACTION(error))\n    }\n}\nfunction* queryData({params ={}, node='products'}) {\n    try {\n        const response = yield call(LIST_API_REQUEST, params)\n        yield put(QUERY_SUCCESS_ACTION(response.data, response.meta, node));\n    } catch (error) {\n        yield put(QUERY_FAILED_ACTION(error))\n    }\n}\nfunction* getPendingProducts({id}) {\n    try {\n        const response = yield call(PENDING_PRODUCTS_API_REQUEST, id)\n        yield put(QUERY_SUCCESS_ACTION(response.data, response.meta, 'pendingProducts'));\n    } catch (error) {\n        yield put(QUERY_FAILED_ACTION(error))\n    }\n}\n\nfunction* register({ payload: { data, history } }) {\n    try {\n        const response = yield call(POST_API_REQUEST, data)\n        showResponseMessage(response, \"Producto creado!\");\n        yield put(CREATE_SUCCESS_ACTION(response))\n       //history.push(LIST_URL)\n    } catch (error) {\n        yield put(CREATE_FAILED_ACTION(error))\n    }\n}\n\nfunction* update({ payload: { id, data, history } }) {\n    try {\n        const response = yield call(PUT_API_REQUEST, id, data)\n        showResponseMessage(response, \"Producto actualizado!\")\n        yield put(UPDATE_SUCCESS_ACTION(response))\n        //history.push(LIST_URL)\n    } catch (error) {\n        yield put(UPDATE_FAILED_ACTION(error))\n    }\n}\n\nexport function* watchProduct() {\n    yield takeEvery(ACTION_NAME_CREATE, register);\n    yield takeEvery(ACTION_NAME_UPDATE, update);\n    yield takeEvery(ACTION_NAME_LIST, fetch);\n    yield takeEvery(ACTION_NAME_GET, get)\n    yield takeEvery(ACTION_NAME_QUERY, queryData)\n    yield takeEvery(ACTION_NAME_QUERY_PENDING_PRODUCTS, getPendingProducts)\n}\n\nfunction* productSaga() {\n    yield all([fork(watchProduct)])\n}\n\nexport default productSaga\n","/home/dev/workspace/repositories/moie-admin/src/store/location/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/location/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/sizes/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/sizes/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/category/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/category/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/productImages/reducer.js",["804"],"import {\n    GET_PRODUCT_IMAGE,\n    GET_PRODUCT_IMAGE_FAILED,\n    GET_PRODUCT_IMAGE_SUCCESS,\n    GET_PRODUCT_IMAGES,\n    GET_PRODUCT_IMAGES_FAILED,\n    GET_PRODUCT_IMAGES_SUCCESS,\n    REGISTER_PRODUCT_IMAGE,\n    REGISTER_PRODUCT_IMAGE_FAILED,\n    REGISTER_PRODUCT_IMAGE_SUCCESS, RESET_PRODUCT_IMAGES,\n    UPDATE_PRODUCT_IMAGE, UPDATE_PRODUCT_IMAGE_FAILED,\n    UPDATE_PRODUCT_IMAGE_SUCCESS\n} from \"./actionTypes\";\nimport {RESET_PRODUCT_SIZE} from \"../productSize/actionTypes\";\n\nconst initialState = {\n    error: \"\",\n    loading: false,\n    meta: {},\n    productImages: [],\n    productImage: {},\n    refresh: false\n}\n\nconst productImages = (state = initialState, action) => {\n    switch (action.type) {\n        case RESET_PRODUCT_IMAGES:\n            state = {\n                ...state,\n                loading: false,\n                refresh: false\n            }\n            break\n        case GET_PRODUCT_IMAGES:\n            return {\n                ...state,\n                loading: true,\n            }\n        case GET_PRODUCT_IMAGES_FAILED:\n            return {\n                ...state,\n                error: action.payload,\n                loading: true,\n            }\n\n        case GET_PRODUCT_IMAGES_SUCCESS:\n            return {\n                ...state,\n                productImages: action.payload,\n                meta: action.meta,\n                loading: false,\n            }\n        case GET_PRODUCT_IMAGE:\n            return {\n                ...state,\n                loading: true,\n            }\n        case GET_PRODUCT_IMAGE_SUCCESS:\n            return {\n                ...state,\n                productImage: action.payload,\n                loading: false,\n            }\n        case GET_PRODUCT_IMAGE_FAILED:\n            return {\n                ...state,\n                loading: false,\n            }\n        case REGISTER_PRODUCT_IMAGE:\n            state = {\n                ...state,\n                loading: true,\n            }\n            break\n        case REGISTER_PRODUCT_IMAGE_SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n            }\n            break\n        case REGISTER_PRODUCT_IMAGE_FAILED:\n            state = {\n                ...state,\n                loading: false,\n            }\n            break\n        case UPDATE_PRODUCT_IMAGE:\n            state = {\n                ...state,\n                loading: true,\n            }\n            break\n        case UPDATE_PRODUCT_IMAGE_SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                refresh: true\n            }\n            break\n        case UPDATE_PRODUCT_IMAGE_FAILED:\n            state = {\n                ...state,\n                loading: false,\n            }\n            break\n        default:\n            state = { ...state }\n            break\n    }\n    return state\n}\n\nexport default productImages\n","/home/dev/workspace/repositories/moie-admin/src/store/productImages/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/productSize/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/productSize/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/fieldOptions/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/fieldOptions/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/order/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/order/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Product/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/State/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/StateEdit/index.js",["805","806","807","808","809","810"],"import React, {useState, useEffect} from \"react\"\nimport {CardBody, Col, Container, Label, Row, Spinner} from \"reactstrap\"\nimport {AvForm, AvField} from \"availity-reactstrap-validation\"\nimport {Button, Card} from \"@material-ui/core\";\nimport {withRouter, Link} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {apiError} from \"../../store/auth/login/actions\";\nimport PropTypes from \"prop-types\";\nimport {getState, registerState, updateState} from \"../../store/location/actions\";\nimport {FieldSwitch, FieldText} from \"../../components/Fields\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\nimport {STATUS} from \"../../common/constants\";\nimport ButtonSubmit from \"../../components/Common/ButtonSubmit\";\n\nconst StateEdit = (props) => {\n    const {getState, estado} = props;\n    const [estadoData, setEstadoData] = useState({_status:STATUS.ACTIVE});\n    const isEdit = props.match.params.id;\n\n    //carga inicial\n    useEffect(() => {\n        if (isEdit && getState) {\n            getState(props.match.params.id);\n        }\n    }, [getState]);\n\n    //cargar la información del cliente\n    useEffect(() => {\n        if (estado.id && isEdit) {\n            setEstadoData({...estado, _status:estado.status});\n        }\n    }, [estado]);\n\n    const handleValidSubmit = (event, values) => {\n        const data = Object.assign({},values, {status:values._status});\n        delete data._status;\n        if (!isEdit) {\n            props.registerState(data, props.history)\n        } else {\n            props.updateState(props.match.params.id, data, props.history)\n        }\n    }\n    return (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid>\n                    <Breadcrumb hasBack path=\"/states\" title={estadoData.name} item={\"Estado\"}/>\n\n                    <AvForm className=\"needs-validation\" autoComplete=\"off\"\n                            onValidSubmit={(e, v) => {\n                                handleValidSubmit(e, v)\n                            }}>\n                        <Row>\n                            <Col xl=\"8\">\n                                <Card>\n                                    <CardBody>\n                                        <div className={\"mt-1 mb-5\"} style={{position: \"relative\"}}>\n                                            <div className={\"float-end\"}>\n                                                <Row>\n                                                    <Col>\n                                                        ¿Activo?\n                                                    </Col>\n                                                    <Col>\n                                                        <FieldSwitch defaultValue={estadoData._status} name={\"_status\"} />\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </div>\n                                        <Row>\n                                            <Col md=\"12\">\n                                                <div className=\"mb-3\">\n                                                    <Label htmlFor=\"field_name\">Nombre <span className=\"text-danger\">*</span></Label>\n                                                    <FieldText\n                                                        id={\"field_name\"}\n                                                        name={\"name\"}\n                                                        value={estadoData.name}\n                                                        minLength={3}\n                                                        maxLength={255}\n                                                        required\n                                                    />\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col md=\"6\">\n                                                <div className=\"mb-3\">\n                                                    <Label htmlFor=\"field_name\">Código DIAN <span className=\"text-danger\">*</span></Label>\n                                                    <FieldText\n                                                        id={\"field_dianCode\"}\n                                                        name={\"dianCode\"}\n                                                        value={estadoData.dianCode}\n                                                        minLength={2}\n                                                        maxLength={10}\n                                                        required\n                                                        />\n                                                </div>\n                                            </Col>\n                                            <Col md=\"6\">\n                                                <div className=\"mb-3\">\n                                                    <Label htmlFor=\"field_name\">Código ISO <span className=\"text-danger\">*</span></Label>\n                                                    <FieldText\n                                                        id={\"field_isoCode\"}\n                                                        name={\"isoCode\"}\n                                                        value={estadoData.isoCode}\n                                                        minLength={3}\n                                                        maxLength={5}\n                                                        required\n                                                    />\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col md={12} className=\"text-right\">\n                                                <ButtonSubmit loading={props.loading} />\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </AvForm>\n                </Container>\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    const {error, loading} = state.Location\n    return {error, estado: state.Location.state, loading}\n}\n\nexport default withRouter(\n    connect(mapStateToProps, {apiError, registerState, updateState, getState})(StateEdit)\n)\n\nStateEdit.propTypes = {\n    error: PropTypes.any,\n    history: PropTypes.object\n}\n\n","/home/dev/workspace/repositories/moie-admin/src/pages/Municipality/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/MunicipalityEdit/index.js",["811","812","813","814","815","816"],"import React, {useState, useEffect} from \"react\"\nimport {CardBody, Col, Container, Label, Row, Spinner} from \"reactstrap\"\nimport {AvForm, AvField} from \"availity-reactstrap-validation\"\nimport {Button, Card} from \"@material-ui/core\";\nimport {withRouter, Link} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {apiError} from \"../../store/auth/login/actions\";\nimport PropTypes from \"prop-types\";\nimport {getMunicipality, registerMunicipality, updateMunicipality, getStates} from \"../../store/location/actions\";\nimport {FieldSelect, FieldSwitch, FieldText} from \"../../components/Fields\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\nimport {STATUS} from \"../../common/constants\";\nimport {statesToOptions} from \"../../common/converters\";\nimport ButtonSubmit from \"../../components/Common/ButtonSubmit\";\n\nconst MunicipalityEdit = (props) => {\n    const {getMunicipality,getStates, municipality, states} = props;\n    const [municipalityData, setMunicipalityData] = useState({_status: STATUS.ACTIVE});\n    const [statesOptions, setStates] = useState([]);\n    const [municipalityDefault, setMunicipalityDefault] = useState(null);\n    const isEdit = props.match.params.id;\n\n    //carga inicial\n    useEffect(() => {\n        if (isEdit && getMunicipality) {\n            getMunicipality(props.match.params.id);\n        }\n        getStates();\n    }, [getMunicipality]);\n\n    //cargar la información del municipio\n    useEffect(() => {\n        if (municipality.id && isEdit) {\n            setMunicipalityData({...municipality, _status:municipality.status});\n\n            const defaultMunicipality = municipality.state?.id || null;\n            setMunicipalityDefault(defaultMunicipality);\n        }\n    }, [municipality]);\n\n    //cargar estados\n    useEffect(() => {\n        if (states && states.length > 0) {\n            setStates(statesToOptions(states));\n        } else {\n            setStates([]);\n        }\n    }, [states]);\n\n    const handleValidSubmit = (event, values) => {\n        const data = {...values, status: values._status, state: values.state.value};\n        delete data._status;\n        if (!isEdit) {\n            props.registerMunicipality(data, props.history)\n        } else {\n            props.updateMunicipality(props.match.params.id, data, props.history)\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid>\n                    <Breadcrumb hasBack path=\"/municipalities\" title={municipalityData.name} item={\"Estado\"}/>\n\n                    <AvForm className=\"needs-validation\" autoComplete=\"off\"\n                            onValidSubmit={(e, v) => {\n                                handleValidSubmit(e, v)\n                            }}>\n                        <Row>\n                            <Col xl=\"8\">\n                                <Card>\n                                    <CardBody>\n                                        <div className={\"mt-1 mb-5\"} style={{position: \"relative\"}}>\n                                            <div className={\"float-end\"}>\n                                                <Row>\n                                                    <Col>\n                                                        ¿Activo?\n                                                    </Col>\n                                                    <Col>\n                                                        <FieldSwitch defaultValue={municipalityData._status} name={\"_status\"}/>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </div>\n                                        <Row>\n                                            <Col md=\"12\">\n                                                <div className=\"mb-3\">\n                                                    <Label htmlFor=\"state\">Estado <span className=\"text-danger\">*</span></Label>\n                                                    <FieldSelect\n                                                        name={\"state\"}\n                                                        options={statesOptions}\n                                                        defaultValue={municipalityDefault}\n                                                        required\n                                                        isSearchable\n                                                    />\n                                                </div>\n                                            </Col>\n\n                                        </Row>\n                                        <Row>\n                                            <Col md=\"8\">\n                                                <div className=\"mb-3\">\n                                                    <Label htmlFor=\"field_name\">Nombre <span className=\"text-danger\">*</span></Label>\n                                                    <FieldText\n                                                        id={\"field_name\"}\n                                                        name={\"name\"}\n                                                        value={municipalityData.name}\n                                                        minLength={3}\n                                                        maxLength={255}\n                                                        required\n                                                    />\n                                                </div>\n                                            </Col>\n                                            <Col md=\"4\">\n                                                <div className=\"mb-3\">\n                                                    <Label htmlFor=\"field_name\">Código DIAN <span className=\"text-danger\">*</span></Label>\n                                                    <FieldText\n                                                        id={\"field_dianCode\"}\n                                                        name={\"dianCode\"}\n                                                        value={municipalityData.dianCode}\n                                                        minLength={3}\n                                                        maxLength={10}\n                                                        required\n                                                    />\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col md={12} className=\"text-right\">\n                                                <ButtonSubmit loading={props.loading} />\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </AvForm>\n                </Container>\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    const {error, municipality, states, loading} = state.Location\n    return {error, municipality, states, loading}\n}\n\nexport default withRouter(\n    connect(mapStateToProps, {apiError, getStates, registerMunicipality, updateMunicipality, getMunicipality})(MunicipalityEdit)\n)\n\nMunicipalityEdit.propTypes = {\n    error: PropTypes.any,\n    history: PropTypes.object\n}\n\n","/home/dev/workspace/repositories/moie-admin/src/pages/CategoryEdit/index.js",["817","818","819","820","821","822"],"import React, {useState, useEffect} from \"react\"\nimport {CardBody, Col, Container, Label, Row, Spinner} from \"reactstrap\"\nimport {AvForm, AvField} from \"availity-reactstrap-validation\"\nimport {Button, Card} from \"@material-ui/core\";\nimport {withRouter, Link} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {apiError} from \"../../store/auth/login/actions\";\nimport PropTypes from \"prop-types\";\nimport {getCategory, registerCategory, updateCategory} from \"../../store/category/actions\";\nimport {FieldSwitch, FieldText} from \"../../components/Fields\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\nimport {STATUS} from \"../../common/constants\";\nimport ButtonSubmit from \"../../components/Common/ButtonSubmit\";\n\nconst CategoryEdit = (props) => {\n    const {getCategory, category} = props;\n    const [categoryData, setCategory] = useState({_status:STATUS.ACTIVE});\n    const isEdit = props.match.params.id;\n\n    //carga inicial\n    useEffect(() => {\n        if (isEdit && getCategory) {\n            getCategory(props.match.params.id);\n        }\n    }, [getCategory]);\n\n    //cargar la información del cliente\n    useEffect(() => {\n        if (category.id && isEdit) {\n            setCategory({...category, _status:category.status});\n        }\n    }, [category]);\n\n    const handleValidSubmit = (event, values) => {\n        const data = {...values, status:values._status};\n        delete data._status;\n        if (!isEdit) {\n            props.registerCategory(data, props.history)\n        } else {\n            props.updateCategory(props.match.params.id, data, props.history)\n        }\n    }\n    return (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid>\n                    <Breadcrumb hasBack path=\"/categories\" title={categoryData.name} item={\"Category\"}/>\n\n                    <AvForm className=\"needs-validation\" autoComplete=\"off\" onValidSubmit={(e, v) => handleValidSubmit(e, v)}>\n                        <Row>\n                            <Col xl=\"8\">\n                                <Card>\n                                    <CardBody>\n                                        <div className={\"mt-1 mb-5\"} style={{position: \"relative\"}}>\n                                            <div className={\"float-end\"}>\n                                                <Row>\n                                                    <Col>\n                                                        ¿Activo?\n                                                    </Col>\n                                                    <Col>\n                                                        <FieldSwitch defaultValue={categoryData._status} name={\"_status\"} />\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </div>\n                                        <Row>\n                                            <Col md=\"8\">\n                                                <div className=\"mb-3\">\n                                                    <Label htmlFor=\"field_name\">Nombre <span className=\"text-danger\">*</span></Label>\n                                                    <FieldText\n                                                        id={\"field_name\"}\n                                                        name={\"name\"}\n                                                        value={categoryData.name}\n                                                        minLength={3}\n                                                        maxLength={255}\n                                                        required\n                                                    />\n                                                </div>\n                                            </Col>\n                                            <Col md=\"4\">\n                                                <div className=\"mb-3\">\n                                                    <Label htmlFor=\"field_prefix\">Prefijo <span className=\"text-danger\">*</span></Label>\n                                                    <FieldText\n                                                        id={\"field_prefix\"}\n                                                        name={\"prefix\"}\n                                                        value={categoryData.prefix}\n                                                        minLength={1}\n                                                        maxLength={5}\n                                                        required\n                                                    />\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col md={12} className=\"text-right\">\n                                                <ButtonSubmit loading={props.loading} />\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </AvForm>\n                </Container>\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    const {error, category, loading} = state.Category\n    return {error, category, loading}\n}\n\nexport default withRouter(\n    connect(mapStateToProps, {apiError, registerCategory, updateCategory, getCategory})(CategoryEdit)\n)\n\nCategoryEdit.propTypes = {\n    error: PropTypes.any,\n    history: PropTypes.object\n}\n\n","/home/dev/workspace/repositories/moie-admin/src/pages/Category/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/FieldOption/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/CustomerEdit/index.js",["823"],"import React, {useEffect} from \"react\"\nimport {CardBody, Container} from \"reactstrap\"\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {apiError} from \"../../store/auth/login/actions\";\nimport PropTypes from \"prop-types\";\nimport {getCustomer} from \"../../store/customer/actions\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\nimport CustomerForm from \"./CustomerForm\";\nimport {Card} from \"@material-ui/core\";\n\nconst CustomerEdit = (props) => {\n    const {getCustomer, customer} = props;\n    const isEdit = props.match.params.id;\n\n    //carga inicial\n    useEffect(() => {\n        if (isEdit && getCustomer) {\n            getCustomer(props.match.params.id);\n        }\n    }, [getCustomer]);\n\n    return (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid>\n                    <Breadcrumb hasBack path=\"/customers\" title={customer.name} item={\"Cliente\"}/>\n                    <Card>\n                        <CardBody>\n                            <CustomerForm customer={customer}/>\n                        </CardBody>\n                    </Card>\n                </Container>\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    const {error, customer, loading} = state.Customer\n    return {error, customer, loading}\n}\n\nexport default withRouter(\n    connect(mapStateToProps, {apiError, getCustomer})(CustomerEdit)\n)\n\nCustomerEdit.propTypes = {\n    error: PropTypes.any,\n    history: PropTypes.object\n}\n\n","/home/dev/workspace/repositories/moie-admin/src/store/auth/login/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/login/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/register/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/register/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/forgetpwd/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/forgetpwd/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/profile/reducer.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/profile/saga.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/index.js",["824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839"],"import React, {useEffect, useState} from \"react\";\nimport {Col, Collapse, Container, Label, Media, Row, Spinner} from \"reactstrap\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getProduct, getProducts, registerProduct, updateProduct} from \"../../store/product/actions\";\nimport {getFieldOptionByGroup, registerFieldOption} from \"../../store/fieldOptions/actions\";\nimport {resetProductImages} from \"../../store/productImages/actions\";\nimport {resetProductSize} from \"../../store/productSize/actions\";\nimport {AvForm} from \"availity-reactstrap-validation\";\nimport {FieldNumber, FieldSelect, FieldSwitch, FieldText} from '../../components/Fields';\nimport {Button, Card} from \"@material-ui/core\";\nimport {getCategories} from \"../../store/category/actions\";\nimport {getSizes} from \"../../store/sizes/actions\";\nimport {parseJson} from \"../../common/utils\";\nimport {arrayToOptions} from \"../../common/converters\";\nimport {GROUPS, STATUS} from \"../../common/constants\";\nimport ProductSize from \"./ProductSize\";\nimport ProductImage from \"./ProductImage\";\nimport ProductPublish from \"./ProductPublish\";\nimport ButtonSubmit from \"../../components/Common/ButtonSubmit\";\nimport FieldOption from \"../../store/fieldOptions/reducer\";\nimport Autocomplete from \"../../components/Fields/Autocomplete\";\nimport {DEFAULT_PAGE_LIMIT} from \"../../common/pagination\";\n\nconst ProductEdit = (props) => {\n\n    const [isOpen, setIsOpen] = useState(true);\n    const toggle = () => setIsOpen(!isOpen);\n\n    const [isOpenDropImages, setIsOpenDropImages] = useState(false);\n    const toggleDropImages = () => setIsOpenDropImages(!isOpenDropImages);\n\n    const [isOpenWebConfig, setIsOpenWebConfig] = useState(false);\n    const toggleWebConfig = () => setIsOpenWebConfig(!isOpenWebConfig);\n\n    const [isOpenInventary, setIsOpenInventary] = useState(false);\n    const toggleInventary = () => setIsOpenInventary(!isOpenInventary);\n\n\n    const {\n        product, categories, sizes, fieldOptions, refreshProduct,\n        onGetProduct, onCreateProduct, onUpdateProduct,\n        onGetCategories, onGetSizes, onResetProductSize, onResetProductImages,\n        onGetFieldOptions, onCreateFieldOption, refreshFieldOptions\n    } = props;\n\n    const [productData, setProductData] = useState({_status: STATUS.ACTIVE, sizeModelList: []});\n\n    const [categoriesList, setCategoriesList] = useState([]);\n    const [categoryDefault, setCategoryDefault] = useState({});\n\n    const [materialsList, setMaterialsList] = useState([]);\n    const [providerList, setProviderList] = useState([]);\n    const [referenceList, setReferenceList] = useState([]);\n    const [materialDefault, setMaterialDefault] = useState({});\n    const [publication, setPublication] = useState({_status: \"true\"});\n\n    const [sizesList, setSizesList] = useState([]);\n    const [sizeDefault, setSizeDefault] = useState({});\n    const [sizeSelected, setSizeSelected] = useState(null);\n\n    const isEdit = props.match.params.id;\n    const hasOrders = false;\n\n    //Carga inicial\n    useEffect(() => {\n        if (isEdit && onGetProduct) {\n            onGetProduct(props.match.params.id);\n        }\n        onGetCategories();\n        onGetSizes();\n        onGetFieldOptions();\n    }, [onGetProduct]);\n\n    useEffect(() => {\n        if (product.id) {\n            onGetProduct(product.id);\n        }\n        onResetProductSize();\n        onResetProductImages();\n    }, [refreshProduct]);\n\n    //cargar info relacionada al prod\n    useEffect(() => {\n        if (product.id) {\n            setProductData({...product, _status: product.status});\n            const defaultCategory = product.category?.id || null;\n            setCategoryDefault(defaultCategory);\n\n            if (!isEdit) {\n                if (product.productSize.length === 0) {\n                    setIsOpen(false)\n                    setIsOpenInventary(true);\n                } else if (product.productImage.length === 0) {\n                    setIsOpen(false)\n                    setIsOpenInventary(false);\n                    setIsOpenDropImages(true);\n                }\n            }\n        }\n        //console.log('Product', product)\n    }, [product]);\n\n    useEffect(() => {\n        if (categories && categories.length > 0) {\n            setCategoriesList(arrayToOptions(categories));\n        } else {\n            setCategoriesList([]);\n        }\n    }, [categories])\n\n    useEffect(() => {\n        if (sizes && sizes.length > 0) {\n            const sizeList = arrayToOptions(sizes);\n            if (product.size && product.size.id) {\n                const defaultSize = sizeList.filter(m => m.value === product.size.id)[0];\n                setSizeDefault(defaultSize.value);\n            }\n            setSizesList(sizeList);\n        } else {\n            setSizesList([]);\n        }\n    }, [sizes])\n\n    useEffect(() => {\n        if (fieldOptions && fieldOptions.length > 0) {\n            setMaterialsList(filterFieldOptions(fieldOptions, GROUPS.MATERIALS));\n            setProviderList(filterFieldOptions(fieldOptions, GROUPS.PROVIDERS));\n            setReferenceList(filterFieldOptions(fieldOptions, GROUPS.REFERENCE_KEY).map(op => {\n                const key = op.name ? op.name : '';\n                return {label: key, value: key};\n            }));\n        } else {\n            setMaterialsList([]);\n            setProviderList([]);\n            setReferenceList([]);\n        }\n    }, [fieldOptions])\n\n    useEffect(() => {\n        if (refreshFieldOptions) {\n            onGetFieldOptions();\n        }\n    }, [refreshFieldOptions])\n\n    const filterFieldOptions = (arr, groups) => {\n        return arr.filter(op => (op.groups === groups)).map(op => ({name: op.name}));\n    }\n\n    const handleValidSubmit = (event, values) => {\n        const data = {\n            ...values,\n            category: values.category.value,\n            size: values.size.value,\n            status: values._status,\n            weight: values.weight ? Number.parseFloat(values.weight) : 0,\n            price: Number.parseFloat(values.price),\n            cost: Number.parseFloat(values.cost),\n        };\n\n        delete data._status;\n\n        if (values.referenceKey && values.referenceKey.value) {\n            data.referenceKey = values.referenceKey.value;\n        }\n\n        if (!isEdit) {\n            data.status = 1;\n            onCreateProduct(data, props.history)\n        } else {\n            onUpdateProduct(props.match.params.id, data, props.history)\n        }\n\n        if (!materialsList.some(op => op.name === data.material)) {\n            onCreateFieldOption({groups: GROUPS.MATERIALS, name: data.material, value: data.material}, props.history);\n        }\n        if (!providerList.some(op => op.name === data.provider)) {\n            onCreateFieldOption({groups: GROUPS.PROVIDERS, name: data.provider, value: data.provider}, props.history);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid>\n                    <Breadcrumb hasBack path=\"/products\" title={productData.reference} item={\"Producto\"}/>\n\n                    <Row>\n                        <Col md={12}>\n                            <Card id={'main-data'}>\n                                <Link to=\"#\" onClick={toggle} className=\"text-dark\">\n                                    <div className=\"p-4\">\n                                        <Media className=\"d-flex align-items-center\">\n                                            <div className=\"me-3\">\n                                                <div className=\"avatar-xs\">\n                                                    <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                                                        01\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"flex-1 overflow-hidden\">\n                                                <Row>\n                                                    <Col md={8}>\n                                                        <h5 className=\"font-size-16 mb-1\">General</h5>\n                                                        <p className=\"text-muted text-truncate mb-0\">Datos principales del producto</p>\n                                                    </Col>\n                                                    {isEdit && (\n                                                        <Col md={4}>\n                                                            <div className=\"text-right pr-10\">\n                                                                <h5 className=\"font-size-16 mb-1\">Código</h5>\n                                                                <b className=\"font-size-18 text-info\">{productData.reference}</b>\n                                                            </div>\n                                                        </Col>\n                                                    )}\n                                                </Row>\n                                            </div>\n                                            <i className=\"mdi mdi-chevron-up accor-down-icon font-size-24\"> </i>\n                                        </Media>\n                                    </div>\n                                </Link>\n                                <Collapse isOpen={isOpen}>\n                                    <AvForm className=\"needs-validation\" autoComplete=\"off\"\n                                            onValidSubmit={(e, v) => {\n                                                handleValidSubmit(e, v)\n                                            }}>\n                                        <div className=\"p-4 border-top\">\n                                            <Row>\n                                                {!(product && product.id) && (\n                                                    <Col md={2}>\n                                                        <div className=\"mb-3\">\n                                                            <Label htmlFor=\"field_referenceKey\">Ref. <span className=\"text-danger\">*</span></Label>\n                                                            <FieldSelect\n                                                                id={\"field_referenceKey\"}\n                                                                name={\"referenceKey\"}\n                                                                options={referenceList}\n                                                                defaultValue={productData.referenceKey}\n                                                                required\n                                                                isSearchable\n                                                            />\n                                                        </div>\n                                                    </Col>\n                                                )}\n                                                <Col md={10}>\n                                                    <div className=\"mb-3\">\n                                                        <Label htmlFor=\"field_name\">Nombre de Producto <span className=\"text-danger\">*</span></Label>\n                                                        <FieldText\n                                                            id={\"field_name\"}\n                                                            name={\"name\"}\n                                                            value={productData.name}\n                                                            minLength={3}\n                                                            maxLength={255}\n                                                            required/>\n                                                    </div>\n                                                </Col>\n                                                {(product && product.id) && (\n                                                    <Col md={2}>\n                                                        <div className={\"mt-1 mb-5\"} style={{position: \"relative\"}}>\n                                                            <div className={\"float-end\"}>\n                                                                <Row>\n                                                                    <Col>\n                                                                        ¿Activo?\n                                                                    </Col>\n                                                                    <Col>\n                                                                        <FieldSwitch defaultValue={productData._status} name={\"_status\"}/>\n                                                                    </Col>\n                                                                </Row>\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n                                                )}\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <div className=\"mb-3\">\n                                                        <Label className=\"control-label\">Categoria <span className=\"text-danger\">*</span></Label>\n                                                        <FieldSelect\n                                                            id={\"field_category\"}\n                                                            name={\"category\"}\n                                                            options={categoriesList}\n                                                            defaultValue={categoryDefault}\n                                                            required\n                                                            disabled={hasOrders}\n                                                            isSearchable\n                                                        />\n                                                    </div>\n                                                </Col>\n                                                <Col md=\"3\">\n                                                    <div className=\"mb-0\">\n                                                        <Label className=\"control-label\">Tallas</Label>\n                                                        <FieldSelect\n                                                            id={\"field_sizes\"}\n                                                            name={\"size\"}\n                                                            options={sizesList}\n                                                            defaultValue={sizeDefault}\n                                                            onChange={(e) => {\n                                                                setSizeSelected(sizes.find(s => s.id === e.value));\n                                                            }}\n                                                            disabled={hasOrders}\n                                                            isSearchable\n                                                        />\n                                                    </div>\n                                                </Col>\n                                                <Col md=\"3\">\n                                                    <div className=\"mb-3\">\n                                                        <Label className=\"control-label\">Material</Label>\n                                                        <Autocomplete\n                                                            id={\"field_material\"}\n                                                            name={\"material\"}\n                                                            options={materialsList}\n                                                            defaultValue={productData.material}\n                                                            onChange={(material) => setProductData({...productData, material: material})}\n                                                        />\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <div className=\"mb-3\">\n                                                        <Label htmlFor=\"field_provider\">Proveedor</Label>\n                                                        <Autocomplete\n                                                            id={\"field_provider\"}\n                                                            name={\"provider\"}\n                                                            options={providerList}\n                                                            defaultValue={productData.provider}\n                                                            onChange={(provider) => setProductData({...productData, provider: provider})}\n                                                        />\n                                                    </div>\n                                                </Col>\n\n                                                <Col md=\"2\">\n                                                    <div className=\"mb-3\">\n                                                        <Label htmlFor=\"weight\">Peso (g) </Label>\n                                                        <FieldNumber\n                                                            id={\"field_weight\"}\n                                                            name={\"weight\"}\n                                                            type=\"number\"\n                                                            value={productData.weight}\n                                                        />\n                                                    </div>\n                                                </Col>\n                                                <Col md=\"2\">\n                                                    <div className=\"mb-3\">\n                                                        <Label htmlFor=\"cost\">Costo <span className=\"text-danger\">*</span></Label>\n                                                        <FieldNumber\n                                                            id={\"field_cost\"}\n                                                            name={\"cost\"}\n                                                            type=\"number\"\n                                                            value={productData.cost}\n                                                            required/>\n                                                    </div>\n                                                </Col>\n                                                <Col md=\"2\">\n                                                    <div className=\"mb-3\">\n                                                        <Label htmlFor=\"price\">Precio <span className=\"text-danger\">*</span></Label>\n                                                        <FieldNumber\n                                                            id={\"field_price\"}\n                                                            name={\"price\"}\n                                                            value={productData.price}\n                                                            required/>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <div className=\"mb-0\">\n                                                        <Label htmlFor=\"description\">Descripción</Label>\n                                                        <FieldText\n                                                            id={\"field_description\"}\n                                                            name={\"description\"}\n                                                            value={productData.description}\n                                                            minLength={3}\n                                                            maxLength={255}\n                                                        />\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"pt-2\">\n                                                <Col md={12} className=\"text-right\">\n                                                    <ButtonSubmit loading={props.loading}/>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </AvForm>\n\n                                </Collapse>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={12} className=\"mt-2\">\n                            <Card id={'inventory'}>\n                                <Link to=\"#\" className=\"text-dark collapsed\" onClick={toggleInventary}>\n                                    <div className=\"p-4\">\n\n                                        <Media className=\"d-flex align-items-center\">\n                                            <div className=\"me-3\">\n                                                <div className=\"avatar-xs\">\n                                                    <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                                                        02\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"flex-1 overflow-hidden\">\n                                                <h5 className=\"font-size-16 mb-1\">Inventario</h5>\n                                                <p className=\"text-muted text-truncate mb-0\">Agregue existencia a su producto.</p>\n                                            </div>\n                                            <i className=\"mdi mdi-chevron-up accor-down-icon font-size-24\"> < /i>\n                                        </Media>\n\n                                    </div>\n                                </Link>\n                                <Collapse isOpen={isOpenInventary}>\n                                    <div className=\"p-4 border-top\">\n                                        {(productData.id && productData.size) ? (\n                                            <>\n                                                <h4>{productData.size ? productData.size.name : ''}</h4>\n                                                <p>Ingrese color y tallas para el producto.</p>\n                                                <ProductSize template={productData.size} product={productData}/>\n                                            </>\n                                        ) : (\n                                            <div className=\"alert alert-warning\">Debe agregar una talla al producto.</div>\n                                        )}\n                                    </div>\n                                </Collapse>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={12}>\n                            <Card id={'images'} className=\"mt-2 disabled\">\n                                <Link to=\"#\" className=\"text-dark collapsed\" onClick={toggleDropImages}>\n                                    <div className=\"p-4\">\n\n                                        <Media className=\"d-flex align-items-center\">\n                                            <div className=\"me-3\">\n                                                <div className=\"avatar-xs\">\n                                                    <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                                                        03\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"flex-1 overflow-hidden\">\n                                                <h5 className=\"font-size-16 mb-1\">Imagenes</h5>\n                                                <p className=\"text-muted text-truncate mb-0\">Agrega las imagenes a su producto.</p>\n                                            </div>\n                                            <i className=\"mdi mdi-chevron-up accor-down-icon font-size-24\"></i>\n                                        </Media>\n\n                                    </div>\n                                </Link>\n                                <Collapse isOpen={isOpenDropImages}>\n                                    <ProductImage product={product}/>\n                                </Collapse>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col md={12}>\n                            <Card id={'publication'} className=\"mt-2\">\n                                <Link to=\"#\" className=\"text-dark collapsed\" onClick={toggleWebConfig}>\n                                    <div className=\"p-4\">\n\n                                        <Media className=\"d-flex align-items-center\">\n                                            <div className=\"me-3\">\n                                                <div className=\"avatar-xs\">\n                                                    <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                                                        04\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"flex-1 overflow-hidden\">\n                                                <h5 className=\"font-size-16 mb-1\">Publicación</h5>\n                                                <p className=\"text-muted text-truncate mb-0\">Configuraciones para la publicación en la Página Web.</p>\n                                            </div>\n                                            <i className=\"mdi mdi-chevron-up accor-down-icon font-size-24\"> </i>\n                                        </Media>\n\n                                    </div>\n                                </Link>\n                                <Collapse isOpen={isOpenWebConfig}>\n                                    {productData.id && (\n                                        <ProductPublish product={product}/>\n                                    )}\n                                </Collapse>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => {\n    const {error, product, loading} = state.Product\n    const {fieldOptions, refresh} = state.FieldOption\n    const refreshProduct = state.ProductSize.refresh || state.ProductImage.refresh || state.Product.refresh;\n    const {categories} = state.Category\n    const {sizes} = state.Sizes\n    return {error, product, categories, sizes, fieldOptions, loading, refreshProduct, refreshFieldOptions: refresh}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetCategories: (conditional = null, limit = 100, page) => dispatch(getCategories(conditional, limit, page)),\n    onGetSizes: (conditional = null, limit = 100, page) => dispatch(getSizes(conditional, limit, page)),\n    onGetFieldOptions: (conditional = null, limit = 500, page) => dispatch(getFieldOptionByGroup([GROUPS.MATERIALS, GROUPS.PROVIDERS, GROUPS.REFERENCE_KEY], limit, page)),\n    onGetProduct: (id) => dispatch(getProduct(id)),\n    onCreateProduct: (data, history) => dispatch(registerProduct(data, history)),\n    onUpdateProduct: (data, history) => dispatch(updateProduct(data, history)),\n    onCreateFieldOption: (data, history) => dispatch(registerFieldOption(data, history)),\n    onResetProductSize: () => dispatch(resetProductSize()),\n    onResetProductImages: () => dispatch(resetProductImages()),\n})\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(ProductEdit)\n)\n\nProductEdit.propTypes = {\n    error: PropTypes.any,\n    history: PropTypes.object\n}\n","/home/dev/workspace/repositories/moie-admin/src/store/layout/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/register/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/login/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/location/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js",["840"],"import React, { useState } from \"react\"\nimport PropTypes from 'prop-types'\nimport { Link } from \"react-router-dom\"\nimport { Dropdown, DropdownToggle, DropdownMenu, Row, Col } from \"reactstrap\"\nimport SimpleBar from \"simplebar-react\"\n\n//Import images\nimport avatar3 from \"../../../assets/images/users/avatar-3.jpg\"\nimport avatar4 from \"../../../assets/images/users/avatar-4.jpg\"\n\n//i18n\nimport { withTranslation } from \"react-i18next\"\n\nconst NotificationDropdown = props => {\n  // Declare a new state variable, which we'll call \"menu\"\n  const [menu, setMenu] = useState(false)\n\n  return (\n    <>\n      <Dropdown\n        isOpen={menu}\n        toggle={() => setMenu(!menu)}\n        className=\"dropdown d-inline-block\"\n        tag=\"li\"\n      >\n        <DropdownToggle\n          className=\"btn header-item noti-icon waves-effect\"\n          tag=\"button\"\n          id=\"page-header-notifications-dropdown\"\n        >\n          <i className=\"uil-bell\"></i>\n          <span className=\"badge bg-danger rounded-pill\">3</span>\n        </DropdownToggle>\n\n        <DropdownMenu className=\"dropdown-menu-lg dropdown-menu-end p-0\">\n          <div className=\"p-3\">\n            <Row className=\"align-items-center\">\n              <Col>\n                <h6 className=\"m-0 font-size-16\"> {props.t(\"Notifications\")} </h6>\n              </Col>\n              <div className=\"col-auto\">\n                <a href=\"#!\" className=\"small\">\n                  {\" \"}\n                  {props.t(\"Mark all as read\")}\n                </a>\n              </div>\n            </Row>\n          </div>\n\n          <SimpleBar style={{ height: \"230px\" }}>\n            <Link to=\"\" className=\"text-reset notification-item\">\n              <div className=\"d-flex\">\n                <div className=\"avatar-xs me-3\">\n                  <span className=\"avatar-title bg-primary rounded-circle font-size-16\">\n                  <i className=\"uil-shopping-basket\"></i>\n                  </span>\n                </div>\n                <div className=\"flex-1\">\n                  <h6 className=\"mt-0 mb-1\">\n                    Cambio de clave\n                  </h6>\n                  <div className=\"font-size-12 text-muted\">\n                    <p className=\"mb-1\">\n                      Se registro un cambio de clave en su cuenta\n                    </p>\n                    <p className=\"mb-0\">\n                    <i className=\"mdi mdi-clock-outline\"></i>{\" \"}\n                      {props.t(\"3 min ago\")}{\" \"}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </Link>\n            <Link to=\"\" className=\"text-reset notification-item\">\n              <div className=\"d-flex\">\n                <img\n                  src={avatar3}\n                  className=\"me-3 rounded-circle avatar-xs\"\n                  alt=\"user-pic\"\n                />\n                <div className=\"flex-1\">\n                  <h6 className=\"mt-0 mb-1\">Pedido completado</h6>\n                  <div className=\"font-size-12 text-muted\">\n                    <p className=\"mb-1\">\n                      Pedido completado\n                    </p>\n                    <p className=\"mb-0\">\n                      <i className=\"mdi mdi-clock-outline\"/>{\" \"}\n                      {props.t(\"3 min ago\")}{\" \"}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </Link>\n            <Link to=\"\" className=\"text-reset notification-item\">\n              <div className=\"d-flex\">\n                <div className=\"avatar-xs me-3\">\n                  <span className=\"avatar-title bg-success rounded-circle font-size-16\">\n                    <i className=\"bx bx-badge-check\"/>\n                  </span>\n                </div>\n                <div className=\"flex-1\">\n                  <h6 className=\"mt-0 mb-1\">\n                    {props.t(\"Your item is shipped\")}\n                  </h6>\n                  <div className=\"font-size-12 text-muted\">\n                    <p className=\"mb-1\">\n                      {props.t(\"If several languages coalesce the grammar\")}\n                    </p>\n                    <p className=\"mb-0\">\n                      <i className=\"mdi mdi-clock-outline\"/>{\" \"}\n                      {props.t(\"3 min ago\")}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </Link>\n\n            <Link to=\"\" className=\"text-reset notification-item\">\n              <div className=\"d-flex\">\n                <img\n                    src={avatar3}\n                    className=\"me-3 rounded-circle avatar-xs\"\n                    alt=\"user-pic\"\n                />\n                <div className=\"flex-1\">\n                  <h6 className=\"mt-0 mb-1\">Pedido completado</h6>\n                  <div className=\"font-size-12 text-muted\">\n                    <p className=\"mb-1\">\n                      Pedido completado\n                    </p>\n                    <p className=\"mb-0\">\n                      <i className=\"mdi mdi-clock-outline\"/>{\" \"}\n                      {props.t(\"4 min ago\")}{\" \"}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </Link>\n          </SimpleBar>\n          <div className=\"p-2 border-top d-grid\">\n            <Link\n              className=\"btn btn-sm btn-link font-size-14 text-center\"\n              to=\"#\"\n            ><i className=\"uil-arrow-circle-right me-1\"></i>\n              {\" \"}\n              {props.t(\"View all\")}{\" \"}\n            </Link>\n          </div>\n        </DropdownMenu>\n      </Dropdown>\n    </>\n  )\n}\n\nexport default withTranslation()(NotificationDropdown)\n\nNotificationDropdown.propTypes = {\n  t: PropTypes.any\n}\n","/home/dev/workspace/repositories/moie-admin/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/customer/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/profile/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/FieldOption/configsList.js",["841","842","843","844","845","846","847","848"],"import React, {useEffect, useState} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {Card, CardBody, Col, Row} from \"reactstrap\"\n\nimport {parseJson} from \"../../common/utils\";\nimport {DEFAULT_PAGE_LIMIT} from \"../../common/pagination\";\nimport {ConfirmationModalAction} from \"../../components/Modal/ConfirmationModal\";\nimport {deleteFieldOption, getFieldOptionByGroup, getProductFieldOption, registerFieldOption, updateFieldOption} from \"../../store/fieldOptions/actions\";\nimport {GROUPS, NAMES} from \"../../common/constants\";\nimport {map} from \"lodash\";\nimport {FieldNumber, FieldSelect, FieldText} from \"../../components/Fields\";\nimport {AvForm} from \"availity-reactstrap-validation\";\n\nconst groups = Object.keys(GROUPS).map(k => ({label: GROUPS[k], value: GROUPS[k]}));\nconst names = Object.keys(NAMES).map(k => ({label: NAMES[k], value: NAMES[k]}));\nnames.unshift({label: '-', value: undefined});\ngroups.unshift({label: '-', value: undefined});\n\nconst ConfigsList = props => {\n    const {\n        fieldOptions, meta, loading, refresh,\n        onGetFieldOptions, onCreateFieldOption, onUpdateFieldOption, onDeleteFieldOption\n    } = props;\n\n    const [fieldOptionsList, setFieldOptionsList] = useState([]);\n    const [fieldOption, setFieldOption] = useState({options: []});\n    const [fieldOptionEdited, setFieldOptionEdited] = useState(null);\n    const [defaultFieldOption, setDefaultFieldOption] = useState({groups: undefined, name: undefined});\n\n    useEffect(() => {\n        onGetFieldOptions();\n    }, [onGetFieldOptions, refresh])\n\n    useEffect(() => {\n        if (fieldOptions && fieldOptions.length > 0) {\n            const options = {};\n            fieldOptions.forEach(op => {\n                const key = op.groups;\n                if (!options[key]) {\n                    options[key] = {groups: op.groups, options: []};\n                }\n                options[key].options.push({id: op.id, name: op.name, op: op.value});\n            });\n\n            const list = [];\n            Object.keys(options).forEach(op => list.push(options[op]))\n\n            setFieldOptionsList(list);\n            if (fieldOption.groups) {\n                onSelect(list.find(l => (l.groups === fieldOption.groups)));\n            }\n        } else {\n            setFieldOptionsList([])\n        }\n\n    }, [fieldOptions])\n\n    const isReferenceGroup = (groups) => {\n        return GROUPS.REFERENCE_KEY === groups;\n    }\n    const handleTableChange = (type, {page, searchText}) => {\n        onGetFieldOptions(DEFAULT_PAGE_LIMIT, page - 1);\n    }\n    const onFilterAction = (condition) => {\n        onGetFieldOptions(DEFAULT_PAGE_LIMIT, 0);\n    }\n\n    const onAddFieldOptions = (ev, data) => {\n        if(!data.groups || !data.groups.value) return;\n\n        const items = fieldOptionsList ? fieldOptionsList : [];\n\n        //If item doesnt exist It will be added\n        if(items.some(i => i.groups === data.groups.value)) return;\n\n        const item = {groups: data.groups.value, options: [{id: null, name: null,  op: ''}]};\n        items.push(item);\n        setFieldOptionsList(items);\n        onSelect(item);\n\n        //Empty fields\n        setDefaultFieldOption({groups: undefined});\n    };\n\n    const onAddFieldOption = () => {\n        setFieldOptionEdited(null);\n        setFieldOption({...fieldOption, options: [...fieldOption.options,{id: null,  name: null, op: ''}]});\n    };\n\n    const onSelect = (op) => {\n        setFieldOptionEdited(null);\n        setFieldOption(op);\n    };\n\n    const onDeleteOption = (id) => {\n        ConfirmationModalAction({\n            title: '¿Seguro desea eliminar este registro?',\n            description: 'Usted está eliminado este registro, una vez eliminado no podrá ser recuperado.',\n            id: '_clienteModal',\n            onConfirm: () => onDeleteFieldOption(id)\n        });\n    };\n\n    const handleValidSubmit = (ev, data) => {\n        //console.log(data, fieldOption);\n        const payload = {\n            groups: fieldOption.groups,\n            name: data.name ? data.name : data.value,\n            value: data.value\n        }\n\n        if (fieldOptionEdited) {\n            onUpdateFieldOption(fieldOptionEdited, payload);\n        } else {\n            onCreateFieldOption(payload);\n        }\n    };\n\n    return (\n        <Row>\n            <Col md={5}>\n                <Card>\n                    <CardBody>\n                        <AvForm className=\"needs-validation\" autoComplete=\"off\" onValidSubmit={(e, v) => onAddFieldOptions(e, v)}>\n                            <Row>\n                                <Col>\n                                    <table className=\"table table-bordered table-condensed\">\n                                        <thead>\n                                        <tr>\n                                            <th style={{width: '80%'}}>Grupo</th>\n                                            <th style={{width: '20%'}}>Acciones</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        <tr >\n                                            <td>\n                                                <FieldSelect\n                                                    id={\"groups\"}\n                                                    name={\"groups\"}\n                                                    options={groups}\n                                                    defaultValue={defaultFieldOption.groups}\n                                                    onChange={(val)=>setDefaultFieldOption({...defaultFieldOption,groups: val.value})}\n                                                    required\n                                                />\n                                            </td>\n                                            <td className=\"text-center\">\n                                                <button type=\"submit\" size=\"small\" className=\"btn btn-sm text-primary\">\n                                                    <i className=\"uil uil-plus font-size-18\"> </i>\n                                                </button>\n                                            </td>\n                                        </tr>\n                                        {map(fieldOptionsList, (item, key) => (\n                                            <tr key={key} className={item.groups ===fieldOption.groups? 'bg-light':''}>\n                                                <td>{item.groups}</td>\n                                                <td className=\"text-center\">\n                                                    <ul className=\"list-inline font-size-20 contact-links mb-0\">\n                                                        <li className=\"list-inline-item\">\n                                                            <button type=\"button\" size=\"small\" className=\"btn btn-sm text-primary\" onClick={() => onSelect(item)}>\n                                                                <i className=\"uil uil-eye font-size-18\"> </i>\n                                                            </button>\n                                                        </li>\n                                                    </ul>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                        </tbody>\n                                    </table>\n                                </Col>\n                            </Row>\n                        </AvForm>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col md={7}>\n                <Card>\n                    <CardBody>\n                        <AvForm className=\"needs-validation\" autoComplete=\"off\" onValidSubmit={(e, v) => handleValidSubmit(e, v)}>\n                            <Row>\n                                <Col className=\"text-right p-2\">\n                                    {fieldOption.groups && (\n                                        <button size=\"small\" type=\"button\" className=\"btn btn-sm text-primary\" onClick={() => onAddFieldOption()}>\n                                            <i className=\"uil uil-plus font-size-18\"> </i> Agregar\n                                        </button>\n                                    )}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <table className=\"table table-bordered table-condensed\">\n                                        <thead>\n                                        <tr>\n                                            <th>Nombre</th>\n                                            {fieldOption.groups === GROUPS.REFERENCE_KEY && (\n                                                <>\n                                                    <th>Inicia en</th>\n                                                </>\n                                            )}\n                                            <th style={{width: '20%'}}>Acciones</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {map(fieldOption.options, (option, key) => (\n                                            <tr key={key}>\n                                                {fieldOption.groups === GROUPS.REFERENCE_KEY && (\n                                                    <>\n                                                        {fieldOptionEdited !== option.id && (\n                                                            <>\n                                                                <td>{option.name}</td>\n                                                                <td>{option.op}</td>\n                                                            </>\n                                                        )}\n                                                        {fieldOptionEdited === option.id && (\n                                                            <>\n                                                                <td>\n                                                                    <FieldText\n                                                                        id={\"name\"}\n                                                                        name={\"name\"}\n                                                                        value={option.name}\n                                                                        required/>\n                                                                </td>\n                                                                <td>\n                                                                    <FieldNumber\n                                                                        id={\"value\"}\n                                                                        name={\"value\"}\n                                                                        value={option.op}\n                                                                        required/>\n                                                                </td>\n                                                            </>\n                                                        )}\n                                                    </>\n                                                )}\n\n                                                {fieldOption.groups !== GROUPS.REFERENCE_KEY && (\n                                                    <td>\n                                                        {fieldOptionEdited !== option.id && (\n                                                            <>\n                                                                {option.op}\n                                                            </>\n                                                        )}\n                                                        {fieldOptionEdited === option.id && (\n                                                            <>\n                                                                <FieldText\n                                                                    id={\"value\"}\n                                                                    name={\"value\"}\n                                                                    value={option.op}\n                                                                    required/>\n                                                            </>\n                                                        )}\n                                                    </td>\n                                                )}\n                                                <td className=\"text-center\">\n                                                    <div className=\"btn-group\">\n\n                                                        {(!fieldOptionEdited && option.id) && (\n                                                            <div>\n                                                                <button type=\"button\"size=\"small\" className=\"btn btn-sm text-primary\" onClick={() => setFieldOptionEdited(option.id)}>\n                                                                    <i className=\"uil uil-pen font-size-18\"> </i>\n                                                                </button>\n                                                                <button type=\"button\" size=\"small\" className=\"btn btn-sm text-danger\" onClick={() => onDeleteOption(option.id)}>\n                                                                    <i className=\"uil uil-trash-alt font-size-18\"> </i>\n                                                                </button>\n                                                            </div>\n                                                        )}\n                                                        {(fieldOptionEdited || !option.id) && (\n                                                            <div>\n                                                                <button type=\"submit\" size=\"small\" className=\"btn btn-sm text-success\">\n                                                                    <i className=\"uil uil-check font-size-18\"> </i>\n                                                                </button>\n                                                                {option.id && (\n                                                                    <button type=\"button\" size=\"small\" className=\"btn btn-sm text-primary\" onClick={() => setFieldOptionEdited(null)}>\n                                                                        <i className=\"uil uil-redo font-size-18\"> </i>\n                                                                    </button>\n                                                                )}\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                        </tbody>\n                                    </table>\n                                </Col>\n                            </Row>\n\n                        </AvForm>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nConfigsList.propTypes = {\n    fieldOptions: PropTypes.array,\n    onGetFieldOptions: PropTypes.func,\n    onCreateFieldOption: PropTypes.func,\n    onUpdateFieldOption: PropTypes.func,\n    onDeleteFieldOption: PropTypes.func,\n}\n\nconst mapStateToProps = state => {\n    const {fieldOptions, loading, meta, refresh} = state.FieldOption\n    return {fieldOptions, loading, meta, refresh}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetFieldOptions: (group = null, limit = 500, page) => dispatch(getFieldOptionByGroup([], limit, page)),\n    onCreateFieldOption: (data, history) => dispatch(registerFieldOption(data, history)),\n    onUpdateFieldOption: (id, data, history) => dispatch(updateFieldOption(id, data, history)),\n    onDeleteFieldOption: (id, history) => dispatch(deleteFieldOption(id, history))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ConfigsList)\n","/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/ProductPublish.js",["849","850","851","852","853","854","855","856","857"],"import React, {useEffect, useState} from \"react\"\nimport PropTypes from 'prop-types'\nimport {CardBody, Col, Label, Row, Spinner} from \"reactstrap\"\nimport {FieldNumber, FieldSelect, FieldSwitch, FieldText} from \"../../components/Fields\";\nimport {connect} from \"react-redux\";\nimport {AvForm} from \"availity-reactstrap-validation\";\nimport {updateProduct} from \"../../store/product/actions\";\nimport {STATUS} from \"../../common/constants\";\nimport {Button} from \"@material-ui/core\";\nimport ButtonSubmit from \"../../components/Common/ButtonSubmit\";\nimport {map} from \"lodash\";\n\nconst ProductPublish = props => {\n    const {product, updateProduct} = props\n    const [productData, setProductData] = useState(product);\n    const [discount, setDiscount] = useState(0);\n    const [selectValues, setSelectValues] = useState([]);\n\n    useEffect(() => {\n        fillValues();\n    }, [product])\n\n    const handleValidSubmit = (event, values) => {\n        const data = {\n            published: values.published === true,\n            discount: Number.parseFloat(discount)\n        };\n        updateProduct(product.id, data, props.history);\n    }\n\n    const fillValues = () => {\n        if (selectValues.length === 0) {\n            const valueList = [];\n            for (let i = 5; i <= 100;) {\n                valueList.push({label: i, value: i});\n                i += 5;\n            }\n            setSelectValues(valueList);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <AvForm className=\"needs-validation\" autoComplete=\"off\" onValidSubmit={(e, v) => handleValidSubmit(e, v)}>\n                <div className=\"p-4 border-top\">\n                    <Row>\n                        <Col lg={6}>\n                            <div className=\"mb-3\">\n                                <Label htmlFor=\"productpublished\">Publicación Activa</Label>\n                                <FieldSwitch name={\"published\"} defaultValue={productData.published}/>\n                            </div>\n                        </Col>\n                        <Col lg={6}>\n                            <div className=\"mb-3\">\n                                <Label htmlFor=\"field_discount\">Descuento especial</Label>\n                                <select\n                                    id={\"field_discount\"}\n                                    name={\"discount\"}\n                                    value={discount}\n                                    onChange={(e) => setDiscount(e.target.value)}\n                                    className=\"form-control\"\n                                >\n                                    {map(selectValues, (o, k3) => (\n                                        <option key={k3} value={o.value}>{o.label}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={12} className=\"text-right\">\n                            <ButtonSubmit loading={props.loading}/>\n                        </Col>\n                    </Row>\n                </div>\n            </AvForm>\n        </React.Fragment>\n    )\n}\n\nProductPublish.propTypes = {\n    product: PropTypes.object,\n    onGetProductSizes: PropTypes.func,\n}\n\nconst mapStateToProps = state => {\n    const {product, loading, meta, refresh} = state.Product\n    return {product, loading, meta, refresh}\n}\n\n\nexport default connect(mapStateToProps, {updateProduct})(ProductPublish)\n\n","/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/ProductImage.js",["858","859","860","861","862","863","864","865"],"import React, {useEffect, useState} from \"react\"\nimport PropTypes from 'prop-types'\nimport {Card, CardBody, Col, Row, Spinner} from \"reactstrap\"\nimport {Button} from \"@material-ui/core\";\nimport {getProductImage, updateProductImage} from \"../../store/productImages/actions\";\nimport {connect} from \"react-redux\";\nimport {AvForm} from \"availity-reactstrap-validation\";\nimport Images from \"../../components/Common/Image\";\nimport DropZoneIcon from \"../../components/Common/DropZoneIcon\";\nimport {getImageByQuality} from \"../../common/utils\";\nimport ButtonSubmit from \"../../components/Common/ButtonSubmit\";\n\n\nconst groups = [\n    {group: 'Izquierda', groupId: 1},\n    {group: 'Centro', groupId: 2},\n    {group: 'Derecha', groupId: 3}\n];\n\nconst ProductImage = props => {\n    const {product, onGetProductImage, productImages, refresh} = props\n    const [productImageList, setProductImageList] = useState(false);\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [productImageGroups, setProductImageGroups] = useState(groups);\n    const form = React.createRef();\n\n    useEffect(() => {\n        //onGetProductImage(product.id);\n        const files = groups.map(g => ({...g, file: {name: '', preview: ''}}));\n        if (product.productImage && product.productImage.length > 0) {\n            files.forEach((f, i) => {\n                if (product.productImage.length > i) {\n                    const imgData = product.productImage[i];\n                    if (imgData) {\n                        // f.groupId = imgData.group;\n                        f.file.preview = `${getImageByQuality(imgData, 'high')}`\n                        f.file.name = imgData.filename;\n                    }\n                }\n            })\n        }\n\n        setSelectedFiles(files);\n    }, [product])\n\n    useEffect(() => {\n        if (productImages && productImages.length > 0) {\n            setProductImageList(productImages);\n        } else {\n            setProductImageList([]);\n        }\n    }, [productImages])\n\n    function handleAcceptedFiles(groupId, file) {\n        const filesSelected = [...selectedFiles];\n        let group = filesSelected.find(f => f.groupId === groupId);\n        group.file = {\n            ...file,\n            preview: URL.createObjectURL(file.f),\n            formattedSize: formatBytes(file.f.size)\n        }\n        setSelectedFiles(filesSelected);\n\n    }\n\n    function formatBytes(bytes, decimals = 2) {\n        if (bytes === 0) return \"0 Bytes\"\n        const k = 1024\n        const dm = decimals < 0 ? 0 : decimals\n        const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\n        const i = Math.floor(Math.log(bytes) / Math.log(k))\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\n    }\n\n    const handleValidSubmit = (event, values) => {\n        const files = selectedFiles.filter(selectedFile => selectedFile.groupId && selectedFile.file.base64).map(f => ({group: f.groupId, file: f.file.base64}));\n        if (files.length > 0) {\n            props.onUpdateProductImage(product.id, files, props.history);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <AvForm ref={form} className=\"needs-validation\" autoComplete=\"off\" onValidSubmit={(e, v) => handleValidSubmit(e, v)}>\n                <Row className=\"p-4 border-top\">\n                    {selectedFiles.map((f, i) => (\n                        <Col md={4} key={i + \"-file\"}>\n                            <Card className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\">\n                                <div className=\"p-2\">\n                                    <Row className=\"align-items-center\" style={{borderBottom: '1px solid #f5f6f8'}}>\n                                        <Col md={12} className=\"text-center p-2\" style={{height: '400px'}}>\n                                            <DropZoneIcon\n                                                maxFiles={1}\n                                                mode=\"block\"\n                                                hasImage={f.file && f.file.preview}\n                                                onDrop={(files) => {\n                                                    handleAcceptedFiles(f.groupId, files);\n                                                }}>\n                                                <Images className=\"img-fluid mx-auto d-block tab-img rounded\"\n                                                        height={370}\n                                                        alt={f.file?.f?.name}\n                                                        src={f.file?.preview}\n                                                />\n                                            </DropZoneIcon>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"p-2\">\n                                        <Col md={8}>\n                                            <>\n                                                <div className=\"text.muted\"><strong>Grupo:</strong> {f.groupId}</div>\n                                                {(f.file && f.file.f) && (\n                                                    <>\n                                                        <div className=\"text.muted\">{f.file.f.path}</div>\n                                                        <div className=\"text.muted\">{f.file.formattedSize}</div>\n                                                    </>\n                                                )}\n                                            </>\n                                        </Col>\n                                        <Col md={4} className=\"text-right\">\n                                            <DropZoneIcon\n                                                maxFiles={1}\n                                                mode=\"icon\"\n                                                onDrop={(files) => {\n                                                    handleAcceptedFiles(f.groupId, files);\n                                                }}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                    ))}\n                </Row>\n                <Row className=\"p-4\">\n                    <Col md={12} className=\"text-right\">\n                        <ButtonSubmit loading={props.loading}/>\n                    </Col>\n                </Row>\n            </AvForm>\n        </React.Fragment>\n    )\n}\n\nProductImage.propTypes = {\n    product: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n    const {productImages, loading, meta, refresh} = state.ProductImage\n    return {productImages, loading, meta, refresh}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetProductImage: (productId) => {\n        if (productId) dispatch(getProductImage(productId, null, 0));\n    },\n    onUpdateProductImage: (id, data, history) => dispatch(updateProductImage(id, data, history))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProductImage)\n\n","/home/dev/workspace/repositories/moie-admin/src/store/sizes/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/Common/Breadcrumb.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/Common/ButtonSubmit.js",["866"],"import React from \"react\"\nimport imageNotFound from \"../../assets/images/image-not-found.png\"\nimport {Spinner} from \"reactstrap\";\nimport {Button} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst ButtonSubmit = props => {\n  return (\n      <Button color=\"primary\" type=\"submit\" disabled={props.loading}>\n          {props.loading && <Spinner size=\"sm\" className=\"m-1\" color=\"primary\"/>}\n          {props.name? props.name:'Guardar'}\n      </Button>\n  )\n}\n\nButtonSubmit.propTypes = {\n    name: PropTypes.string,\n    iconClass: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default ButtonSubmit\n","/home/dev/workspace/repositories/moie-admin/src/store/productSize/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/category/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/productImages/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/common/constants.js",[],"/home/dev/workspace/repositories/moie-admin/src/common/conditionals.js",["867"],"/*\n*  {field: 1, operator: $lk, value: 1, value: 2}\n* */\n\n/* recibe un arreglo de objetos y lo transforma en una condicion */\nfunction getConditionalFormat(options) {\n    if (options && options.length > 0) {\n        let conditions = options.map(item => {\n            if (!item.moreValues) {\n                return (item.field + item.operator + item.value)\n            } else {\n                item.moreValues = item.moreValues.join(\"::\");\n                return (item.field + item.operator + item.value + \"::\" + item.moreValues)\n            }\n        });\n        conditions = conditions.join(\"|\");\n        return conditions;\n    }\n    return null;\n}\n\n/* Construye un formato valido para las peticiones GET (URL) */\nfunction buildHttpGetQuery(cond = null, limit = null, offset = null) {\n    const data = {};\n    if (cond) {\n        data.conditional = cond;\n    }\n    if (limit) {\n        data.limit = limit;\n    }\n    if (offset || offset == 0) {\n        data.offset = offset;\n    }\n\n    const searchParams = new URLSearchParams(data);\n    return searchParams;\n}\n\nfunction buildCondition(field, value, operator = null, moreValues = []) {\n    let condition;\n    if (operator === null) {\n        condition = {field, value, operator: \"::\"};\n    } else if (moreValues.length > 0) {\n        condition = {field, value, operator, moreValues};\n    } else {\n        if ([OPERATORS.TRUE, OPERATORS.FALSE].includes(operator)) {\n            condition = {field, value: \"\", operator};\n        } else {\n            condition = {field, value, operator};\n        }\n    }\n    return condition;\n}\n\n/* recibe field, value, operador y en caso de tener 2 o mas valores moreValues (Array) */\nclass Condition {\n    condition = [];\n    add(field, value, operator = null, moreValues = []) {\n        this.condition.push(buildCondition(field, value, operator, moreValues))\n    }\n    all() {\n        return this.condition;\n    }\n}\n\nconst OPERATORS = {\n    EQUAL: '::',\n    NULL: '$null',\n    NOT_NULL: '$nnull',\n    TRUE: '$true',\n    FALSE: '$false',\n    NOT_EMPTY: '$nempty',\n    EMPTY: '$empty',\n    NOT_LIKE: '$nlk',\n    LIKE: '$lk',\n    NOT_BETWEEN: '$nbt',\n    BETWEEN: '$bt',\n    LESS_THAN_OR_EQUAL: '$lte',\n    LESS_THAN: '$lt',\n    GREATER_THAN_OR_EQUAL: '$gte',\n    GREATER_THAN: '$gt',\n    NOT_IN: '$nin',\n    IN: '$in'\n};\n\nconst Conditionals = {\n    Condition,\n    buildHttpGetQuery,\n    getConditionalFormat,\n    OPERATORS,\n    buildCondition\n};\n\nexport default Conditionals;\n","/home/dev/workspace/repositories/moie-admin/src/common/pagination.js",[],"/home/dev/workspace/repositories/moie-admin/src/common/converters.js",[],"/home/dev/workspace/repositories/moie-admin/src/common/utils.js",["868"],"import {BOOLEAN_STRING} from \"./constants\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport {baseImagePath, baseImagePathNew} from \"../helpers/api_helper\";\n\nexport const BOOLEAN_STRING_OPTIONS = [\n    {label: '-', value: null},\n    {label: BOOLEAN_STRING.YES, value: true},\n    {label: BOOLEAN_STRING.NO, value: false}\n];\n\nexport const YES_NO_OPTIONS = [\n    {label: '-', value: null},\n    {label: 'Si', value: true},\n    {label: 'No', value: false}\n    ];\n\nexport const STATUS_OPTIONS = [\n    {label: '-', value: null},\n    {label: \"Activo\", value: true},\n    {label: \"Inactive\", value: false}\n];\n\nexport const isValidOption = (options, option) => {\n    return options.filter(o => o.value !== null).map(o => o.value).includes(option);\n};\n\nexport const isValidObject = (object) => {\n    return undefined !== object && null !== object;\n};\n\nexport const isValidString = (str) => {\n    return isValidObject(str) && \"\" !== str;\n};\n\nexport const priceFormat = (amount = 0, currency = \"\", decimalWithCommas = true) => {\n\n    if (amount === 0 || amount === \"\" || amount === undefined) {\n        return \"0.00\";\n    }\n\n    let amountRender = (parseFloat(amount).toFixed(2));\n    if (decimalWithCommas) {\n        amountRender = numberWithCommas(amountRender);\n        amountRender = `${currency} ${amountRender}`;\n    }\n    return amountRender;\n}\n\nconst numberWithCommas =(x) =>{\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport const formatDate =(date) =>{\n    try {\n        return moment(date, moment.ISO_8601).format('DD-MM-YYYY HH:mm:ss');\n    }catch (e){\n        console.log(e)\n    }\n    return \"\";\n}\nexport const formatDateToServer =(date) =>{\n    try {\n        return moment(date).format(\"YYYY-MM-DD[T]HH:mm:ss\");\n    }catch (e){\n        console.log(e)\n    }\n    return \"\";\n}\n\nexport const getImageByQuality = (imgData, quality) => {\n    if(!imgData) return null;\n\n    const path = imgData.path && imgData.path.includes('uploads') ? baseImagePathNew : baseImagePath;\n\n    let result = imgData.path;\n    if (!imgData.thumbs) {\n        return `${path}${result}`;\n    }\n    try {\n        const thumbs = JSON.parse(imgData.thumbs);\n        if (thumbs[quality]) {\n            result = thumbs[quality];\n        }\n    } catch (e) {\n        console.log(e);\n    }\n    return `${path}${result}`;\n}\n\nexport const getErrorMessage = (error) => {\n    if (error.response) {\n        return error.response.data?.error || \"Se ha producido un error\";\n    } else {\n        return \"Se ha producido un error\";\n    }\n}\nexport const parseJson = (data) => {\n    let result = null;\n    try {\n        return JSON.parse(data)\n    }catch (e){\n        console.error('parseJson', e);\n    }\n    return result;\n}\n\nexport const buildNumericOptions = (qty, sk=1, start=0) => {\n    const valueList = [];\n    for (let i = start; i <= qty;) {\n        valueList.push({label: i, value: i});\n        i+= sk;\n    }\n    return valueList;\n}","/home/dev/workspace/repositories/moie-admin/src/components/Fields/Autocomplete.js",["869"],"import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {AvBaseInput} from \"availity-reactstrap-validation\";\nimport messages from \"./messages\";\nimport {FormGroup, FormText} from \"reactstrap\";\nimport theme from './scss/autocomplete.scss';\nimport Autosuggest from 'react-autosuggest';\n\nconst Autocomplete = (props) => {\n    const [selected, setSelected] = useState('');\n    const [suggestions, setSuggestions] = useState([]);\n    const {defaultValue, options} = props;\n\n    const getSuggestions = value => {\n        const inputValue = value.trim().toLowerCase();\n        return inputValue.length === 0 ? [] : (options || []).filter(item => {\n                return item.name.toLowerCase().includes(inputValue)\n            }\n        );\n    };\n\n    const getSuggestionValue = suggestion => suggestion.name;\n\n    const renderSuggestion = suggestion => (\n        <div className=\"font-size-12\">\n            {suggestion.name}\n        </div>\n    )\n    const onSuggestionSelected = (val) => {\n        setSelected(val.currentTarget.textContent)\n        props.onChange && props.onChange(val.currentTarget.textContent || '')\n    }\n\n    useEffect(() => {\n        setSelected(defaultValue || '');\n    }, [defaultValue]);\n\n    const onSuggestionsFetchRequested = ({value}) => {\n        setSuggestions(getSuggestions(value))\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    const onSuggestionsClearRequested = () => {\n        setSuggestions([])\n    };\n\n    return (\n        <AvAutoSuggestInput\n            validate={{\n                required: {value: props.required === true, errorMessage: messages.required}\n            }}\n            name={props.name}\n            value={selected}\n            placeholder={props.placeholder}\n            disabled={props.disabled}\n            onSuggestionsClearRequested={onSuggestionsClearRequested}\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            onSuggestionSelected={onSuggestionSelected}\n            onChange={(e) => setSelected(e.target.value || '')}\n            suggestions={suggestions || []}\n        />\n    )\n}\n\nAutocomplete.propTypes = {\n    name: PropTypes.string,\n    placeholder: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.array,\n    defaultValue: PropTypes.any,\n};\n\nclass AvAutoSuggestInput extends AvBaseInput {\n    render() {\n        const {name, value, onChange, onSuggestionSelected, onSuggestionsFetchRequested, onSuggestionsClearRequested, getSuggestionValue, renderSuggestion, suggestions, placeholder, helpMessage, disabled} = this.props;\n        const validation = this.context.FormCtrl.getInputState(this.props.name);\n        const feedback = validation.errorMessage ? (<div className=\"invalid-feedback\" style={{display: \"block\"}}>{validation.errorMessage}</div>) : null;\n        const help = helpMessage ? (<FormText>{helpMessage}</FormText>) : null;\n        const isInvalid = validation.errorMessage ? \"select-is-invalid\" : \"\";\n\n        return (\n            <FormGroup className={isInvalid}>\n                <div>\n                    <Autosuggest\n                        name={name}\n                        suggestions={suggestions}\n                        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                        onSuggestionsClearRequested={onSuggestionsClearRequested}\n                        getSuggestionValue={getSuggestionValue}\n                        renderSuggestion={renderSuggestion}\n                        onSuggestionSelected={onSuggestionSelected}\n                        inputProps={{\n                            placeholder: placeholder,\n                            value,\n                            onChange: onChange,\n                        }}\n                        theme={{\n                            ...theme,\n                            input: 'form-control',\n                            container: 'react-autosuggest__container',\n                            containerOpen: 'react-autosuggest__container--open',\n                            inputOpen: 'react-autosuggest__input--open',\n                            inputFocused: 'react-autosuggest__input--focused',\n                            suggestionsContainer: 'react-autosuggest__suggestions-container',\n                            suggestionsContainerOpen: 'react-autosuggest__suggestions-container--open',\n                            suggestionsList: 'react-autosuggest__suggestions-list',\n                            suggestion: 'react-autosuggest__suggestion',\n                            suggestionFirst: 'react-autosuggest__suggestion--first',\n                            suggestionHighlighted: 'react-autosuggest__suggestion--highlighted',\n                            sectionContainer: 'react-autosuggest__section-container',\n                            sectionContainerFirst: 'react-autosuggest__section-container--first',\n                            sectionTitle: 'react-autosuggest__section-title'\n                        }}\n                    />\n                </div>\n                {feedback}\n                {help}\n            </FormGroup>\n        );\n    }\n};\n\nexport default Autocomplete;\n","/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/ProductSize.js",["870","871","872","873","874","875","876","877","878","879","880"],"import React, {useEffect, useState} from \"react\"\nimport PropTypes from 'prop-types'\nimport {CardBody, Col, Row, Spinner} from \"reactstrap\"\nimport {FieldText} from \"../../components/Fields\";\nimport {map} from \"lodash\";\nimport {Button} from \"@material-ui/core\";\nimport {updateProductSizeList} from \"../../store/productSize/actions\";\nimport {connect} from \"react-redux\";\nimport Conditionals from \"../../common/conditionals\";\nimport {AvForm} from \"availity-reactstrap-validation\";\nimport ButtonSubmit from \"../../components/Common/ButtonSubmit\";\n\nconst ProductSize = props => {\n    const {product, template, onGetProductSizes, productSizes, refresh} = props\n    const [productSizesList, setProductSizesList] = useState([]);\n    const [selectValues, setSelectValues] = useState([]);\n    const [sizeTotals, setSizeTotals] = useState({});\n    const form = React.createRef();\n\n    useEffect(() => {\n        if (product.productSize.length) {\n            setProductSizesList(parseList(product.productSize));\n        } else {\n            setProductSizesList([]);\n        }\n\n        fillSelectValues();\n    }, [product])\n\n    useEffect(() => {\n        calculateTotals();\n    }, [productSizesList])\n\n    const getModel = () => {\n        const model = {color: '', sizes: {}};\n        if (template && template.sizes) {\n            template.sizes.forEach(size => model.sizes[size] = 0)\n        }\n        return model;\n    }\n    const fillSelectValues = () => {\n        if (selectValues.length === 0) {\n            const valueList = [];\n            for (let i = 0; i <= 1000; i++) {\n                valueList.push({label: i, value: i});\n            }\n            setSelectValues(valueList);\n        }\n    }\n    const addColor = () => {\n        const list = [...productSizesList, getModel()];\n        setProductSizesList(list);\n        calculateTotals();\n    }\n    const removeColor = (index) => {\n        let list = [...productSizesList];\n        list.splice(index);\n        setProductSizesList(list);\n        calculateTotals();\n    }\n    const parseDefaultValue = (model, sizeName) => {\n        if (!model || !model.sizes) return 0;\n        return model.sizes[sizeName] ? model.sizes[sizeName] : 0;\n    }\n    const parseValues = () => {\n        //flat data\n        const dataList = [];\n        productSizesList.map((ps) => {\n            Object.keys(ps.sizes).forEach(sizeName => {\n                let qty = parseFloat(ps.sizes[sizeName]);\n\n                if (qty > 0) {\n                    dataList.push({name: sizeName, qty: qty, color: ps.color});\n                }\n            });\n        });\n        return dataList;\n    }\n    const parseList = (list) => {\n        let map = {};\n        list.filter(ps => null !== ps).map(ps => {\n            const key = ps.color.replace(/\\s/g, '');\n            let mapElement = map[key];\n            if (!mapElement) {\n                mapElement = {color: ps.color, sizes: {}};\n                template.sizes.forEach(size => mapElement.sizes[size] = 0)\n            }\n            mapElement.sizes[ps.name] = ps.quantity;\n            map[key] = mapElement;\n        });\n        return Object.keys(map).map((m) => map[m]);\n    }\n    const handleValidSubmit = (event, values) => {\n        const list = parseValues(values);\n        if (list && list.length > 0) {\n            props.onUpdateProductSizeList(product.id, list, props.history);\n        }\n    }\n    const handleChangeColors = (index, color) => {\n        if (!productSizesList.some(l => l.color === color)) {\n            const list = [...productSizesList];\n            list[index].color = color;\n            setProductSizesList(list);\n        }\n        validateColor(\"color_\" + index);\n    }\n    const handleChangeSizes = (index, sizeName, sizeValue) => {\n        const list = [...productSizesList];\n        list[index].sizes[sizeName] = sizeValue;\n        setProductSizesList(list);\n        calculateTotals();\n    }\n\n    const validateColorDuplicate = (color) => {\n        //TODO validar\n        if (productSizesList.some(l => l.color === color)) {\n            return 'Color repetido.';\n        }\n        return true;\n    }\n    const validateColor = (inputName) => {\n        form.current.validateInput(inputName);\n    }\n    const calculateTotals = () => {\n        const totals = {total: 0};\n        productSizesList.forEach((model) => {\n            template.sizes.forEach((size) => {\n                if (!totals[size]) totals[size] = 0;\n                totals[size] += parseInt(model.sizes[size]);\n                totals.total += parseInt(model.sizes[size]);\n            })\n        })\n        setSizeTotals(totals);\n    }\n\n\n    return (\n        <React.Fragment>\n            <AvForm ref={form} className=\"needs-validation\" autoComplete=\"off\"\n                    onValidSubmit={(e, v) => {\n                        handleValidSubmit(e, v)\n                    }}>\n                <Row>\n                    <Col md=\"12\">\n                        <div className={\"table-responsive\"}>\n                            <table className=\"table table-card-list table-condensed\">\n                                <thead>\n                                <tr>\n                                    <th>Color</th>\n                                    {map(template?.sizes, (size, key) => (\n                                        <th key={'th_' + key} className=\"text-center\">{size}</th>\n                                    ))}\n                                    <th>Borrar</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {map(productSizesList, (model, k1) => (\n                                    <tr key={'tr_' + k1}>\n                                        <td>\n                                            <FieldText\n                                                id={\"field_color_\" + k1}\n                                                name={\"color_\" + k1}\n                                                placeholder={'Ingrese el color'}\n                                                minLength={3}\n                                                maxLength={20}\n                                                value={model.color}\n                                                defaultValue={model.color}\n                                                onBlur={(e) => handleChangeColors(k1, e.target.value)}\n                                                validate={{myValidation: validateColorDuplicate}}\n                                                required/>\n                                        </td>\n                                        {map(template.sizes, (size, k2) => (\n                                            <td key={'td_' + k1 + '_' + k2} style={{minWidth: '30px'}} className=\"text-center\">\n                                                <select\n                                                    id={\"select_\" + k1 + '_' + k2}\n                                                    name={\"select_\" + k1 + '_' + k2}\n                                                    value={model.sizes[size]}\n                                                    // defaultValue={parseDefaultValue(model, size)}\n                                                    onChange={(e) => handleChangeSizes(k1, size, e.target.value, model)}\n                                                    className=\"form-control\"\n                                                >\n                                                    {map(selectValues, (o, k3) => (\n                                                        <option key={k3} value={o.value}>{o.label}</option>\n                                                    ))}\n                                                </select>\n                                            </td>\n                                        ))}\n                                        <th>\n                                            <button size=\"small\" className=\"btn btn-sm text-danger\" onClick={() => removeColor(k1)}>\n                                                <i className=\"uil uil-trash-alt font-size-18\"> </i>\n                                            </button>\n                                        </th>\n                                    </tr>\n                                ))}\n                                <tr>\n                                    <th>Totales</th>\n                                    {map(template.sizes, (size, k) => (\n                                        <th key={'td_' + k} style={{minWidth: '30px'}} className=\"text-center\">\n                                            {sizeTotals[size]}\n                                        </th>\n                                    ))}\n                                    <th>{sizeTotals.total}</th>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md=\"12\">\n                        <div className=\"text-center m-3\">\n                            <Button color=\"default\" type=\"button\" onClick={() => addColor()}>\n                                Agregar color\n                            </Button>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12} className=\"text-right\">\n                        <ButtonSubmit loading={props.loading}/>\n                    </Col>\n                </Row>\n            </AvForm>\n        </React.Fragment>\n    )\n}\n\nProductSize.propTypes = {\n    product: PropTypes.object,\n    productSizes: PropTypes.array,\n    onGetProductSizes: PropTypes.func,\n}\n\nconst mapStateToProps = state => {\n    const {productSizes, loading, meta, refresh} = state.ProductSize\n    return {productSizes, loading, meta, refresh}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetProductSizes: (productId) => {\n        const conditions = new Conditionals.Condition;\n        if (productId) {\n            conditions.add('product', productId, Conditionals.OPERATORS.EQUAL);\n        }\n        //dispatch(getProductSizes(conditions.all(), null, 0))\n    },\n    onUpdateProductSizeList: (id, data, history) => dispatch(updateProductSizeList(id, data, history))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProductSize)\n\n","/home/dev/workspace/repositories/moie-admin/src/pages/Category/list/categoryList.js",["881","882","883","884","885","886","887"],"import React, {useEffect, useState} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {Card, CardBody, Col, Row, Spinner} from \"reactstrap\"\nimport paginationFactory, {\n    PaginationListStandalone,\n    PaginationProvider,\n} from \"react-bootstrap-table2-paginator\"\nimport ToolkitProvider, {Search} from \"react-bootstrap-table2-toolkit\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\n\nimport {Link} from \"react-router-dom\"\nimport {Button, Tooltip} from \"@material-ui/core\";\nimport {DEFAULT_PAGE_LIMIT} from \"../../../common/pagination\";\nimport {ConfirmationModal, ConfirmationModalAction} from \"../../../components/Modal/ConfirmationModal\";\nimport {TableFilter} from \"../../../components/TableFilter\";\nimport {normalizeColumnsList} from \"../../../common/converters\";\nimport {getCategories} from \"../../../store/category/actions\";\nimport categoryColumns from \"./categoryColumn\";\nimport Category from \"../../../store/category/reducer\";\n\nconst CategoryList = props => {\n    const {categories, meta, onGetCategories, onDeleteState, loading, refresh} = props;\n    const [categoriesList, setCategoriesList] = useState([])\n    const [filter, setFilter] = useState(false);\n    const [conditional, setConditional] = useState(null);\n\n    const pageOptions = {\n        sizePerPage: DEFAULT_PAGE_LIMIT,\n        //totalSize: meta.totalRegisters, // replace later with size(users),\n        custom: true,\n    }\n    const {SearchBar} = Search\n\n    useEffect(() => {\n        onGetCategories();\n    }, [refresh])\n\n    useEffect(() => {\n        onGetCategories()\n    }, [onGetCategories])\n\n    useEffect(() => {\n        setCategoriesList(categories)\n    }, [categories])\n\n    // eslint-disable-next-line no-unused-vars\n    const handleTableChange = (type, {page, searchText}) => {\n        onGetCategories(conditional, DEFAULT_PAGE_LIMIT, (page - 1)*DEFAULT_PAGE_LIMIT);\n    }\n\n    const onFilterAction = (condition) => {\n        setConditional(condition);\n        onGetCategories(condition, DEFAULT_PAGE_LIMIT, 0);\n    }\n    const onConfirmDelete = (id) => {\n        onDeleteState(id);\n    };\n\n    const onDelete = (id) => {\n        ConfirmationModalAction({\n            title: '¿Seguro desea eliminar el Estado?',\n            description: 'Usted está eliminado este Estado, una vez eliminado no podrá ser recuperado.',\n            id: '_clienteModal',\n            onConfirm: () => onConfirmDelete(id)\n        });\n    };\n\n    const columns = categoryColumns(onDelete);\n\n    var selectRowProp = {\n        mode: \"checkbox\",\n        clickToSelect: true,\n    };\n\n    const NoDataIndication = () => (\n        <div className=\"spinner\">\n            <div className=\"rect1\"/>\n            <div className=\"rect2\"/>\n            <div className=\"rect3\"/>\n            <div className=\"rect4\"/>\n            <div className=\"rect5\"/>\n        </div>\n    );\n    return (\n        <Row>\n            <TableFilter\n                onPressDisabled={() => setFilter(false)}\n                isActive={filter}\n                fields={columns}\n                onSubmit={onFilterAction.bind(this)}/>\n\n            <Col lg={filter ? \"8\" : \"12\"}>\n                <Card>\n                    <CardBody>\n                        <PaginationProvider pagination={paginationFactory(pageOptions)}>\n                            {({paginationProps, paginationTableProps}) => (\n                                <ToolkitProvider\n                                    keyField=\"id\"\n                                    data={categoriesList || []}\n                                    columns={normalizeColumnsList(columns)}\n                                    bootstrap4\n                                    search\n                                >\n                                    {toolkitProps => (\n                                        <React.Fragment>\n                                            <Row className=\"row mb-2\">\n                                                <Col md={6}>\n                                                    <div className=\"form-inline mb-3\">\n                                                        <div className=\"search-box ms-2\">\n                                                            {!filter && (\n                                                                <div className=\"position-relative\">\n                                                                    <SearchBar {...toolkitProps.searchProps}/>\n                                                                    <i className=\"mdi mdi-magnify search-icon\"> </i>\n                                                                </div>\n                                                            )}\n                                                        </div>\n                                                    </div>\n                                                </Col>\n                                                <Col md={6}>\n                                                    <div className=\"mb-3 float-md-end\">\n                                                        {columns.some(s => s.filter) && (\n                                                            <Tooltip placement=\"bottom\" title=\"Filtros Avanzados\" aria-label=\"add\" >\n                                                                <Button onClick={() => setFilter(!filter)}>\n                                                                    <i className={\"mdi mdi-filter\"}> </i>\n                                                                </Button>\n                                                            </Tooltip>\n                                                        )}\n                                                        <Link to={\"/category\"} className=\"btn btn-primary waves-effect waves-light text-light\">\n                                                            <i className=\"mdi mdi-plus\"> </i> Nueva Categoria\n                                                        </Link>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col xl=\"12\">\n                                                    <div className=\"table-responsive mb-4\">\n                                                        <BootstrapTable\n                                                            remote\n                                                            responsive\n                                                            loading={true}\n                                                            bordered={false}\n                                                            striped={true}\n                                                            classes={\n                                                                \"table table-centered table-nowrap mb-0\"\n                                                            }\n                                                            noDataIndication={() => <NoDataIndication/>}\n                                                            {...toolkitProps.baseProps}\n                                                            onTableChange={handleTableChange}\n                                                            {...paginationTableProps}\n                                                        />\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <div className=\"float-sm-end\">\n                                                <PaginationListStandalone {...paginationProps} />\n                                            </div>\n                                        </React.Fragment>\n                                    )}\n                                </ToolkitProvider>\n                            )}\n                        </PaginationProvider>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nCategoryList.propTypes = {\n    categories: PropTypes.array,\n    onGetCategories: PropTypes.func,\n    // onDeleteStates: PropTypes.func,\n}\n\nconst mapStateToProps = state => {\n    const {categories, loading, meta, refresh} = state.Category\n    return {categories, loading, meta, refresh}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetCategories: (conditional = null, limit = DEFAULT_PAGE_LIMIT, page) => dispatch(getCategories(conditional, limit, page)),\n    // onDeleteStates: (id) => dispatch(deleteState(id))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CategoryList)\n","/home/dev/workspace/repositories/moie-admin/src/helpers/fakebackend_helper.js",[],"/home/dev/workspace/repositories/moie-admin/src/helpers/firebase_helper.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/layout/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/login/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/register/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/location/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/fieldOptions/actions.js",["888","889"],"import {\n    GET_FIELD_OPTIONS,\n    GET_FIELD_OPTIONS_SUCCESS,\n    GET_FIELD_OPTIONS_FAILED,\n    GET_FIELD_OPTION,\n    GET_FIELD_OPTION_SUCCESS,\n    GET_FIELD_OPTION_FAILED,\n    REGISTER_FIELD_OPTION,\n    REGISTER_FIELD_OPTION_SUCCESS,\n    REGISTER_FIELD_OPTION_FAILED,\n    UPDATE_FIELD_OPTION,\n    UPDATE_FIELD_OPTION_SUCCESS,\n    UPDATE_FIELD_OPTION_FAILED, DELETE_FIELD_OPTION, DELETE_FIELD_OPTION_SUCCESS, DELETE_FIELD_OPTION_FAILED,\n} from \"./actionTypes\";\nimport Conditionals from \"../../common/conditionals\";\n\nexport const getFieldOptions = (conditional, limit, offset) => ({\n    type: GET_FIELD_OPTIONS,\n    conditional: conditional,\n    limit: limit,\n    offset: offset\n})\n\nexport const getFieldOptionByGroup = (groups, limit, offset) => {\n    const conditions = new Conditionals.Condition;\n    if(groups.length > 0) conditions.add(\"groups\", groups.join(\"::\"), Conditionals.OPERATORS.IN);\n    return getFieldOptions(conditions.all(), limit, offset);\n}\n\nexport const getProductFieldOption = (limit, offset) => {\n    return getFieldOptionByName(\"PRODUCT\", limit, offset);\n}\n\nexport const getFieldOptionByName = (name, limit, offset) => {\n    const conditions = new Conditionals.Condition;\n    conditions.add(\"name\", name, Conditionals.OPERATORS.EQUAL);\n    return getFieldOptions(conditions.all(), limit, offset);\n}\n\nexport const getFieldOptionsSuccess = (data, meta) => ({\n    type: GET_FIELD_OPTIONS_SUCCESS,\n    meta: meta,\n    payload: data,\n})\n\nexport const getFieldOptionsFailed = error => ({\n    type: GET_FIELD_OPTIONS_FAILED,\n    payload: error,\n})\n\nexport const getFieldOption = id => ({\n    type: GET_FIELD_OPTION,\n    id\n})\n\nexport const getFieldOptionSuccess = data => ({\n    type: GET_FIELD_OPTION_SUCCESS,\n    payload: data,\n})\n\nexport const getFieldOptionFailed = error => ({\n    type: GET_FIELD_OPTION_FAILED,\n    payload: error,\n})\n\nexport const registerFieldOption = (data, history) => {\n    return {\n        type: REGISTER_FIELD_OPTION,\n        payload: { data, history },\n    }\n}\n\nexport const registerFieldOptionSuccess = data => {\n    return {\n        type: REGISTER_FIELD_OPTION_SUCCESS,\n        payload: data,\n    }\n}\n\n\nexport const registerFieldOptionFailed = data => {\n    return {\n        type: REGISTER_FIELD_OPTION_FAILED,\n        payload: data,\n    }\n}\n\nexport const updateFieldOption = (id, data, history) => {\n    return {\n        type: UPDATE_FIELD_OPTION,\n        payload: { id, data, history },\n    }\n}\nexport const updateFieldOptionSuccess = data => {\n    return {\n        type: UPDATE_FIELD_OPTION_SUCCESS,\n        payload: data,\n    }\n}\nexport const updateFieldOptionFail = error => {\n    return {\n        type: UPDATE_FIELD_OPTION_FAILED,\n        payload: error,\n    }\n}\n\nexport const deleteFieldOption = (id, history) => {\n    return {\n        type: DELETE_FIELD_OPTION,\n        payload: { id, history },\n    }\n}\nexport const deleteFieldOptionSuccess = data => {\n    return {\n        type: DELETE_FIELD_OPTION_SUCCESS,\n        payload: data,\n    }\n}\nexport const deleteFieldOptionFail = error => {\n    return {\n        type: DELETE_FIELD_OPTION_FAILED,\n        payload: error,\n    }\n}\n","/home/dev/workspace/repositories/moie-admin/src/store/product/actions.js",["890","891"],"import {\n    GET_PRODUCTS,\n    GET_PRODUCTS_SUCCESS,\n    GET_PRODUCTS_FAILED,\n    GET_PRODUCT,\n    GET_PRODUCT_SUCCESS,\n    GET_PRODUCT_FAILED,\n    REGISTER_PRODUCT_FAILED,\n    REGISTER_PRODUCT_SUCCESS,\n    REGISTER_PRODUCT,\n    UPDATE_PRODUCT_FAILED,\n    UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT, RESET_PRODUCT, QUERY_PRODUCTS, QUERY_PRODUCTS_FAILED, QUERY_PRODUCTS_SUCCESS, QUERY_PENDING_PRODUCTS\n} from \"./actionTypes\";\nimport Conditionals from \"../../common/conditionals\";\nimport {getFieldOptions} from \"../fieldOptions/actions\";\n\nexport const resetProduct = () => ({\n    type: RESET_PRODUCT,\n})\n\nexport const getProducts = (conditional, limit, offset) => ({\n    type: GET_PRODUCTS,\n    conditional: conditional,\n    limit: limit,\n    offset: offset\n})\n\n\n\nexport const getProductsByIds = (ids, offset) => {\n    const conditions = new Conditionals.Condition;\n    if(ids.length > 0) conditions.add(\"id\", ids.join(\"::\"), Conditionals.OPERATORS.IN);\n    return getProducts(conditions.all(), ids.length, offset);\n}\n\nexport const getProductsSuccess = (data, meta) => ({\n    type: GET_PRODUCTS_SUCCESS,\n    meta: meta,\n    payload: data,\n})\n\nexport const getProductsFailed = error => ({\n    type: GET_PRODUCTS_FAILED,\n    payload: error,\n})\n\nexport const getProduct = id => ({\n    type: GET_PRODUCT,\n    id\n})\n\nexport const getProductSuccess = data => ({\n    type: GET_PRODUCT_SUCCESS,\n    payload: data,\n})\n\nexport const getProductFailed = error => ({\n    type: GET_PRODUCT_FAILED,\n    payload: error,\n})\n\nexport const registerProduct = (data, history) => {\n    return {\n        type: REGISTER_PRODUCT,\n        payload: { data, history },\n    }\n}\n\nexport const registerProductSuccess = data => {\n    return {\n        type: REGISTER_PRODUCT_SUCCESS,\n        payload: data.product,\n    }\n}\n\n\nexport const registerProductFailed = data => {\n    return {\n        type: REGISTER_PRODUCT_FAILED,\n        payload: data,\n    }\n}\n\nexport const updateProduct = (id, data, history) => {\n    return {\n        type: UPDATE_PRODUCT,\n        payload: { id, data, history },\n    }\n}\n\nexport const updateProductSuccess = data => {\n    return {\n        type: UPDATE_PRODUCT_SUCCESS,\n        payload: data,\n    }\n}\n\n\nexport const updateProductFail = error => {\n    return {\n        type: UPDATE_PRODUCT_FAILED,\n        payload: error,\n    }\n}\n\n\n\nexport const countProductByStatus = () => {\n    const params = {operation:'id::count', group:\"status\"};\n    return queryProducts(params, 'statusGroup');\n}\n\nexport const pendingProducts = (id) => ({\n    type: QUERY_PENDING_PRODUCTS,\n    id:id\n})\nexport const queryProducts = (params, node) => ({\n    type: QUERY_PRODUCTS,\n    params: params,\n    node: node,\n})\nexport const queryProductsFailed = error => ({\n    type: QUERY_PRODUCTS_FAILED,\n    payload: error,\n})\nexport const queryProductsSuccess = (data, meta, node) => ({\n    type: QUERY_PRODUCTS_SUCCESS,\n    meta: meta,\n    payload: data,\n    node: node,\n})","/home/dev/workspace/repositories/moie-admin/src/store/auth/profile/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/forgetpwd/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/auth/forgetpwd/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/helpers/backend_helper.js",["892"],"// Login Method\nimport {del, get, post, put} from \"./api_helper\";\nimport * as url from \"./url_helper\";\nimport {DELIVERY_METHODS} from \"./url_helper\";\n\nconst postLogin = data => post(url.POST_LOGIN, data);\n\nconst registerCustomer = data => post(url.POST_CUSTOMER, data);\n\nconst updateCustomer = (id, data) => put(`${url.PUT_CUSTOMER}/${id}`, data);\n\n//customers\nconst fetchCustomersApi = data => get(url.GET_CUSTOMER, {}, data);\nconst fetchCustomer = data => get((data && data.id) ? `${url.GET_CUSTOMER}/${data.id}` : url.GET_CUSTOMER, data);\nconst deleteCustomerApi = (id) => del(`${url.PUT_CUSTOMER}/${id}`);\n\n//products\nconst fetchProductsApi = params => get(url.GET_PRODUCT, {}, params);\nconst fetchProductApi = data => get((data && data.id) ? `${url.GET_PRODUCT}/${data.id}` : url.GET_PRODUCT, data);\nconst registerProductApi = data => post(url.POST_PRODUCT, data);\nconst updateProductApi = (id, data) => put(`${url.PUT_PRODUCT}/${id}`, data);\n//const deleteProductApi = (id) => del(`${url.DELETE_PRODUCT}/${id}`);\nconst updateProductSizeListApi = (productId, data) => post(`${url.POST_PRODUCT}/${productId}/changeSize`, data);\nconst getProductsPendingApi = (productId) => get(`${url.POST_PRODUCT}/${productId}/productPendings`, {}, {});\n\n//Categories\nconst fetchCategoriesApi = data => get(url.CATEGORY, {}, data);\nconst fetchCategoryApi = (id) => get(`${url.CATEGORY}/${id}`,{});\nconst registerCategoryApi = data => post(url.CATEGORY, data);\nconst updateCategoryApi = (id, data) => put(`${url.CATEGORY}/${id}`, data);\n\n//Sizes template\nconst fetchSizesApi = data => get(url.SIZE, {}, data);\nconst fetchSizeApi = (id) => get(`${url.SIZE}/${id}`,{});\nconst registerSizeApi = data => post(url.SIZE, data);\nconst updateSizeApi = (id, data) => put(`${url.SIZE}/${id}`, data);\n\n//Product Sizes\nconst fetchProductSizesApi = data => get(url.PRODUCT_SIZE, {}, data);\nconst fetchProductSizeApi = (id) => get(`${url.PRODUCT_SIZE}/${id}`,{});\nconst registerProductSizeApi = data => post(url.PRODUCT_SIZE, data);\nconst updateProductSizeApi = (id, data) => put(`${url.PRODUCT_SIZE}/${id}`, data);\n\n\n//Product images\nconst fetchProductImagesApi = data => get(url.PRODUCT_IMAGES, {}, data);\nconst fetchProductImageApi = (productId) => get(`${url.PRODUCT_IMAGES}/${productId}`,{});\nconst registerProductImageApi = data => post(url.PRODUCT_IMAGES, data);\nconst updateProductImageApi = (productId, data) => put(`${url.PRODUCT_IMAGES}/${productId}`, data);\n\n//FieldOptions\nconst fetchFieldOptionsApi = data => get(url.FIELD_OPTIONS, {}, data);\nconst fetchFieldOptionApi = (id) => get(`${url.FIELD_OPTIONS}/${id}`,{});\nconst registerFieldOptionApi = data => post(url.FIELD_OPTIONS, data);\nconst updateFieldOptionApi = (id, data) => put(`${url.FIELD_OPTIONS}/${id}`, data);\nconst deleteFieldOptionApi = (id, data) => del(`${url.FIELD_OPTIONS}/${id}`, data);\n\n//Delivery locality\nconst fetchDeliveryLocalitiesApi = data => get(url.DELIVERY_LOCALITY, {}, data);\nconst fetchDeliveryLocalityApi = (id) => get(`${url.DELIVERY_LOCALITY}/${id}`,{});\nconst registerDeliveryLocalityApi = data => post(url.DELIVERY_LOCALITY, data);\nconst updateDeliveryLocalityApi = (id, data) => put(`${url.DELIVERY_LOCALITY}/${id}`, data);\n\n//locations\nconst fetchStatesApi = data => get(url.STATES, {}, data);\nconst fetchStateApi = (id) => get(`${url.STATES}/${id}`,{});\nconst registerStateApi = data => post(url.STATES, data);\nconst updateStateApi = (id, data) => put(`${url.STATES}/${id}`, data);\nconst deleteStateApi = (id) => del(`${url.STATES}/${id}`);\n\n//orders\nconst fetchOrdersApi = data => get(url.ORDERS, {}, data);\nconst fetchOrderApi = (id) => get(`${url.ORDERS}/${id}`,{});\nconst registerOrderApi = data => post(url.ORDERS, data);\nconst nextStatusOrderApi = data => post(`${url.ORDERS}/nextStatus`, data);\nconst updateOrderApi = (id, data) => put(`${url.ORDERS}/${id}`, data);\nconst deleteOrderApi = (id) => del(`${url.ORDERS}/${id}`);\n\nconst fetchDeliveryMethodsApi = () => get(`${url.DELIVERY_METHODS}`,{});\nconst fetchDeliveryQuoteApi = (data) => post(`${url.DELIVERY_METHODS}/quote`,data);\n\nconst fetchMunicipalitiesApi = data => get(url.MUNICIPALITIES, {}, data);\nconst fetchMunicipalityApi = (id) => get(`${url.MUNICIPALITIES}/${id}`,{});\nconst registerMunicipalityApi = data => post(url.MUNICIPALITIES, data);\nconst updateMunicipalityApi = (id, data) => put(`${url.MUNICIPALITIES}/${id}`, data);\nconst deleteMunicipalityApi = (id) => del(`${url.MUNICIPALITIES}/${id}`);\n\nconst fetchDataApi = (urlStr, data) => get(urlStr, {}, data);\n\nexport {\n    fetchDataApi,\n\n    postLogin,\n    registerCustomer,\n    updateCustomer,\n    fetchCustomer,\n    fetchCustomersApi,\n    deleteCustomerApi,\n    fetchProductsApi,\n\n    fetchStatesApi,\n    fetchStateApi,\n    updateStateApi,\n    registerStateApi,\n    deleteStateApi,\n\n    fetchMunicipalitiesApi,\n    fetchMunicipalityApi,\n    updateMunicipalityApi,\n    registerMunicipalityApi,\n    deleteMunicipalityApi,\n\n    fetchProductApi,\n    registerProductApi,\n    updateProductApi,\n\n    fetchCategoriesApi,\n    fetchCategoryApi,\n    registerCategoryApi,\n    updateCategoryApi,\n\n    fetchSizesApi,\n    fetchSizeApi,\n    registerSizeApi,\n    updateSizeApi,\n\n    fetchProductSizesApi,\n    fetchProductSizeApi,\n    registerProductSizeApi,\n    updateProductSizeApi,\n    updateProductSizeListApi,\n\n    getProductsPendingApi,\n    nextStatusOrderApi,\n\n    fetchProductImagesApi,\n    fetchProductImageApi,\n    registerProductImageApi,\n    updateProductImageApi,\n\n    fetchDeliveryLocalitiesApi,\n    fetchDeliveryLocalityApi,\n    registerDeliveryLocalityApi,\n    updateDeliveryLocalityApi,\n\n    fetchFieldOptionsApi,\n    fetchFieldOptionApi,\n    registerFieldOptionApi,\n    updateFieldOptionApi,\n    deleteFieldOptionApi,\n\n    fetchOrdersApi,\n    fetchOrderApi,\n    registerOrderApi,\n    updateOrderApi,\n    deleteOrderApi,\n\n    fetchDeliveryMethodsApi,\n    fetchDeliveryQuoteApi,\n}\n","/home/dev/workspace/repositories/moie-admin/src/helpers/service.js",["893"],"import {fetchDataApi} from \"./backend_helper\";\nimport Conditionals from \"../common/conditionals\";\nimport {showMessage} from \"../components/MessageToast/ShowToastMessages\";\nimport {DEFAULT_PAGE_LIMIT} from \"../common/pagination\";\n\nexport const getData = (urlStr, name, conditionalOptions ) => {\n    const conditions = new Conditionals.Condition;\n    if (name) {\n        if (conditionalOptions) {\n            conditions.add(conditionalOptions.fieldName, name, conditionalOptions.operator);\n        } else {\n            conditions.add('name', name, Conditionals.OPERATORS.LIKE);\n        }\n    }\n    const cond = Conditionals.getConditionalFormat(conditions.all());\n    const query = Conditionals.buildHttpGetQuery(cond, DEFAULT_PAGE_LIMIT, 0);\n    return fetchDataApi(urlStr, query);\n}\n\nexport const showResponseMessage = (response, message) => {\n    if (response.status === 200) {\n        showMessage.success(message);\n    } else {\n        showMessage.error(message);\n    }\n}\n","/home/dev/workspace/repositories/moie-admin/src/store/order/actions.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/order/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/fieldOptions/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/common/languages.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Municipality/list/municipalityList.js",["894","895","896","897","898","899","900","901","902"],"import React, {useEffect, useState} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {Card, CardBody, Col, Row, Spinner} from \"reactstrap\"\nimport paginationFactory, {\n    PaginationListStandalone,\n    PaginationProvider,\n} from \"react-bootstrap-table2-paginator\"\nimport ToolkitProvider, {Search} from \"react-bootstrap-table2-toolkit\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\n\nimport {Link} from \"react-router-dom\"\nimport {Button, Tooltip} from \"@material-ui/core\";\nimport {DEFAULT_PAGE_LIMIT} from \"../../../common/pagination\";\nimport {ConfirmationModal, ConfirmationModalAction} from \"../../../components/Modal/ConfirmationModal\";\nimport {deleteMunicipality, getMunicipalities, getStates} from \"../../../store/location/actions\";\nimport {TableFilter} from \"../../../components/TableFilter\";\nimport municipalityColumns from \"./municipalityColumns\";\nimport {normalizeColumnsList, statesToOptions} from \"../../../common/converters\";\n\nconst MunicipalityList = props => {\n    const {states, municipalities, meta, getStates, onGetMunicipalities, onDeleteMunicipality, loading, refresh} = props;\n    const [municipalityList, setMunicipalityList] = useState([])\n    const [filter, setFilter] = useState(false);\n    const [conditional, setConditional] = useState(null);\n\n    const pageOptions = {\n        sizePerPage: DEFAULT_PAGE_LIMIT,\n        //totalSize: meta.totalRegisters, // replace later with size(users),\n        custom: true,\n    }\n    const {SearchBar} = Search\n\n    useEffect(() => {\n        onGetMunicipalities();\n    }, [refresh])\n\n    useEffect(() => {\n        onGetMunicipalities()\n        getStates();\n    }, [onGetMunicipalities])\n\n    useEffect(() => {\n        setMunicipalityList(municipalities.map(m => {\n            m.state = m.state.name;\n            return m;\n        }))\n    }, [municipalities])\n\n    /*useEffect(() => {\n        const cols = statesColumns(onDelete).map(col => {\n            if (col.dataField === 'state' && (!col.filterOptions || !col.filterOptions.length)) {\n                col.filterOptions = statesToOptions(states);\n            }\n            return col;\n        });\n        setColumns(cols);\n    }, [states])*/\n\n    // eslint-disable-next-line no-unused-vars\n    const handleTableChange = (type, {page, searchText}) => {\n        onGetMunicipalities(conditional, DEFAULT_PAGE_LIMIT, (page - 1)*DEFAULT_PAGE_LIMIT);\n    }\n\n    const onFilterAction = (condition) => {\n        setConditional(condition);\n        onGetMunicipalities(condition, DEFAULT_PAGE_LIMIT, 0);\n    }\n    const onConfirmDelete = (id) => {\n        onDeleteMunicipality(id);\n    };\n\n    const onDelete = (id) => {\n        ConfirmationModalAction({\n            title: '¿Seguro desea eliminar el Municipio?',\n            description: 'Usted está eliminado este Municipio, una vez eliminado no podrá ser recuperado.',\n            id: '_clienteModal',\n            onConfirm: () => onConfirmDelete(id)\n        });\n    };\n    const columns = municipalityColumns(onDelete);\n\n    var selectRowProp = {\n        mode: \"checkbox\",\n        clickToSelect: true,\n    };\n\n    const NoDataIndication = () => (\n        <div className=\"spinner\">\n            <div className=\"rect1\"/>\n            <div className=\"rect2\"/>\n            <div className=\"rect3\"/>\n            <div className=\"rect4\"/>\n            <div className=\"rect5\"/>\n        </div>\n    );\n\n    return (\n        <Row>\n            <TableFilter\n                onPressDisabled={() => setFilter(false)}\n                isActive={filter}\n                fields={columns}\n                onSubmit={onFilterAction.bind(this)}/>\n\n            <Col lg={filter ? \"8\" : \"12\"}>\n                <Card>\n                    <CardBody>\n                        <PaginationProvider pagination={paginationFactory(pageOptions)}>\n                            {({paginationProps, paginationTableProps}) => (\n                                <ToolkitProvider\n                                    keyField=\"id\"\n                                    data={municipalityList || []}\n                                    columns={normalizeColumnsList(columns)}\n                                    bootstrap4\n                                    search\n                                >\n                                    {toolkitProps => (\n                                        <React.Fragment>\n                                            <Row className=\"row mb-2\">\n                                                <Col md={6}>\n                                                    <div className=\"form-inline mb-3\">\n                                                        <div className=\"search-box ms-2\">\n                                                            {!filter && (\n                                                                <div className=\"position-relative\">\n                                                                    <SearchBar {...toolkitProps.searchProps}/>\n                                                                    <i className=\"mdi mdi-magnify search-icon\"> </i>\n                                                                </div>\n                                                            )}\n                                                        </div>\n                                                    </div>\n                                                </Col>\n                                                <Col md={6}>\n                                                    <div className=\"mb-3 float-md-end\">\n                                                        {columns.some(s => s.filter) && (\n                                                            <Tooltip placement=\"bottom\" title=\"Filtros Avanzados\" aria-label=\"add\">\n                                                                <Button onClick={() => setFilter(!filter)}>\n                                                                    <i className={\"mdi mdi-filter\"}> </i>\n                                                                </Button>\n                                                            </Tooltip>\n                                                        )}\n                                                        <Link to={\"/municipality\"} className=\"btn btn-primary waves-effect waves-light text-light\">\n                                                            <i className=\"mdi mdi-plus\"> </i> Nuevo Municipio\n                                                        </Link>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col xl=\"12\">\n                                                    <div className=\"table-responsive mb-4\">\n                                                        <BootstrapTable\n                                                            remote\n                                                            responsive\n                                                            loading={true}\n                                                            bordered={false}\n                                                            striped={true}\n                                                            classes={\"table table-centered table-nowrap mb-0\"}\n                                                            noDataIndication={() => <NoDataIndication/>}\n                                                            {...toolkitProps.baseProps}\n                                                            onTableChange={handleTableChange}\n                                                            {...paginationTableProps}\n                                                        />\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <div className=\"float-sm-end\">\n                                                <PaginationListStandalone {...paginationProps} />\n                                            </div>\n                                        </React.Fragment>\n                                    )}\n                                </ToolkitProvider>\n                            )}\n                        </PaginationProvider>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nMunicipalityList.propTypes = {\n    states: PropTypes.array,\n    onGetMunicipalities: PropTypes.func,\n    onDeleteMunicipality: PropTypes.func,\n}\n\nconst mapStateToProps = state => {\n    const {states, municipalities, loading, meta, refresh} = state.Location\n    return {states, municipalities, loading, meta, refresh}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    getStates,\n    onGetMunicipalities: (conditional = null, limit = DEFAULT_PAGE_LIMIT, page) => dispatch(getMunicipalities(conditional, limit, page)),\n    onDeleteMunicipality: (id) => dispatch(deleteMunicipality(id))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MunicipalityList)\n","/home/dev/workspace/repositories/moie-admin/src/i18n.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/State/list/statesList.js",["903","904","905"],"import React, {useEffect, useState} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {Card, CardBody, Col, Row} from \"reactstrap\"\nimport paginationFactory, {PaginationListStandalone, PaginationProvider,} from \"react-bootstrap-table2-paginator\"\nimport ToolkitProvider, {Search} from \"react-bootstrap-table2-toolkit\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\n\nimport {Link} from \"react-router-dom\"\nimport {Button, Tooltip} from \"@material-ui/core\";\nimport {DEFAULT_PAGE_LIMIT} from \"../../../common/pagination\";\nimport {ConfirmationModalAction} from \"../../../components/Modal/ConfirmationModal\";\nimport {deleteState, getStates} from \"../../../store/location/actions\";\nimport statesColumns from \"./statesColumn\";\nimport {TableFilter} from \"../../../components/TableFilter\";\nimport {normalizeColumnsList} from \"../../../common/converters\";\nimport NoDataIndication from \"../../../components/Common/NoDataIndication\";\n\nconst StatesList = props => {\n    const {states, meta, onGetStates, onDeleteState, loading, refresh} = props;\n    const [statesList, setStatesList] = useState([])\n    const [filter, setFilter] = useState(false);\n    const [conditional, setConditional] = useState(null);\n\n\n    const pageOptions = {\n        sizePerPage: DEFAULT_PAGE_LIMIT,\n        totalSize: meta.totalRegisters,\n        custom: true,\n    }\n    const {SearchBar} = Search\n\n    useEffect(() => {\n        onGetStates();\n    }, [refresh])\n\n    useEffect(() => {\n        onGetStates()\n    }, [onGetStates])\n\n    useEffect(() => {\n        setStatesList(states)\n    }, [states])\n\n    // eslint-disable-next-line no-unused-vars\n    const handleTableChange = (type, {page, searchText}) => {\n        onGetStates(conditional, DEFAULT_PAGE_LIMIT, (page - 1)*DEFAULT_PAGE_LIMIT);\n    }\n\n    const onFilterAction = (condition) => {\n        setConditional(condition);\n        onGetStates(condition, DEFAULT_PAGE_LIMIT, 0);\n    }\n    const onConfirmDelete = (id) => {\n        onDeleteState(id);\n    };\n\n    const onDelete = (id) => {\n        ConfirmationModalAction({\n            title: '¿Seguro desea eliminar el Estado?',\n            description: 'Usted está eliminado este Estado, una vez eliminado no podrá ser recuperado.',\n            id: '_clienteModal',\n            onConfirm: () => onConfirmDelete(id)\n        });\n    };\n\n    const columns = statesColumns(onDelete);\n\n    var selectRowProp = {\n        mode: \"checkbox\",\n        clickToSelect: true,\n    };\n\n    return (\n        <Row>\n            <TableFilter\n                onPressDisabled={() => setFilter(false)}\n                isActive={filter}\n                fields={columns}\n                onSubmit={onFilterAction.bind(this)}/>\n\n            <Col lg={filter ? \"8\" : \"12\"}>\n                <Card>\n                    <CardBody>\n                        <PaginationProvider pagination={paginationFactory(pageOptions)}>\n                            {({paginationProps, paginationTableProps}) => (\n                                <ToolkitProvider\n                                    keyField=\"id\"\n                                    data={statesList || []}\n                                    columns={normalizeColumnsList(columns)}\n                                    bootstrap4\n                                    search\n                                >\n                                    {toolkitProps => (\n                                        <React.Fragment>\n                                            <Row className=\"row mb-2\">\n                                                <Col md={6}>\n                                                    <div className=\"form-inline mb-3\">\n                                                        <div className=\"search-box ms-2\">\n                                                            {!filter && (\n                                                                <div className=\"position-relative\">\n                                                                    <SearchBar {...toolkitProps.searchProps}/>\n                                                                    <i className=\"mdi mdi-magnify search-icon\"> </i>\n                                                                </div>\n                                                            )}\n                                                        </div>\n                                                    </div>\n                                                </Col>\n                                                <Col md={6}>\n                                                    <div className=\"mb-3 float-md-end\">\n                                                        {columns.some(s => s.filter) && (\n                                                            <Tooltip placement=\"bottom\" title=\"Filtros Avanzados\" aria-label=\"add\" >\n                                                                <Button onClick={() => setFilter(!filter)}>\n                                                                    <i className={\"mdi mdi-filter\"}></i>\n                                                                </Button>\n                                                            </Tooltip>\n                                                        )}\n                                                        <Link to={\"/state\"} className=\"btn btn-primary waves-effect waves-light text-light\">\n                                                            <i className=\"mdi mdi-plus\"></i> Nuevo Estado\n                                                        </Link>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col xl=\"12\">\n                                                    <div className=\"table-responsive mb-4\">\n                                                        <BootstrapTable\n                                                            remote\n                                                            responsive\n                                                            loading={true}\n                                                            bordered={false}\n                                                            striped={true}\n                                                            classes={\n                                                                \"table table-centered table-nowrap mb-0\"\n                                                            }\n                                                            noDataIndication={() => <NoDataIndication/>}\n                                                            {...toolkitProps.baseProps}\n                                                            onTableChange={handleTableChange}\n                                                            {...paginationTableProps}\n                                                        />\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <div className=\"float-sm-end\">\n                                                <PaginationListStandalone {...paginationProps} />\n                                            </div>\n                                        </React.Fragment>\n                                    )}\n                                </ToolkitProvider>\n                            )}\n                        </PaginationProvider>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nStatesList.propTypes = {\n    states: PropTypes.array,\n    onGetStates: PropTypes.func,\n    onDeleteStates: PropTypes.func,\n}\n\nconst mapStateToProps = state => {\n    const {states, loading, meta, refresh} = state.Location\n    return {states, loading, meta, refresh}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetStates: (conditional = null, limit = DEFAULT_PAGE_LIMIT, page) => dispatch(getStates(conditional, limit, page)),\n    onDeleteStates: (id) => dispatch(deleteState(id))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(StatesList)\n","/home/dev/workspace/repositories/moie-admin/src/pages/Product/ProductList/products-list.js",["906","907","908","909","910","911","912","913","914"],"import {Card, CardBody, Col, Row} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {DEFAULT_PAGE_LIMIT} from \"../../../common/pagination\";\nimport {connect} from \"react-redux\";\nimport {countProductByStatus, getProducts} from \"../../../store/product/actions\";\nimport React, {useEffect, useState} from \"react\";\nimport {TableFilter} from \"../../../components/TableFilter\";\nimport paginationFactory, {PaginationListStandalone, PaginationProvider} from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, {Search} from \"react-bootstrap-table2-toolkit\";\nimport {normalizeColumnsList} from \"../../../common/converters\";\nimport {Button, Tooltip} from \"@material-ui/core\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport NoDataIndication from \"../../../components/Common/NoDataIndication\";\nimport productColumns from \"./productColumn\";\nimport WidgetCard from \"../../../components/Common/WidgetCard\";\nimport StatusWidgetCard from \"../../../components/Common/StatusWidgetCard\";\n\n\nconst series2 = [70]\n\nconst options2 = {\n    fill: {\n        colors: ['#34c38f']\n    },\n    chart: {\n        sparkline: {\n            enabled: !0\n        }\n    },\n    dataLabels: {\n        enabled: !1\n    },\n    plotOptions: {\n        radialBar: {\n            hollow: {\n                margin: 0,\n                size: '60%'\n            },\n            track: {\n                margin: 0\n            },\n            dataLabels: {\n                show: !1\n            }\n        }\n    }\n};\n\nconst series3 = [55]\n\nconst options3 = {\n    fill: {\n        colors: ['#5b73e8']\n    },\n    chart: {\n        sparkline: {\n            enabled: !0\n        }\n    },\n    dataLabels: {\n        enabled: !1\n    },\n    plotOptions: {\n        radialBar: {\n            hollow: {\n                margin: 0,\n                size: '60%'\n            },\n            track: {\n                margin: 0\n            },\n            dataLabels: {\n                show: !1\n            }\n        }\n    }\n};\n\n\n/*\n\nconst reportss = [\n    {\n        id: 1,\n        icon: \"mdi mdi-clock-five-time\",\n        title: \"Productos\",\n        value: pageOptions.totalSize,\n        prefix: \"\",\n        suffix: \"\",\n        decimal: 0,\n        charttype: \"bar\",\n        chartheight: 40,\n        chartwidth: 70,\n        badgeValue: parseInt(statusGroup.filter(s => s.status === 1 ).map(s => s.count)),\n        color: \"success\",\n        desc: \"activos\",\n        badgeValue2: parseInt(statusGroup.filter(s => s.status === 0 ).map(s => s.count)),\n        color2: \"danger\",\n        desc2: \"inactivos\",\n        series: series1,\n        options: options1,\n    },\n    {\n        id: 2,\n        icon: \"mdi mdi-arrow-up-bold\",\n        title: \"Productos publicados\",\n        value: parseInt(pageOptions.totalSize * 0.67),\n        decimal: 0,\n        charttype: \"radialBar\",\n        chartheight: 45,\n        chartwidth: 45,\n        prefix: \"\",\n        suffix: \"\",\n        badgeValue: \"0.2%\",\n        color: \"success\",\n        desc: \"desde ayer\",\n        series: series2,\n        options: options2,\n    },\n    {\n        id: 3,\n        icon: \"mdi mdi-arrow-up-bold\",\n        title: \"Agregados en esta semana\",\n        value: 265,\n        decimal: 0,\n        prefix: \"\",\n        suffix: \"\",\n        charttype: \"radialBar\",\n        chartheight: 45,\n        chartwidth: 45,\n        badgeValue: \"0.24%\",\n        color: \"success\",\n        desc: \"desde hace una semana\",\n        series: series3,\n        options: options3,\n    },\n];\n*/\n\n\nconst ProductList = props => {\n\n    const {refresh, onGetProducts, onCountProducts, products, meta, customData} = props;\n    const [productList, setProductList] = useState([]);\n    const [statusGroup, setStatusGroup] = useState(null);\n    const [filter, setFilter] = useState(false);\n    const [conditional, setConditional] = useState(null);\n\n    const pageOptions = {\n        sizePerPage: DEFAULT_PAGE_LIMIT,\n        totalSize: meta?.totalRegisters || 0,\n        custom: true,\n    };\n\n    useEffect(() => {\n        onGetProducts();\n    }, [refresh])\n\n    useEffect(() => {\n        onGetProducts();\n        onCountProducts();\n    }, [onGetProducts])\n\n    useEffect(() => {\n        setProductList(products)\n    }, [products])\n\n    useEffect(() => {\n        if (customData && customData.data && customData.data.statusGroup) {\n            const group = {};\n            customData.data.statusGroup.forEach(prod => {\n                group[prod.status] = prod.id;\n            });\n            setStatusGroup(group);\n        }\n        console.log('customData', customData, statusGroup);\n    }, [customData])\n\n    const onFilterAction = (condition) => {\n        setConditional(condition);\n        onGetProducts(condition, DEFAULT_PAGE_LIMIT, 0);\n    }\n\n    const handleTableChange = (type, {page, searchText}) => {\n        onGetProducts(conditional, DEFAULT_PAGE_LIMIT, (page - 1) * DEFAULT_PAGE_LIMIT);\n    }\n\n    const columns = productColumns();\n\n    return (\n        <>\n            <Row className=\"text-center\">\n                <Col md={4}>\n                    <StatusWidgetCard title=\"Productos\" statusGroup={statusGroup}/>\n                </Col>\n            </Row>\n            <Row>\n                <TableFilter\n                    onPressDisabled={() => setFilter(false)}\n                    isActive={filter}\n                    fields={columns}\n                    onSubmit={onFilterAction.bind(this)}/>\n\n                <Col lg={filter ? \"8\" : \"12\"}>\n                    <Card>\n                        <CardBody>\n                            <PaginationProvider pagination={paginationFactory(pageOptions)}>\n                                {({paginationProps, paginationTableProps}) => (\n                                    <ToolkitProvider\n                                        keyField=\"id\"\n                                        data={productList || []}\n                                        columns={normalizeColumnsList(columns)}\n                                        bootstrap4\n                                        search\n                                    >\n                                        {toolkitProps => (\n                                            <React.Fragment>\n\n                                                <Row className=\"row mb-2\">\n                                                    <Col md={6}>\n                                                        <div className=\"form-inline mb-3\">\n                                                            <div className=\"search-box ms-2\">\n                                                                {/*{!filter && (\n                                                                <div className=\"position-relative\">\n                                                                    <SearchBar {...toolkitProps.searchProps}/>\n                                                                    <i className=\"mdi mdi-magnify search-icon\"> </i>\n                                                                </div>\n                                                            )}*/}\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <div className=\"mb-3 float-md-end\">\n                                                            {columns.some(s => s.filter) && (\n                                                                <Tooltip placement=\"bottom\" title=\"Filtros Avanzados\" aria-label=\"add\">\n                                                                    <Button onClick={() => setFilter(!filter)}>\n                                                                        <i className={\"mdi mdi-filter\"}> </i>\n                                                                    </Button>\n                                                                </Tooltip>\n                                                            )}\n                                                            <Link to={\"/product\"} className=\"btn btn-primary waves-effect waves-light text-light\">\n                                                                <i className=\"mdi mdi-plus\"> </i> Nuevo Producto\n                                                            </Link>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col xl=\"12\">\n                                                        <div className=\"table-responsive mb-4\">\n                                                            <BootstrapTable\n                                                                remote\n                                                                responsive\n                                                                loading={true}\n                                                                bordered={false}\n                                                                striped={true}\n                                                                classes={\"table table-centered table-nowrap mb-0\"}\n                                                                noDataIndication={() => <NoDataIndication/>}\n                                                                onTableChange={handleTableChange}\n                                                                {...toolkitProps.baseProps}\n                                                                {...paginationTableProps}\n                                                            />\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <div className=\"float-sm-end\">\n                                                    <PaginationListStandalone {...paginationProps} />\n                                                </div>\n                                            </React.Fragment>\n                                        )}\n                                    </ToolkitProvider>\n                                )}\n                            </PaginationProvider>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nProductList.propTypes = {\n    onGetProducts: PropTypes.func,\n    products: PropTypes.array,\n    meta: PropTypes.object,\n    loading: PropTypes.bool,\n    refresh: PropTypes.bool,\n}\n\nconst mapStateToProps = state => {\n    const {products, loading, meta, refresh, custom} = state.Product\n    return {customData: custom, products, loading, meta, refresh}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetProducts: (conditional = null, limit = DEFAULT_PAGE_LIMIT, page) => dispatch(getProducts(conditional, limit, page)),\n    onCountProducts: () => dispatch(countProductByStatus()),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProductList);\n","/home/dev/workspace/repositories/moie-admin/src/components/Fields/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/productSize/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/productImages/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/customer/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/category/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/sizes/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/Common/DropZoneIcon.js",[],"/home/dev/workspace/repositories/moie-admin/src/helpers/api_helper.js",[],"/home/dev/workspace/repositories/moie-admin/src/helpers/url_helper.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Category/list/categoryColumn.js",["915"],"import React from \"react\"\nimport {Link} from \"react-router-dom\"\nimport {STATUS_COLORS, StatusField} from \"../../../components/StatusField\";\nimport {ConverterStatus} from \"../../../common/converters\";\nimport {STATUS} from \"../../../common/constants\";\nimport Conditionals from \"../../../common/conditionals\";\nimport {isValidOption, STATUS_OPTIONS} from \"../../../common/utils\";\n\nconst categoryColumns = (onDelete = false) => [\n    {\n        text: \"Nombre\",\n        dataField: \"name\",\n        sort: true,\n        formatter: (cellContent, item) => (\n            <Link to={`/category/${item.id}`} className=\"text-body\">\n                {item.name}\n            </Link>\n        ),\n        filter: true,\n        filterType: \"text\",\n        filterCondition: Conditionals.OPERATORS.LIKE,\n    },\n    {\n        text: \"Prefijo\",\n        dataField: \"prefix\",\n        sort: true,\n        filter: true,\n        filterType: \"text\",\n    },\n    /*{\n        text: \"Código DIAN\",\n        dataField: \"dianCode\",\n        sort: true,\n        filter: true,\n        filterType: \"text\",\n    },\n    {\n        text: \"Código ISO\",\n        dataField: \"isoCode\",\n        sort: true,\n        filter: true,\n        filterType: \"text\",\n    },*/\n    {\n        text: \"Estado\",\n        dataField: \"status\",\n        sort: true,\n        filter: true,\n        filterType: \"select\",\n        filterOptions: STATUS_OPTIONS,\n        filterDefaultOption: STATUS_OPTIONS[0],\n        formatter: (cellContent, item) => (\n            <StatusField color={item.status === STATUS.ACTIVE ? STATUS_COLORS.SUCCESS : STATUS_COLORS.DANGER}>\n                {ConverterStatus(item.status)}\n            </StatusField>\n        ),\n    },\n    {\n        dataField: \"menu\",\n        isDummyField: true,\n        text: \"Acción\",\n        formatter: (cellContent, item) => (\n            <ul className=\"list-inline font-size-20 contact-links mb-0\">\n                <li className=\"list-inline-item\">\n                    <Link to={`/category/${item.id}`} className=\"px-2 text-primary\">\n                        <i className=\"uil uil-pen font-size-18\"> </i>\n                    </Link>\n                </li>\n                {/*{onDelete && (\n                    <li className=\"list-inline-item\">\n                        <button size=\"small\" className=\"btn btn-sm text-danger\" onClick={() => onDelete(item.id)}>\n                            <i className=\"uil uil-trash-alt font-size-18\"> </i>\n                        </button>\n                    </li>\n                )}*/}\n            </ul>\n        ),\n    },\n]\n\nexport default categoryColumns;\n","/home/dev/workspace/repositories/moie-admin/src/components/Fields/messages.js",["916"],"export default {\n    required: 'Campo requerido',\n    minLength: 'Debe ingresar al menos {length} caracteres.',\n    maxLength: 'Solo puede ingresar {length} caracteres.',\n    email_invalid: 'Email es invalido'\n};\n","/home/dev/workspace/repositories/moie-admin/src/components/Common/Image.js",[],"/home/dev/workspace/repositories/moie-admin/src/store/product/actionTypes.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/Modal/ConfirmationModal.js",[],"/home/dev/workspace/repositories/moie-admin/src/config.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Dashboard/top-vendors.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Dashboard/mini-widget.js",["917","918","919","920"],"import PropTypes from 'prop-types'\nimport React from \"react\"\nimport { Col, Card, CardBody } from \"reactstrap\"\nimport CountUp from 'react-countup';\nimport ReactApexChart from \"react-apexcharts\"\nimport WidgetCard from \"../../components/Common/WidgetCard\";\n\nconst MiniWidget = props => {\n    return (\n        <React.Fragment>\n            {props.reports.map((report, key) => (\n                <Col md={6} xl={3} key={key}>\n                    <WidgetCard report={report}/>\n                </Col>\n            ))}\n        </React.Fragment>\n    )\n}\n\nexport default MiniWidget\n\nMiniWidget.propTypes = {\n    reports: PropTypes.array\n}\n","/home/dev/workspace/repositories/moie-admin/src/components/Common/NoDataIndication.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Dashboard/latest-transaction.js",["921","922"],"import React from \"react\"\nimport { Card, CardBody, Table, CardTitle, Label ,Input ,Row, Col, Button} from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\n\nconst LatestTransaction = () => {\n    return (\n        <Row>\n            <Col lg={12}>\n                <Card>\n                    <CardBody>\n                        <CardTitle className=\"h4 mb-4\">Pedidos Retrazados</CardTitle>\n                        <div className=\"table-responsive\">\n                            <Table className=\"table-centered table-nowrap mb-0\">\n                                <thead className=\"table-light\">\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Cliente</th>\n                                    <th>Fecha</th>\n                                    <th>Monto</th>\n                                    <th>Estado</th>\n                                    <th>Metodo de Envio</th>\n                                    <th></th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr>\n                                    <td><Link to=\"#\" className=\"text-body fw-bold\">#MB2540</Link> </td>\n                                    <td>Ramon Olmos</td>\n                                    <td>\n                                        16 Mar, 2021\n                                    </td>\n                                    <td>\n                                        $400\n                                    </td>\n                                    <td>\n                                        <span className=\"badge rounded-pill bg-soft-danger font-size-12\">Reservado</span>\n                                    </td>\n                                    <td>\n                                        Interrapidismo\n                                    </td>\n                                    <td>\n\n                                        <Button type=\"button\" color=\"primary\" className=\"btn-sm btn-rounded waves-effect waves-light\">\n                                            <i className={\"mdi mdi-magnify\"}></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td><Link to=\"#\" className=\"text-body fw-bold\">#MB2541</Link> </td>\n                                    <td>Ramon Olmos</td>\n                                    <td>\n                                        16 Mar, 2021\n                                    </td>\n                                    <td>\n                                        $380\n                                    </td>\n                                    <td>\n                                        <span className=\"badge rounded-pill bg-soft-danger font-size-12\">Reservado</span>\n                                    </td>\n                                    <td>\n                                       Interrapidismo\n                                    </td>\n                                    <td>\n\n                                        <Button type=\"button\" color=\"primary\" className=\"btn-sm btn-rounded waves-effect waves-light\">\n                                            <i className={\"mdi mdi-magnify\"}></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td><Link to=\"#\" className=\"text-body fw-bold\">#MB2542</Link> </td>\n                                    <td>Ramon Olmos</td>\n                                    <td>\n                                        16 Mar, 2021\n                                    </td>\n                                    <td>\n                                        $384\n                                    </td>\n                                    <td>\n                                        <span className=\"badge rounded-pill bg-soft-danger font-size-12\">Reservado</span>\n                                    </td>\n                                    <td>\n                                        Interrapidismo\n                                    </td>\n                                    <td>\n                                        <Button type=\"button\" color=\"primary\" className=\"btn-sm btn-rounded waves-effect waves-light\">\n                                            <i className={\"mdi mdi-magnify\"}></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td><Link to=\"#\" className=\"text-body fw-bold\">#MB2543</Link> </td>\n                                    <td>Ramon Olmos</td>\n                                    <td>\n                                        16 Mar, 2021\n                                    </td>\n                                    <td>\n                                        $412\n                                    </td>\n                                    <td>\n                                        <span className=\"badge rounded-pill bg-soft-danger font-size-12\">Reservado</span>\n                                    </td>\n                                    <td>\n                                        Interrapidismo\n                                    </td>\n                                    <td>\n                                        <Button type=\"button\" color=\"primary\" className=\"btn-sm btn-rounded waves-effect waves-light\">\n                                            <i className={\"mdi mdi-magnify\"}></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td><Link to=\"#\" className=\"text-body fw-bold\">#MB2544</Link> </td>\n                                    <td>Ramon Olmos</td>\n                                    <td>\n                                        16 Mar, 2021\n                                    </td>\n                                    <td>\n                                        $404\n                                    </td>\n                                    <td>\n                                        <span className=\"badge rounded-pill bg-soft-danger font-size-12\">Reservado</span>\n                                    </td>\n                                    <td>\n                                        Interrapidismo\n                                    </td>\n                                    <td>\n                                        <Button type=\"button\" color=\"primary\" className=\"btn-sm btn-rounded waves-effect waves-light\">\n                                            <i className={\"mdi mdi-magnify\"}></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td><Link to=\"#\" className=\"text-body fw-bold\">#MB2545</Link> </td>\n                                    <td>Ramon Olmos</td>\n                                    <td>\n                                        16 Mar, 2021\n                                    </td>\n                                    <td>\n                                        $392\n                                    </td>\n                                    <td>\n                                        <span className=\"badge rounded-pill bg-soft-warning font-size-12\">Impresa</span>\n                                    </td>\n                                    <td>\n                                        Interrapidismo\n                                    </td>\n                                    <td>\n                                        <Button type=\"button\" color=\"primary\" className=\"btn-sm btn-rounded waves-effect waves-light\">\n                                            <i className={\"mdi mdi-magnify\"}></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </Table>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default LatestTransaction\n","/home/dev/workspace/repositories/moie-admin/src/pages/Customer/CustomerList/customers-list.js",["923"],"import React, {useEffect, useState} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {Card, CardBody, Col, Row} from \"reactstrap\"\nimport paginationFactory, {PaginationListStandalone, PaginationProvider,} from \"react-bootstrap-table2-paginator\"\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\n\nimport customerColumn from \"./customerColumn\"\nimport {Link} from \"react-router-dom\"\nimport {countCustomersByStatus, deleteCustomer, getCustomers} from \"../../../store/customer/actions\";\nimport {Button, Tooltip} from \"@material-ui/core\";\nimport {DEFAULT_PAGE_LIMIT} from \"../../../common/pagination\";\nimport {ConfirmationModalAction} from \"../../../components/Modal/ConfirmationModal\";\nimport NoDataIndication from \"../../../components/Common/NoDataIndication\";\nimport {normalizeColumnsList} from \"../../../common/converters\";\nimport {TableFilter} from \"../../../components/TableFilter\";\nimport StatusWidgetCard from \"../../../components/Common/StatusWidgetCard\";\n\nconst CustomersList = props => {\n    const {customers, meta, onGetCustomers, onDeleteCustomer,  refresh, onCountCustomers, customData} = props;\n    const [statusGroup, setStatusGroup] = useState(null);\n    const [customerList, setCustomerList] = useState([])\n    const [filter, setFilter] = useState(false);\n    const [conditional, setConditional] = useState(null);\n    const pageOptions = {\n        sizePerPage: DEFAULT_PAGE_LIMIT,\n        totalSize: meta?.totalRegisters,\n        custom: true,\n    }\n\n    useEffect(() => {\n        onGetCustomers();\n        onCountCustomers();\n    }, [refresh])\n\n    useEffect(() => {\n        onGetCustomers()\n    }, [onGetCustomers])\n\n    useEffect(() => {\n        setCustomerList(customers)\n    }, [customers])\n\n    useEffect(() => {\n        if (customData && customData.data && customData.data.statusGroup) {\n            const group = {};\n            customData.data.statusGroup.forEach(prod => {\n                group[prod.status === true?1:0] = prod.id;\n            });\n            setStatusGroup(group);\n        }\n    }, [customData])\n\n    // eslint-disable-next-line no-unused-vars\n    const handleTableChange = (type, {page, searchText}) => {\n        onGetCustomers(conditional, DEFAULT_PAGE_LIMIT, (page - 1) * DEFAULT_PAGE_LIMIT);\n    }\n\n    const onFilterAction = (condition) => {\n        setConditional(condition);\n        onGetCustomers(condition, DEFAULT_PAGE_LIMIT, 0);\n    }\n    const onConfirmDelete = (id) => {\n        onDeleteCustomer(id);\n    };\n\n    const onDelete = (id) => {\n        ConfirmationModalAction({\n            title: '¿Seguro desea eliminar Cliente?',\n            description: 'Usted está eliminado este cliente, una vez eliminado no podrá ser recuperado.',\n            id: '_clienteModal',\n            onConfirm: () => onConfirmDelete(id)\n        });\n    };\n\n    const columns = customerColumn(onDelete);\n\n    return (\n        <>\n            <Row className=\"text-center\">\n                <Col md={4}>\n                    <StatusWidgetCard title=\"Clientes\" statusGroup={statusGroup}/>\n                </Col>\n            </Row>\n            <Row>\n                <TableFilter\n                    onPressDisabled={() => setFilter(false)}\n                    isActive={filter}\n                    fields={columns}\n                    onSubmit={onFilterAction.bind(this)}/>\n\n                <Col lg={filter ? \"8\" : \"12\"}>\n                    <Card>\n                        <CardBody>\n                            <PaginationProvider\n                                pagination={paginationFactory(pageOptions)}\n                            >\n                                {({paginationProps, paginationTableProps}) => (\n                                    <ToolkitProvider\n                                        keyField=\"id\"\n                                        data={customerList || []}\n                                        columns={normalizeColumnsList(columns)}\n                                        bootstrap4\n                                        search\n                                    >\n                                        {toolkitProps => (\n                                            <React.Fragment>\n                                                <Row className=\"row mb-2\">\n                                                    <Col md={6}>\n                                                        <div className=\"form-inline mb-3\">\n                                                            <div className=\"search-box ms-2\">\n                                                                {/* {!filter && (\n                                                                            <div className=\"position-relative\">\n                                                                                <SearchBar {...toolkitProps.searchProps}/>\n                                                                                <i className=\"mdi mdi-magnify search-icon\"></i>\n                                                                            </div>\n                                                                        )}*/}\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <div className=\"mb-3 float-md-end\">\n                                                            <Tooltip\n                                                                placement=\"bottom\"\n                                                                title=\"Filtros Avanzados\" aria-label=\"add\"\n                                                            >\n                                                                <Button onClick={() => setFilter(!filter)}>\n                                                                    <i className={\"mdi mdi-filter\"}></i></Button>\n                                                            </Tooltip>\n                                                            <Link to={\"/customer\"} className=\"btn btn-primary waves-effect waves-light text-light\">\n                                                                <i className=\"mdi mdi-plus\"></i> Nuevo Cliente\n                                                            </Link>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col xl=\"12\">\n                                                        <div className=\"table-responsive mb-4\">\n                                                            <BootstrapTable\n                                                                remote\n                                                                responsive\n                                                                loading={true}\n                                                                bordered={false}\n                                                                striped={true}\n                                                                classes={\"table table-centered table-nowrap mb-0\"}\n                                                                noDataIndication={() => <NoDataIndication/>}\n                                                                {...toolkitProps.baseProps}\n                                                                onTableChange={handleTableChange}\n                                                                {...paginationTableProps}\n                                                            />\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <div className=\"float-sm-end\">\n                                                    <PaginationListStandalone {...paginationProps}/>\n                                                </div>\n                                            </React.Fragment>\n                                        )}\n                                    </ToolkitProvider>\n                                )}\n                            </PaginationProvider>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nCustomersList.propTypes = {\n    customers: PropTypes.array,\n    onGetCustomers: PropTypes.func,\n}\n\nconst mapStateToProps = state => {\n    const {customers, loading, meta, refresh, custom} = state.Customer\n    return {customData: custom, customers, loading, meta, refresh}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetCustomers: (conditional = null, limit = DEFAULT_PAGE_LIMIT, page) => dispatch(getCustomers(conditional, limit, page)),\n    onDeleteCustomer: (id) => dispatch(deleteCustomer(id)),\n    onCountCustomers: () => dispatch(countCustomersByStatus()),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CustomersList)\n","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputAsyncSearchField.js",["924","925"],"import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport AsyncSelect from 'react-select/async';\nimport {FormGroup, FormText} from \"reactstrap\";\nimport './style.scss';\nimport {getData} from \"../../helpers/service\";\nimport {arrayToOptions, arrayToOptionsByFieldName, getEmptyOptions} from \"../../common/converters\";\nimport {AvBaseInput} from \"availity-reactstrap-validation\";\nimport messages from \"./messages\";\n\nconst InputAsyncSearchField = (props) => {\n    const {defaultValue, conditionalOptions} = props;\n    const [selected, setSelected] = useState(null);\n\n    useEffect(() => {\n        setSelected(defaultValue);\n    }, [defaultValue]);\n\n    return (\n        <AvAsyncSearchInput\n            validate={{required: {value: props.required === true, errorMessage: messages.required}}}\n            name={props.name}\n            value={selected}\n            placeholder={props.placeholder}\n            urlStr={props.urlStr}\n            onChange={(value) => {\n                setSelected(value)\n                if (props.onChange) {\n                    props.onChange(value);\n                }\n            }}\n            conditionalOptions={conditionalOptions}\n        />\n    )\n}\n\nInputAsyncSearchField.propTypes = {\n    urlStr: PropTypes.string.isRequired,\n};\n\n\nclass AvAsyncSearchInput extends AvBaseInput {\n    render() {\n        const {name, value, onChange, validate, urlStr, conditionalOptions, placeholder, helpMessage} = this.props;\n        const validation = this.context.FormCtrl.getInputState(this.props.name);\n        const feedback = validation.errorMessage ? (<div className=\"invalid-feedback\" style={{display: \"block\"}}>{validation.errorMessage}</div>) : null;\n        const help = helpMessage ? (<FormText>{helpMessage}</FormText>) : null;\n        const isInvalid = validation.errorMessage ? \"select-is-invalid\" : \"\";\n\n        return (\n            <FormGroup className={isInvalid}>\n                <div>\n                    <AsyncSelect\n                        cacheOptions\n                        defaultOptions\n                        name={name}\n                        value={value}\n                        onChange={onChange}\n                        placeholder={placeholder}\n                        loadOptions={inputValue => {\n                            return getData(urlStr, inputValue, conditionalOptions).then(response => {\n                                const fieldName = conditionalOptions && conditionalOptions.fieldName ? conditionalOptions.fieldName:'name';\n                                const options = arrayToOptionsByFieldName(response.data, fieldName);\n                                options.unshift(getEmptyOptions());\n                                return options\n                            })\n                        }}\n                    />\n                </div>\n                {feedback}\n                {help}\n            </FormGroup>\n        );\n    }\n};\n\n\nexport default InputAsyncSearchField;\n","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputPhoneField.js",["926","927","928"],"import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport es from 'react-phone-input-2/lang/es.json'\nimport {AvBaseInput} from \"availity-reactstrap-validation\";\nimport messages from \"./messages\";\nimport {FormText, FormGroup} from \"reactstrap\";\nimport './style.scss';\n\nconst InputPhoneField = (props) => {\n\n    return (\n        <AvPhoneInput\n            id={props.id}\n            name={props.name}\n            value={props.value}\n            required={props.required}\n            country={props.country || 'co'}\n            placeholder={props.placeholder}\n            onChange={(value) => props.onChange && props.onChange(value)}\n            validate={\n                {\n                    required: {value: props.required ? true : false, errorMessage: messages.required}\n                }\n            }\n        />\n    )\n}\n\nInputPhoneField.propTypes = {\n    name: PropTypes.string,\n    placeholder: PropTypes.string,\n    onChange: PropTypes.func,\n    country: PropTypes.string,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.any,\n};\n\nclass AvPhoneInput extends AvBaseInput {\n    render() {\n        const {id, name, value, onChange, validate, required, country, placeholder, helpMessage} = this.props;\n        const validation = this.context.FormCtrl.getInputState(this.props.name);\n        const feedback = validation.errorMessage ? (<div className=\"invalid-feedback\" style={{display: \"block\"}}>{validation.errorMessage}</div>) : null;\n        const help = helpMessage ? (<FormText>{helpMessage}</FormText>) : null;\n        const isInvalid = validation.errorMessage ? \"select-is-invalid\" : \"\";\n\n        return (\n            <FormGroup className={isInvalid}>\n                <div>\n                    <PhoneInput\n                        id={id || name}\n                        country={country}\n                        onlyCountries={[country]}\n                        preferredCountries={[country]}\n                        value={value}\n                        name={name}\n                        placeholder={placeholder}\n                        localization={es}\n                        inputClass=\"form-control w-100\"\n                        inputProps={{\n                            name: {name},\n                            required: {required}\n                        }}\n                        onChange={(value, country, e, formattedValue) => {\n                            onChange(formattedValue);\n                        }}\n                    />\n                </div>\n                {feedback}\n                {help}\n            </FormGroup>\n        );\n    }\n};\n\nexport default InputPhoneField;\n","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputDate.js",["929"],"import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport {AvBaseInput} from \"availity-reactstrap-validation\";\nimport messages from \"./messages\";\nimport {FormText, FormGroup} from \"reactstrap\";\nimport './style.scss';\nimport \"flatpickr/dist/themes/material_blue.css\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"flatpickr/dist/l10n/es.js\";\nimport \"../Fields/scss/customInputDate.scss\";\n\nexport const DATE_MODES = {\n    SINGLE: 'single',\n    MULTIPLE: 'multiple',\n    RANGE: 'range',\n};\n\nconst InputDateField = (props) => {\n    const [ selected, setSelected ] = useState(null);\n    const {defaultValue, options} = props;\n\n    useEffect(() => {\n        /*if(options && options.length > 0) {\n            if(defaultValue) {\n                const selected = options.filter(item => item.value === defaultValue)[0];\n                setSelected(selected);\n            } else {\n                setSelected(null);\n            }\n        }*/\n        setSelected(defaultValue ? defaultValue: null);\n    }, [options, defaultValue]);\n\n    return (\n        <AvSearchInput\n            validate={\n                {\n                    required: { value: props.required ? true : false, errorMessage: messages.required }\n                }\n            }\n            name={props.name}\n            value={selected}\n            placeholder={props.placeholder}\n            onChange={(date) => {\n                setSelected(date)\n                if(props.onChange){\n                    props.onChange(date);\n                }\n            }}\n            mode={props.mode}\n            classNamePrefix=\"select2-selection\"\n        />\n    )}\n\nInputDateField.propTypes = {\n    name: PropTypes.string,\n    placeholder: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.array,\n    defaultValue: PropTypes.any,\n    mode: PropTypes.string\n};\n\nclass AvSearchInput extends AvBaseInput {\n    render() {\n        const { name, value, onChange, validate, placeholder, helpMessage,mode } = this.props;\n        const validation = this.context.FormCtrl.getInputState(this.props.name);\n        const feedback = validation.errorMessage ? (<div className=\"invalid-feedback\" style={{display: \"block\"}}>{validation.errorMessage}</div>) : null;\n        const help = helpMessage ? (<FormText>{helpMessage}</FormText>) : null;\n        const isInvalid = validation.errorMessage ? \"select-is-invalid\" : \"\";\n\n        return (\n            <FormGroup className={isInvalid}>\n                <div>\n                    <Flatpickr\n                        id={name}\n                        className=\"form-control d-block\"\n                        validate={validate}\n                        value={value}\n                        name={name}\n                        placeholder={placeholder}\n                        options={{\n                            mode: mode || DATE_MODES.SINGLE,\n                            dateFormat: \"Y-m-d\",\n                            locale: 'es'\n                        }}\n                        onChange={onChange}\n                    />\n                </div>\n                {feedback}\n                {help}\n            </FormGroup>\n        );\n    }\n};\n\nexport default InputDateField;\n","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputTextField.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputSwitchField.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputSearchField.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/Common/WidgetCard.js",["930"],"import React from \"react\"\nimport imageNotFound from \"../../assets/images/image-not-found.png\"\nimport {Card, CardBody} from \"reactstrap\";\nimport ReactApexChart from \"react-apexcharts\";\nimport CountUp from \"react-countup\";\nimport PropTypes from \"prop-types\";\n\nconst WidgetCard = props => {\n\n    const {report} = props;\n    return (\n        <Card>\n            {report.charttype && (\n                <CardBody>\n                    <div className=\"float-end mt-2\">\n\n                        <ReactApexChart\n                            options={report.options}\n                            series={report.series}\n                            type={report.charttype}\n                            height={report.chartheight}\n                            width={report.chartwidth}\n                        />\n\n                    </div>\n                    <div>\n                        <h4 className=\"mb-1 mt-1\">\n                        <span>\n                            <CountUp end={report.value} separator=\",\" prefix={report.prefix} suffix={report.suffix} decimals={report.decimal}/>\n                        </span>\n                        </h4>\n                        <p className=\"text-muted mb-0\">{report.title}</p>\n                    </div>\n                    <p className=\"text-muted mt-3 mb-0\">\n                    <span className={\"text-\" + report.color + \" me-1\"}>\n                        <i className={report.icon + \" me-1\"}> </i>{report.badgeValue}\n                    </span> {\" \"}{report.desc}\n                        {(report.badgeValue2 || report.badgeValue2 === 0) && (\n                            <> &nbsp; / &nbsp;\n                                <span className={\"text-\" + report.color2 + \" me-1\"}>\n                                    <i className={report.icon2 + \" me-1\"}> </i> {report.badgeValue2}\n                                </span> {\" \"}{report.desc2}\n                            </>\n                        )}\n                    </p>\n                </CardBody>\n            )}\n        </Card>\n    )\n}\n\n\nWidgetCard.propTypes = {\n    report: PropTypes.object.isRequired\n}\n\nexport default WidgetCard\n","/home/dev/workspace/repositories/moie-admin/src/components/TableFilter/index.js",["931","932","933"],"import React from \"react\";\nimport {Button, Card, CardBody, Col, Label, Row} from \"reactstrap\";\nimport {AvForm} from \"availity-reactstrap-validation\";\nimport PropTypes from \"prop-types\";\nimport {Button as ButtonMaterial} from \"@material-ui/core\";\nimport Conditionals from \"../../common/conditionals\";\nimport {FieldAsyncSelect, FieldDate, FieldNumber, FieldSelect, FieldText} from \"../Fields\";\nimport {formatDateToServer, isValidObject, isValidOption, isValidString} from \"../../common/utils\";\nimport moment from \"moment\";\nimport {DATE_MODES} from \"../Fields/InputDate\";\n\nexport const TableFilter = (props) => {\n    const {fields} = props;\n    const form = React.createRef();\n\n    if (!props.isActive) {\n        return false;\n    }\n\n    const handleValidSubmit = (event, values) => {\n        if (props.onSubmit) {\n\n            let data = {...values};\n            const ranges = {};\n            Object.keys(values).filter(v => v.includes('_number')).forEach(v => {\n                const key = \"_\"+v.replace('_numberA_', '').replace('_numberB_', '');\n                if(!ranges[key]) ranges[key] = [];\n                ranges[key].push(values[v]);\n                delete data[v]\n            });\n\n            data = {...data, ...ranges};\n\n            const conditions = new Conditionals.Condition;\n            Object.keys(data)//FieldNames\n                .filter(dataField => data[dataField] && data[dataField] !== \"\")\n                .forEach(dataField => {\n\n                    //Se borra el \"_\" del inicio porque algunos campos se renderizan mal, ejemplo el status\n                    const fieldName = dataField.substr(1);\n\n                    const field = fields.filter(field => field.filter).filter(field => field.dataField === fieldName);\n\n                    if (field && field.length) {\n                        const filter = field[0];\n                        const value = data[dataField];\n\n                        let operator;\n                        if (filter.filterType === \"text\") {\n                            operator = filter.filterCondition ? filter.filterCondition : Conditionals.OPERATORS.LIKE;\n                            conditions.add(fieldName, value, operator);\n                        }\n                        if (filter.filterType === \"select\" && isValidOption(filter.filterOptions, value.value)) {//for status\n                            if(value.value === true || value.value === false){\n                                operator = resolveOperator(filter, value.value ? Conditionals.OPERATORS.TRUE : Conditionals.OPERATORS.FALSE);\n                                conditions.add(fieldName, null, operator);\n                            }else{\n                                operator = resolveOperator(filter, Conditionals.OPERATORS.EQUAL);\n                                conditions.add(fieldName, value.value, operator);\n                            }\n                        }\n                        if (filter.filterType === \"asyncSelect\" && value.value) {\n                            operator = resolveOperator(filter, Conditionals.OPERATORS.EQUAL);\n                            conditions.add(fieldName, value.value, operator);\n                        }\n\n                        if (filter.filterType === \"number\" && isValidObject(value) && value.length > 0) {\n\n                            if (value.length > 1 && value[0] && value[1]) {\n                                conditions.add(fieldName, value[0], Conditionals.OPERATORS.BETWEEN,[value[1]]);\n\n                            } else if (value.length > 0 && value[0]) {\n                                conditions.add(fieldName, value[1], Conditionals.OPERATORS.GREATER_THAN_OR_EQUAL);\n\n                            } else if (value.length > 1 && value[1]) {\n                                conditions.add(fieldName, value[1], Conditionals.OPERATORS.LESS_THAN);\n                            }\n\n                        }\n                        if (filter.filterType === \"dateRange\" && value && value.length > 0) {\n                            if(moment(value[0]).isSame(moment(value[1]))){\n                                conditions.add(fieldName,formatDateToServer(value[0]),Conditionals.OPERATORS.LESS_THAN_OR_EQUAL);\n                            }\n                            else {\n                                conditions.add(fieldName,formatDateToServer(value[0]), Conditionals.OPERATORS.BETWEEN,[formatDateToServer(value[1])]);\n                            }\n                        }\n                    }\n                });\n\n            props.onSubmit(conditions.all());\n        }\n    }\n\n    const resolveOperator = (filter, defaultOperator) => {\n        return  filter.filterCondition ? filter.filterCondition : defaultOperator;\n    }\n\n    const cleanFilters = () => {\n        const conditions = new Conditionals.Condition;\n        props.onSubmit(conditions.all());\n        form && form.current && form.current.reset();\n    }\n\n    return (<div className=\"col-md-4\">\n        <Card>\n            <CardBody>\n                {props.onPressDisabled && (\n                    <div className={\"float-end\"}>\n                        <ButtonMaterial color=\"primary\" size=\"small\" onClick={props.onPressDisabled}>\n                            <i className={\"mdi mdi-minus\"}> </i>\n                        </ButtonMaterial>\n                    </div>\n                )}\n                <div className=\"mb-4\">\n                    <h5><i className={\"mdi mdi-filter-menu\"}> </i> Filtros Avanzados &nbsp;</h5>\n                </div>\n                <AvForm className=\"needs-validation\" autoComplete=\"off\"\n                        onValidSubmit={(e, v) => {\n                            handleValidSubmit(e, v)\n                        }}\n                        ref={form}>\n\n                        {fields.filter(f => f.filter).map((field, idx) => (\n                            <Row key={idx}>\n                                {field.filterType === 'text' && (\n                                    <Col md=\"12\" >\n                                        <div className=\"mb-3\">\n                                            <Label htmlFor={\"_\" + field.dataField}>{field.text}</Label>\n                                            <FieldText name={\"_\" + field.dataField}\n                                                       defaultValue={field.filterDefaultOption}\n                                                       placeholder={field.text}/>\n                                        </div>\n                                    </Col>\n                                )}\n                                {field.filterType === 'number' && (\n                                        <Col md=\"12\" >\n                                            <div className=\"mb-3\">\n                                                <Label htmlFor={\"_\" + field.dataField}>{field.text}</Label>\n                                                <Row>\n                                                    <Col xs=\"6\">\n                                                        <FieldNumber name={\"_numberA_\" + field.dataField}\n                                                                     defaultValue={field.filterDefaultOption}\n                                                                     placeholder=\"Desde\"\n                                                        />\n                                                    </Col>\n                                                    <Col xs=\"6\">\n                                                        <FieldNumber name={\"_numberB_\" + field.dataField}\n                                                                     defaultValue={field.filterDefaultOption}\n                                                                     placeholder=\"Hasta\"\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </Col>\n                                )}\n                                {field.filterType === 'select' && (\n                                    <Col md=\"12\" >\n                                        <div className=\"mb-3\">\n                                            <Label htmlFor={\"_\" + field.dataField}>{field.text}</Label>\n                                            <FieldSelect\n                                                name={\"_\" + field.dataField}\n                                                options={field.filterOptions}\n                                                defaultValue={field.filterDefaultOption}\n                                                placeholder={field.text}\n                                            />\n                                        </div>\n                                    </Col>\n                                )}\n                                {field.filterType === 'asyncSelect' && (\n                                    <Col md=\"12\" >\n                                        <div className=\"mb-3\">\n                                            <Label htmlFor={\"_\" + field.dataField}>{field.text}</Label>\n                                            <FieldAsyncSelect\n                                                name={\"_\" + field.dataField}\n                                                urlStr={field.urlStr}\n                                                placeholder={field.text}\n                                                defaultValue={field.filterDefaultOption}\n                                            />\n                                        </div>\n                                    </Col>\n                                )}\n                                {field.filterType === 'dateRange' && (\n                                    <Col md=\"12\" >\n                                        <div className=\"mb-3\">\n                                            <Label htmlFor={\"_\" + field.dataField}>{field.text}</Label>\n                                            <FieldDate\n                                                name={\"_\" + field.dataField}\n                                                mode={DATE_MODES.RANGE}\n                                            />\n                                        </div>\n                                    </Col>\n                                )}\n                            </Row>\n                        ))}\n                    <Row>\n                        <Col md={\"12\"}>\n                            <div className={\"float-end\"}>\n                                <Button type=\"submit\" color=\"primary\" className=\"btn-sm btn-rounded waves-effect waves-light\">\n                                    <i className={\"mdi mdi-magnify\"}> </i> Buscar\n                                </Button>\n                            </div>\n                            <div className={\"float-end ml-5\"}>\n                                <Button type=\"button\"\n                                        onClick={cleanFilters}\n                                        color=\"default\"\n                                        className=\"btn-sm btn-rounded waves-effect waves-light\">\n                                    Limpiar\n                                </Button>\n                            </div>\n                        </Col>\n                    </Row>\n                </AvForm>\n            </CardBody>\n        </Card>\n    </div>)\n}\nTableFilter.propTypes = {\n    isActive: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    onPressDisabled: PropTypes.func,\n    fields: PropTypes.array.isRequired\n};\n","/home/dev/workspace/repositories/moie-admin/src/helpers/jwt-token-access/accessToken.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Customer/CustomerFilter/index.js",["934","935","936"],"import React, {useState} from \"react\";\nimport {Button, Card, CardBody, Col, Label, Row} from \"reactstrap\";\nimport {FieldEmail, FieldText, FieldSelect,FieldDate} from \"../../../components/Fields\";\nimport {AvForm} from \"availity-reactstrap-validation\";\nimport {DATE_MODES} from \"../../../components/Fields/InputDate\";\nimport PropTypes from \"prop-types\";\nimport Conditionals from \"../../../common/conditionals\";\nimport moment from 'moment';\nimport {Button as ButtonMaterial} from \"@material-ui/core\";\nimport ButtonSubmit from \"../../../components/Common/ButtonSubmit\";\n\nexport const CustomerFilter = (props) => {\n\n    const form = React.createRef();\n    const [filters, setFilters] = useState({isMayorist: null, _status: null, createdAt:null})\n\n    if(!props.isActive){\n        return false;\n    }\n    const yesNoOptions = [\n        {label: '-', value: null},\n        {label: 'Si', value: true},\n        {label: 'No', value: false}];\n\n    const ActiveInactive = [\n        {label: '-', value: null},\n        {label: 'Activo', value: true},\n        {label: 'Inactivo', value: false}];\n    /* retorna  - Conditionals.all - Array */\n    const handleValidSubmit = (event,values) => {\n        if (props.onSubmit) {\n            setFilters(values);\n            const conditions = new Conditionals.Condition;\n            const {name, email, _status, isMayorist, createdAt} = values;\n\n            if (name) {\n                conditions.add('name', name, Conditionals.OPERATORS.LIKE);\n            }\n            if (email) {\n                conditions.add('email', email, Conditionals.OPERATORS.EQUAL);\n            }\n            if (yesNoOptions.filter(o => o.value !== null).map(o => o.value).includes(isMayorist.value)) {\n                    conditions.add('isMayorist', null, isMayorist.value ? Conditionals.OPERATORS.TRUE : Conditionals.OPERATORS.FALSE);\n            }\n            if (createdAt) {\n                if(moment(createdAt[0]).isSame(moment(createdAt[1]))){\n                    conditions.add('createdAt',\n                        moment(createdAt[0]).format(\"YYYY-MM-DD[T]HH:mm:ss\"),\n                        Conditionals.OPERATORS.LESS_THAN_OR_EQUAL\n                    );\n                }\n                else {\n                    conditions.add('createdAt',\n                        moment(createdAt[0]).format(\"YYYY-MM-DD[T]HH:mm:ss\"),\n                        Conditionals.OPERATORS.BETWEEN,\n                        [moment(createdAt[1]).format(\"YYYY-MM-DD[T]HH:mm:ss\")]\n                    );\n                }\n            }\n\n            if (ActiveInactive.filter(o => o.value !== null).map(o => o.value).includes(_status.value)){\n                conditions.add('status', null,\n                    _status.value ?\n                    Conditionals.OPERATORS.TRUE :\n                    Conditionals.OPERATORS.FALSE);\n            }\n            props.onSubmit(conditions.all());\n        }\n    }\n    const cleanFilters = () => {\n        setFilters({isMayorist: null, _status: null, createdAt:null});\n        const conditions = new Conditionals.Condition;\n        props.onSubmit(conditions.all());\n        form && form.current && form.current.reset();\n    }\n    return (<div className=\"col-md-4\">\n                <Card>\n                    <CardBody>\n                        {props.onPressDisabled && (\n                            <div className={\"float-end\"}>\n                                <ButtonMaterial color=\"primary\" size=\"small\" onClick={props.onPressDisabled}>\n                                    <i className={\"mdi mdi-minus\"}></i>\n                                </ButtonMaterial>\n                            </div>\n                        )}\n                        <div className=\"mb-4\">\n                            <h5><i className={\"mdi mdi-filter-menu\"}></i> Filtros Avanzados &nbsp;</h5>\n                        </div>\n                        <AvForm className=\"needs-validation\"\n                                onValidSubmit={(e, v) => {\n                                    handleValidSubmit(e, v)\n                                }}\n                                ref={form}>\n                            <Row>\n                                <Col md=\"12\">\n                                    <div className=\"mb-3\">\n                                        <Label htmlFor=\"name\">Nombre</Label>\n                                        <FieldText\n                                            name={\"name\"}\n                                        />\n                                    </div>\n                                </Col>\n                                <Col md=\"12\">\n                                    <div className=\"mb-3\">\n                                        <Label htmlFor=\"name\">Email</Label>\n                                        <FieldEmail\n                                            name={\"email\"}\n                                        />\n                                    </div>\n                                </Col>\n                                <Col md=\"12\">\n                                    <div className=\"mb-3\">\n                                        <Label htmlFor=\"name\">¿Es Mayorista?</Label>\n                                        <FieldSelect\n                                            name={\"isMayorist\"}\n                                            options={yesNoOptions}\n                                            defaultValue={filters.isMayorist}\n                                        />\n                                    </div>\n                                </Col>\n                                <Col md=\"12\">\n                                    <div className=\"mb-3\">\n                                        <Label htmlFor=\"name\">Fecha de Creación</Label>\n                                        <FieldDate\n                                            name={\"createdAt\"}\n                                            mode={DATE_MODES.RANGE}\n                                            defaultValue={filters.createdAt}\n                                            onChange={(e)=> {\n                                                let newVar = {...filters, createdAt:e};\n                                                setFilters(newVar )\n                                            }}\n                                        />\n                                    </div>\n                                </Col>\n                                <Col md=\"12\">\n                                    <div className=\"mb-3\">\n                                        <Label htmlFor=\"_status\">Estado</Label>\n                                        <FieldSelect\n                                            name={\"_status\"}\n                                            options={ActiveInactive}\n                                            defaultValue={filters._status}\n                                        />\n                                    </div>\n                                </Col>\n                                <Col md={\"12\"}>\n                                    <div className={\"float-end\"}>\n                                        <Button type=\"submit\" color=\"primary\" className=\"btn-sm btn-rounded waves-effect waves-light\">\n                                            <i className={\"mdi mdi-magnify\"}></i> Buscar\n                                        </Button>\n                                    </div>\n                                    <div className={\"float-end ml-5\"}>\n                                        <Button type=\"button\"\n                                                onClick={cleanFilters.bind(this)}\n                                                color=\"default\"\n                                                className=\"btn-sm btn-rounded waves-effect waves-light\">\n                                            Limpiar\n                                        </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </AvForm>\n                    </CardBody>\n                </Card>\n            </div>)\n}\n\nCustomerFilter.propTypes = {\n    isActive: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    onPressDisabled: PropTypes.func\n};\n","/home/dev/workspace/repositories/moie-admin/src/components/StatusField/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Customer/CustomerList/customerColumn.js",["937"],"import React from \"react\"\nimport {Link} from \"react-router-dom\"\nimport {ConverterCustomerStatus} from \"../customer_status\";\nimport {Button, Tooltip} from \"@material-ui/core\";\nimport {STATUS_COLORS, StatusField} from \"../../../components/StatusField\";\nimport {formatDate, STATUS_OPTIONS, YES_NO_OPTIONS} from \"../../../common/utils\";\n\nconst customerListColumns = (onDelete = false) => [\n    {\n        text: \"Nombre\",\n        dataField: \"name\",\n        sort: true,\n        filter: true,\n        filterType: \"text\",\n        formatter: (cellContent, item) => (\n            <>\n                {!item.img ? (\n                    <div className=\"avatar-xs d-inline-block me-2\">\n                        <div className=\"avatar-title bg-soft-primary rounded-circle text-primary\">\n                            <i className=\"mdi mdi-account-circle m-0\"></i>\n                        </div>\n                    </div>\n                ) : (\n                    <img\n                        className=\"avatar-xs rounded-circle me-2\"\n                        src={item.img}\n                        alt={item.name}\n                    />\n                )}\n                <Link to={`/customer/detail/${item.id}`} className=\"text-body\">\n                    {item.name}\n                    {item.isMayorist === true && (\n                        <Tooltip placement=\"bottom\" title=\"Cliente mayorista\" aria-label=\"add\">\n                            <i className={\"mdi mdi-crown font-size-18 mr-1 text-warning\"}> </i>\n                        </Tooltip>\n                    )}\n                </Link>\n            </>\n        ),\n    },\n    {\n        text: \"Email\",\n        dataField: \"email\",\n        sort: true,\n        filter: true,\n        filterType: \"text\",\n    },\n    {\n        text: \"Télefonos\",\n        dataField: \"phone\",\n        sort: false,\n        formatter: (cellContent, item) => (\n            <>\n                <div>Cel.: {item.phone && item.phone.length > 3 ? item.phone : ''}</div>\n                <div>Res.: {item.cellphone && item.cellphone.length > 3 ? item.cellphone : ''}</div>\n            </>\n        ),\n    },\n    {\n        text: \"Fecha creación\",\n        dataField: \"createdAt\",\n        sort: true,\n        filter: true,\n        filterType: \"dateRange\",\n        formatter: (cellContent, item) => (\n            <div>\n                {formatDate(item.createdAt)}\n            </div>\n        ),\n    },\n    {\n        text: \"¿Es Mayorista?\",\n        dataField: \"isMayorist\",\n        sort: true,\n        hidden: true,\n        filter: true,\n        filterType: \"select\",\n        filterOptions: YES_NO_OPTIONS,\n        filterDefaultOption: STATUS_OPTIONS[0],\n    },\n    {\n        text: \"Estado\",\n        dataField: \"status\",\n        sort: true,\n        filter: true,\n        filterType: \"select\",\n        filterOptions: STATUS_OPTIONS,\n        filterDefaultOption: STATUS_OPTIONS[0],\n        formatter: (cellContent, item) => (\n            <StatusField color={item.status === true ? STATUS_COLORS.SUCCESS : STATUS_COLORS.DANGER}>\n                {ConverterCustomerStatus(item.status)}\n            </StatusField>\n        ),\n    },\n    {\n        dataField: \"menu\",\n        isDummyField: true,\n        text: \"Acción\",\n        formatter: (cellContent, item) => (\n            <ul className=\"list-inline font-size-20 contact-links mb-0\">\n                <li className=\"list-inline-item\">\n                    <Link to={`/customer/${item.id}`} className=\"px-2 text-primary\"><i className=\"uil uil-pen font-size-18\"></i></Link>\n                </li>\n                {onDelete && (\n                    <li className=\"list-inline-item\">\n                        <button size=\"small\" className=\"btn btn-sm text-danger\" onClick={() => onDelete(item.id)}>\n                            <i className=\"uil uil-trash-alt font-size-18\"></i>\n                        </button>\n                    </li>\n                )}\n            </ul>\n        ),\n    },\n]\n\nexport default customerListColumns\n","/home/dev/workspace/repositories/moie-admin/src/pages/Customer/customer_status.js",["938","939"],"import React from \"react\";\n\nexport const CUSTOMER_STATUS = {\n    ACTIVE: true,\n    INACTIVE: false\n};\n\nexport const ConverterCustomerStatus = (status) => {\n    switch(status) {\n        case CUSTOMER_STATUS.ACTIVE:\n            return 'Activo';\n            break;\n        default:\n            return 'Inactivo';\n    }\n}\n","/home/dev/workspace/repositories/moie-admin/src/pages/Product/ProductList/productColumn.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/State/list/statesColumn.js",["940"],"import React from \"react\"\nimport {Link} from \"react-router-dom\"\nimport {STATUS_COLORS, StatusField} from \"../../../components/StatusField\";\nimport {ConverterStatus} from \"../../../common/converters\";\nimport {STATUS} from \"../../../common/constants\";\nimport Conditionals from \"../../../common/conditionals\";\nimport {isValidOption, STATUS_OPTIONS} from \"../../../common/utils\";\n\nconst statesColumns = (onDelete = false) => [\n    {\n        text: \"Nombre\",\n        dataField: \"name\",\n        sort: true,\n        formatter: (cellContent, item) => (\n            <>\n                <Link to=\"#\" className=\"text-body\">\n                    {item.name}\n                </Link>\n            </>\n        ),\n        filter: true,\n        filterType: \"text\",\n        filterCondition: Conditionals.OPERATORS.LIKE,\n    },\n    {\n        text: \"Código DIAN\",\n        dataField: \"dianCode\",\n        sort: true,\n        filter: true,\n        filterType: \"text\",\n    },\n    {\n        text: \"Código ISO\",\n        dataField: \"isoCode\",\n        sort: true,\n        filter: true,\n        filterType: \"text\",\n    },\n    {\n        text: \"Estado\",\n        dataField: \"status\",\n        sort: true,\n        filter: true,\n        filterType: \"select\",\n        filterOptions: STATUS_OPTIONS,\n        filterDefaultOption: STATUS_OPTIONS[0],\n        formatter: (cellContent, item) => (\n            <StatusField color={item.status === STATUS.ACTIVE ? STATUS_COLORS.SUCCESS : STATUS_COLORS.DANGER}>\n                {ConverterStatus(item.status)}\n            </StatusField>\n        ),\n    },\n    {\n        dataField: \"menu\",\n        isDummyField: true,\n        text: \"Acción\",\n        formatter: (cellContent, item) => (\n            <ul className=\"list-inline font-size-20 contact-links mb-0\">\n                <li className=\"list-inline-item\">\n                    <Link to={`/state/${item.id}`} className=\"px-2 text-primary\">\n                        <i className=\"uil uil-pen font-size-18\"> </i>\n                    </Link>\n                </li>\n                {onDelete && (\n                    <li className=\"list-inline-item\">\n                        <button size=\"small\" className=\"btn btn-sm text-danger\" onClick={() => onDelete(item.id)}>\n                            <i className=\"uil uil-trash-alt font-size-18\"> </i>\n                        </button>\n                    </li>\n                )}\n            </ul>\n        ),\n    },\n]\n\nexport default statesColumns;\n","/home/dev/workspace/repositories/moie-admin/src/pages/Municipality/list/municipalityColumns.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/Common/HtmlTooltip.js",[],"/home/dev/workspace/repositories/moie-admin/src/components/VerticalLayout/SidebarContent.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Orders/orderDetail.js",["941","942","943","944","945","946"],"/home/dev/workspace/repositories/moie-admin/src/pages/Orders/index.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/index.js",["947","948"],"import React, {useState, useEffect} from \"react\"\nimport {CardBody, Col, Container, Row} from \"reactstrap\"\nimport {Card} from \"@material-ui/core\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport OrderCustomer from \"./orderCustomer\";\nimport OrderProducts from \"./orderProducts\";\nimport OrderCar from \"./orderCar\";\nimport OrderDeliveryOptions from \"./orderDeliveryOptions\";\nimport {resetCustomer} from \"../../../store/customer/actions\";\nimport {resetProduct} from \"../../../store/product/actions\";\nimport {ConfirmationModalAction} from \"../../../components/Modal/ConfirmationModal\";\nimport OrderSummary from \"./orderSummary\";\nimport {registerOrder, resetCar} from \"../../../store/order/actions\";\nimport {DELIVERY_METHODS_PAYMENT_TYPES, DELIVERY_TYPES, PAYMENT_TYPES} from \"../../../common/constants\";\n\nconst CreateOrder = (props) => {\n    const {onResetOrder, car, onRegisterOrder} = props;\n    const [initComponent, setInitComponent] = useState(true);\n    const [isValidOrder, setIsValidOrder] = useState(false);\n\n    useEffect(() => {\n        if (initComponent) {\n            onResetOrder();\n            setInitComponent(false);\n        }\n    }, [initComponent]);\n\n    useEffect(() => {\n        if (car) {\n            const isValidCustomer = !!car.customer.id;\n            const isValidProducts = car.products.length > 0;\n            const isValidDeliveryOptions = car.deliveryOptions && car.deliveryOptions.origin && car.deliveryOptions.type && car.deliveryOptions.method;\n            setIsValidOrder(isValidCustomer && isValidProducts && isValidDeliveryOptions);\n        }\n    }, [car]);\n\n    const onCancelOrder = () => {\n        const dirty = car.customer.id || car.products.length > 0;\n\n        if (!dirty) {\n            resetOrder();\n            return;\n        }\n\n        ConfirmationModalAction({\n            title: 'Confirmación',\n            description: '¿Seguro desea cancelar el pedido?',\n            id: '_OrderModal',\n            onConfirm: () => {\n                resetOrder();\n            }\n        });\n    }\n\n    const resetOrder = () => {\n        onResetOrder();\n        props.history.push(\"/orders\");\n    }\n\n    const onCreateOrder = () => {\n        //console.log('Car', car);\n        const order = {\n            customer: car.customer.id,\n            deliveryMethod: car.deliveryOptions.method,\n            deliveryCost: car.deliveryOptions.cost,\n            chargeOnDelivery: car.deliveryOptions.type === 3,\n            origen: car.deliveryOptions.origin,\n            deliveryType: parseInt(car.deliveryOptions.type),\n            products: car.products.map(prod => ({\n                id: prod.origin.id,\n                productSize: prod.sizeId,\n                quantity: prod.quantity,\n                discountPercentage: prod.discountPercentage,\n            }))\n        };\n\n        if(DELIVERY_METHODS_PAYMENT_TYPES.includes(order.deliveryMethod)){\n            order.piecesForChanges = parseInt(car.deliveryOptions.pieces);\n            order.paymentMode = car.deliveryOptions.paymentType === PAYMENT_TYPES.CASH? 1:2;\n        }\n\n        console.log('order payload', order);\n        onRegisterOrder(order, props.history);\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid>\n                    <Breadcrumb hasBack path=\"/orders\" title=\"Crear pedido\" item={\"Pedido\"}/>\n                    <Card>\n                        <CardBody>\n                            <Row>\n                                <Col md={12}>\n                                    <OrderCustomer/>\n                                </Col>\n                            </Row>\n                            <hr/>\n                            <Row>\n                                <Col md={12}>\n                                    <OrderProducts/>\n                                </Col>\n                            </Row>\n                            <hr/>\n                            <Row>\n                                <Col md={12}>\n                                    <OrderCar/>\n                                </Col>\n                            </Row>\n                            <hr/>\n                            <Row>\n                                <Col md={12}>\n                                    <OrderDeliveryOptions/>\n                                </Col>\n                            </Row>\n                            <hr/>\n                            <Row>\n                                <Col md={12}>\n                                    <OrderSummary />\n                                </Col>\n                            </Row>\n                            <hr/>\n                            <Row>\n                                <Col md={12} className=\"text-center\">\n                                    <div className=\"btn-group\">\n                                        <button type=\"button\" className=\"btn btn-light text-danger\" onClick={() => onCancelOrder()}>\n                                            Cancelar\n                                        </button>\n                                        <button type=\"button\" className=\"btn btn-primary\" disabled={!isValidOrder} onClick={() => onCreateOrder()}>\n                                            <i className=\"uil uil-shopping-cart-alt me-2\"> </i> Crear pedido\n                                        </button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Container>\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    const {car, loading} = state.Order\n    return {car, loading}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onResetOrder: () => {\n        dispatch(resetCustomer());\n        dispatch(resetProduct());\n        dispatch(resetCar());\n    },\n    onRegisterOrder: (order, history) => dispatch(registerOrder(order, history))\n})\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(CreateOrder)\n)\n\nCreateOrder.propTypes = {\n    onResetOrder: PropTypes.func,\n    error: PropTypes.any,\n    history: PropTypes.object\n}","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/orderCustomer.js",["949","950","951"],"import React, {useEffect, useState} from \"react\"\nimport {Col, Label, Row, Spinner} from \"reactstrap\"\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {FieldAsyncSelect, FieldSelect} from \"../../../components/Fields\";\nimport {GET_CUSTOMER} from \"../../../helpers/url_helper\";\nimport {getCustomer} from \"../../../store/customer/actions\";\nimport {getEmptyOptions} from \"../../../common/converters\";\nimport {AvForm} from \"availity-reactstrap-validation\";\nimport {Button, Tooltip} from \"@material-ui/core\";\nimport Conditionals from \"../../../common/conditionals\";\nimport CustomModal from \"../../../components/Modal/CommosModal\";\nimport CustomerForm from \"../../CustomerEdit/CustomerForm\";\nimport {updateCard} from \"../../../store/order/actions\";\n\nconst searchByOptions = [{label:\"Documento\", value:\"doc\"},{label:\"Nombre\", value:\"name\"},{label:\"Correo\", value:\"email\"}];\n\nconst OrderCustomer = (props) => {\n    const {car, customer, onGetCustomer, onUpdateCar, showAsModal} = props;\n    const [initComponent, setInitComponent] = useState(true);\n    const [searchBy, setSearchBy] = useState(searchByOptions[0].value);\n    const [editCustomer, setEditCustomer] = useState(false);\n    const [openCustomerModal, setOpenCustomerModal] = useState(false);\n    const [customerData, setCustomerData] = useState({});\n    const [customerDefault, setCustomerDefault] = useState(getEmptyOptions());\n    const [customerEmailDefault, setCustomerEmailDefault] = useState(getEmptyOptions());\n    const [customerDocumentDefault, setCustomerDocumentDefault] = useState(getEmptyOptions());\n\n    useEffect(() => {\n        if(showAsModal && car.isEdit && car.customer && car.customer.id && initComponent){\n            setInitComponent(false);\n            onGetCustomer(car.customer.id);\n        }\n    }, [showAsModal]);\n\n    useEffect(() => {\n        if (customer.id) {\n            setCustomerData(customer);\n            onUpdateCar({...car, customer})\n        } else {\n            resetData();\n        }\n    }, [customer]);\n\n    const toggleModal = () => {\n        setOpenCustomerModal(!openCustomerModal);\n    }\n\n    const resetData = () => {\n        setCustomerDefault(getEmptyOptions());\n        setCustomerEmailDefault(getEmptyOptions());\n        setCustomerDocumentDefault(getEmptyOptions());\n        setCustomerData({})\n    }\n\n    const onCloseCustomerModal = () => {\n        toggleModal();\n        setEditCustomer(false);\n    }\n\n    const onAcceptCustomerModal = () => {\n        toggleModal();\n        setCustomerDefault(getEmptyOptions());\n        setCustomerEmailDefault(getEmptyOptions());\n        setCustomerDocumentDefault(getEmptyOptions());\n        if(editCustomer){\n            onGetCustomer(customer.id);\n        }\n        setEditCustomer(false);\n    }\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col>\n                    <h4 className=\"card-title text-info\"><i className=\"uil-users-alt me-2\"> </i> Datos del cliente</h4>\n                </Col>\n            </Row>\n            <AvForm className=\"needs-validation\" autoComplete=\"off\">\n                <Row>\n                    <Col md={2}>\n                        <Label htmlFor=\"product\">Buscar por</Label>\n                        <FieldSelect\n                            id={\"searchByOptions\"}\n                            name={\"searchByOptions\"}\n                            options={searchByOptions}\n                            defaultValue={searchBy}\n                            onChange={(e) => {\n                                setSearchBy(e.value);\n                            }}\n                        />\n                    </Col>\n                    {searchBy === \"doc\" && (\n                        <Col md={9}>\n                            <Label htmlFor=\"product\">Documento</Label>\n                            <FieldAsyncSelect\n                                name={\"product\"}\n                                urlStr={GET_CUSTOMER}\n                                placeholder=\"Buscar por documento\"\n                                defaultValue={customerDocumentDefault}\n                                conditionalOptions={{fieldName: 'document', operator: Conditionals.OPERATORS.EQUAL}}\n                                onChange={(c) => {\n                                    onGetCustomer(c.value);\n                                    setCustomerDefault(getEmptyOptions());\n                                }}\n                            />\n                        </Col>\n                    )}\n                    {searchBy === \"name\" && (\n                        <Col md={9}>\n                            <Label htmlFor=\"customer\">Nombre</Label>\n                            <FieldAsyncSelect\n                                name={\"customer\"}\n                                urlStr={GET_CUSTOMER}\n                                placeholder=\"Buscar por nombre\"\n                                defaultValue={customerDefault}\n                                onChange={(c) => {\n                                    onGetCustomer(c.value);\n                                    setCustomerDocumentDefault(getEmptyOptions());\n                                }}\n                            />\n                        </Col>\n                    )}\n                    {searchBy === \"email\" && (\n                        <Col md={9}>\n                            <Label htmlFor=\"customer\">Correo</Label>\n                            <FieldAsyncSelect\n                                name={\"email\"}\n                                urlStr={GET_CUSTOMER}\n                                placeholder=\"Buscar por correo\"\n                                defaultValue={customerEmailDefault}\n                                conditionalOptions={{fieldName: 'email', operator: Conditionals.OPERATORS.LIKE}}\n                                onChange={(c) => {\n                                    onGetCustomer(c.value);\n                                    setCustomerEmailDefault(getEmptyOptions());\n                                }}\n                            />\n                        </Col>\n                    )}\n                    <Col md={1} style={{display: 'flex', 'alignItems': 'flex-end'}}>\n                        <Tooltip placement=\"bottom\" title=\"Agregar nuevo cliente\" aria-label=\"add\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block waves-effect waves-light mt-2 me-1 w-100\" onClick={() => toggleModal()}>\n                                <i className=\"fa fa-user-plus\"> </i>\n                            </button>\n                        </Tooltip>\n                    </Col>\n                </Row>\n            </AvForm>\n            {customerData.id && (\n                <Row className=\"mt-3\">\n                    <Col md={11}>\n                        <Row>\n                            <Col md={6}>\n                                <label>Nombre: </label>\n                                <span className=\"p-1\">{customerData.name}</span>\n                                {customerData.isMayorist === true && (\n                                    <Tooltip placement=\"bottom\" title=\"Cliente mayorista\" aria-label=\"add\">\n                                        <i className={\"mdi mdi-crown font-size-18 mr-1 text-warning\"}> </i>\n                                    </Tooltip>\n                                )}\n                            </Col>\n                            <Col md={6}>\n                                <label>Correo: </label>\n                                <span className=\"p-1\">{customerData.email}</span>\n                            </Col>\n                            <Col md={6}>\n                                <label>Departamento: </label>\n                                <span className=\"p-1\">{customerData.state?.name}</span>\n                            </Col>\n                            <Col md={6}>\n                                <label>Municipio: </label>\n                                <span className=\"p-1\">{customerData.municipality?.name}</span>\n                            </Col>\n                            <Col md={6}>\n                                <label>Documento: </label>\n                                <span className=\"p-1\">{customerData.document}</span>\n                            </Col>\n                            <Col md={6}>\n                                <label>Teléfono Celular: </label>\n                                <span className=\"p-1\">{customerData.cellphone}</span>\n                            </Col>\n                            <Col md={6}>\n                                <label>Teléfono Residencial: </label>\n                                <span className=\"p-1\">{customerData.phone}</span>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col md={1} className=\"text-right\">\n                        <Tooltip placement=\"bottom\" title=\"Editar cliente\" aria-label=\"add\">\n                            <button type=\"button\"\n                                    size=\"small\"\n                                    className=\"btn btn-sm text-primary\"\n                                    onClick={() => {\n                                        toggleModal();\n                                        setEditCustomer(true);\n                                    }}>\n                                <i className=\"uil uil-pen font-size-18\"> </i>\n                            </button>\n                        </Tooltip>\n\n                    </Col>\n\n                    {showAsModal  && (\n                       <>\n                           <hr/>\n                           <Row>\n                               <Col md={12} className=\"text-right\">\n                                   {props.onCloseModal && (\n                                       <button type=\"button\" className=\"btn btn-light\" onClick={() => props.onCloseModal()}>Cancelar</button>\n                                   )}\n                                   {props.onAcceptModal && (\n                                       <Button color=\"primary\" type=\"button\" onClick={() => props.onAcceptModal()}>Guardar</Button>\n                                   )}\n                               </Col>\n                           </Row>\n                       </>\n                    )}\n                </Row>\n            )}\n            <CustomModal title={editCustomer ? \"Modificar cliente\":\"Nuevo cliente\"} size=\"lg\" showFooter={false} isOpen={openCustomerModal} onClose={onCloseCustomerModal}>\n                <CustomerForm customer={customerData}\n                              showAsModal={true}\n                              onCloseModal={onCloseCustomerModal}\n                              onAcceptModal={onAcceptCustomerModal}\n                />\n            </CustomModal>\n        </React.Fragment>\n    )\n}\n\nOrderCustomer.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    history: PropTypes.object\n}\n\nconst mapStateToProps = state => {\n    const {customer, error, loading} = state.Customer\n    const {car} = state.Order\n    return {car, customer, error, loading};\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetCustomer: (id) => dispatch(getCustomer(id)),\n    onUpdateCar: (data) => dispatch(updateCard(data)),\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OrderCustomer))\n","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/orderList.js",["952","953","954","955"],"import React, {useEffect, useState} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {Card, CardBody, Col, Row} from \"reactstrap\"\nimport paginationFactory, {PaginationListStandalone, PaginationProvider,} from \"react-bootstrap-table2-paginator\"\nimport ToolkitProvider, {Search} from \"react-bootstrap-table2-toolkit\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\n\nimport {Link} from \"react-router-dom\"\nimport {DEFAULT_PAGE_LIMIT} from \"../../common/pagination\";\nimport {ConfirmationModalAction} from \"../../components/Modal/ConfirmationModal\";\nimport {TableFilter} from \"../../components/TableFilter\";\nimport {normalizeColumnsList} from \"../../common/converters\";\nimport NoDataIndication from \"../../components/Common/NoDataIndication\";\nimport orderColumns from \"./orderColumn\";\nimport {Button, Tooltip} from \"@material-ui/core\";\nimport {getOrders} from \"../../store/order/actions\";\n\nconst OrderList = props => {\n    const {orders, meta, onGetOrders, loading, refresh} = props;\n    const [statesList, setStatesList] = useState([])\n    const [filter, setFilter] = useState(false);\n    const [conditional, setConditional] = useState(null);\n\n    const pageOptions = {\n        sizePerPage: DEFAULT_PAGE_LIMIT,\n        totalSize: meta?.totalRegisters,\n        custom: true,\n    }\n\n    useEffect(() => {\n        onGetOrders();\n    }, [refresh])\n\n    useEffect(() => {\n        onGetOrders()\n    }, [onGetOrders])\n\n    useEffect(() => {\n        setStatesList(orders)\n    }, [orders])\n\n    // eslint-disable-next-line no-unused-vars\n    const handleTableChange = (type, {page, searchText}) => {\n        onGetOrders(conditional, DEFAULT_PAGE_LIMIT, (page - 1)*DEFAULT_PAGE_LIMIT);\n    }\n\n    const onFilterAction = (condition) => {\n        setConditional(condition);\n        onGetOrders(condition, DEFAULT_PAGE_LIMIT, 0);\n    }\n\n    const columns = orderColumns();\n\n    return (\n        <Row>\n            <TableFilter\n                onPressDisabled={() => setFilter(false)}\n                isActive={filter}\n                fields={columns}\n                onSubmit={onFilterAction.bind(this)}/>\n\n            <Col lg={filter ? \"8\" : \"12\"}>\n                <Card>\n                    <CardBody>\n                        <PaginationProvider pagination={paginationFactory(pageOptions)}>\n                            {({paginationProps, paginationTableProps}) => (\n                                <ToolkitProvider\n                                    keyField=\"id\"\n                                    data={statesList || []}\n                                    columns={normalizeColumnsList(columns)}\n                                    bootstrap4\n                                    search\n                                >\n                                    {toolkitProps => (\n                                        <React.Fragment>\n                                            <Row className=\"row mb-2\">\n                                                <Col md={6}>\n                                                    <div className=\"form-inline mb-3\">\n                                                        <div className=\"search-box ms-2\">\n\n                                                        </div>\n                                                    </div>\n                                                </Col>\n                                                <Col md={6}>\n                                                    <div className=\"mb-3 float-md-end\">\n                                                        {columns.some(s => s.filter) && (\n                                                            <Tooltip placement=\"bottom\" title=\"Filtros Avanzados\" aria-label=\"add\">\n                                                                <Button onClick={() => setFilter(!filter)}>\n                                                                    <i className={\"mdi mdi-filter\"}> </i>\n                                                                </Button>\n                                                            </Tooltip>\n                                                        )}\n                                                        <Link to={\"/orders/create\"} className=\"btn btn-primary waves-effect waves-light text-light\">\n                                                            <i className=\"mdi mdi-plus\"> </i> Crear pedido\n                                                        </Link>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col xl=\"12\">\n                                                    <div className=\"table-responsive mb-4\">\n                                                        <BootstrapTable\n                                                            remote\n                                                            responsive\n                                                            loading={true}\n                                                            bordered={false}\n                                                            striped={true}\n                                                            classes={\n                                                                \"table table-centered table-nowrap mb-0\"\n                                                            }\n                                                            noDataIndication={() => <NoDataIndication/>}\n                                                            {...toolkitProps.baseProps}\n                                                            onTableChange={handleTableChange}\n                                                            {...paginationTableProps}\n                                                        />\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <div className=\"float-sm-end\">\n                                                <PaginationListStandalone {...paginationProps} />\n                                            </div>\n                                        </React.Fragment>\n                                    )}\n                                </ToolkitProvider>\n                            )}\n                        </PaginationProvider>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nOrderList.propTypes = {\n    states: PropTypes.array,\n    onGetStates: PropTypes.func,\n    onDeleteStates: PropTypes.func,\n}\n\nconst mapStateToProps = state => {\n    const {orders, loading, meta, refresh} = state.Order\n    return {orders, loading, meta, refresh}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetOrders: (conditional = null, limit = DEFAULT_PAGE_LIMIT, page) => dispatch(getOrders(conditional, limit, page)),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OrderList)\n","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/orderColumn.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/orderProducts.js",["956"],"import React, {useEffect, useState} from \"react\"\nimport {Col, Label, Row} from \"reactstrap\"\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {FieldAsyncSelect, FieldSelect} from \"../../../components/Fields\";\nimport {GET_CUSTOMER, GET_PRODUCT} from \"../../../helpers/url_helper\";\nimport {getProduct} from \"../../../store/product/actions\";\nimport {getEmptyOptions} from \"../../../common/converters\";\nimport {AvForm} from \"availity-reactstrap-validation\";\nimport {map} from \"lodash\";\nimport Images from \"../../../components/Common/Image\";\nimport {buildNumericOptions, getImageByQuality, priceFormat} from \"../../../common/utils\";\nimport Conditionals from \"../../../common/conditionals\";\nimport {updateCard} from \"../../../store/order/actions\";\n\nconst searchByOptions = [{label:\"Codigo\", value:\"code\"},{label:\"Nombre\", value:\"name\"}];\n\nconst OrderProducts = (props) => {\n    const {car, product, onGetProduct, onUpdateCar} = props;\n    const [searchBy, setSearchBy] = useState(searchByOptions[0].value);\n    const [productData, setProductData] = useState({});\n    const [productDefault, setProductDefault] = useState(getEmptyOptions());\n    const [productReferenceDefault, setProductReferenceDefault] = useState(getEmptyOptions());\n    const [imgSelected, setImgSelected] = useState(0);\n    const [quantityAvailable, setQuantityAvailable] = useState(0);\n    const [colorsMap, setColorsMap] = useState({});\n    const [colors, setColors] = useState([]);\n    const [color, setColor] = useState({});\n    const [sizes, setSizes] = useState([]);\n    const [size, setSize] = useState({});\n\n    useEffect(() => {\n        if (product.id) {\n            const productImage = product.productImage.length > 0 ? product.productImage : [{}];\n            setProductData({...product, _status: product.status, productImage: productImage});\n\n            const map = {};\n            if (product.productSize.length) {\n                product.productSize.filter(s => s.quantity > 0).forEach((s => {\n                    if (!map[s.color]) map[s.color] = [];\n                    map[s.color].push({label: s.name, value: s.id});\n                }))\n            }\n            setColorsMap(map);\n\n            let productSizeColors = Object.keys(map).map(k => ({label: k, value: k}));\n            setColors(productSizeColors);\n            if (productSizeColors.length === 1) {\n                setColor(productSizeColors[0].value);\n            }\n        } else {\n            resetData();\n        }\n    }, [product]);\n\n    const addToOrder = (e, d) => {\n        const prod = {\n            origin: productData,\n            color: d.color.value,\n            size: d.size.label,\n            sizeId: d.size.value,\n            quantity: d.quantity.value,\n            quantityAvailable: quantityAvailable,\n            discountPercentage: 0,\n            discount: 0,\n        };\n\n        onUpdateCar({...car, products: [...car.products, prod]})\n        resetData();\n    }\n\n    const onChangeSize = (e) => {\n        const item = product.productSize.find(s => s.id === e.value);\n        setQuantityAvailable(item.quantity);\n        setSize(sizes.find(s => s.id === e.value));\n    }\n\n    const resetData = () => {\n        setProductDefault(getEmptyOptions());\n        setProductReferenceDefault(getEmptyOptions());\n        setProductData({})\n    }\n\n    return (\n        <React.Fragment>\n            <AvForm className=\"needs-validation\" autoComplete=\"off\" onValidSubmit={(e, v) => addToOrder(e, v)}>\n                <Row>\n                    <Col>\n                        <h4 className=\"card-title text-info\"><i className=\"uil-filter me-2\"> </i> Agregar productos</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={2}>\n                        <Label htmlFor=\"product\">Buscar por</Label>\n                        <FieldSelect\n                            id={\"searchByOptions\"}\n                            name={\"searchByOptions\"}\n                            options={searchByOptions}\n                            defaultValue={searchBy}\n                            onChange={(e) => {\n                                setSearchBy(e.value);\n                            }}\n                        />\n                    </Col>\n                    {searchBy === \"code\" && (\n                        <Col md={10}>\n                            <Label htmlFor=\"product\">Código</Label>\n                            <FieldAsyncSelect\n                                name={\"productCode\"}\n                                urlStr={GET_PRODUCT}\n                                placeholder=\"Código del producto\"\n                                defaultValue={productReferenceDefault}\n                                conditionalOptions={{fieldName: 'reference', operator: Conditionals.OPERATORS.EQUAL}}\n                                onChange={(d) => {\n                                    onGetProduct(d.value);\n                                    setProductDefault(getEmptyOptions());\n                                }}\n                            />\n                        </Col>\n                    )}\n                    {searchBy === \"name\" && (\n                        <Col md={10}>\n                            <Label htmlFor=\"product\">Nombre</Label>\n                            <FieldAsyncSelect\n                                name={\"productName\"}\n                                urlStr={GET_PRODUCT}\n                                placeholder=\"Nombre del producto\"\n                                defaultValue={productDefault}\n                                onChange={(d) => {\n                                    onGetProduct(d.value);\n                                    setProductReferenceDefault(getEmptyOptions());\n                                }}\n                            />\n                        </Col>\n                    )}\n                </Row>\n                {productData.id && (\n                    <Row className=\"mt-3\">\n                        <Col md={3} className=\"text-center\">\n                            <Row className=\"\">\n                                <Col md={4} className=\"image-left-panel\" style={{minHeight: '225px'}}>\n                                    <div className={`nav flex-column nav-pills`} id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n                                        {map(productData.productImage, (img, key) => (\n                                            <div key={key}\n                                                 className={`cursor-pointer nav-link ${imgSelected === key ? 'custom-active' : ''}`}\n                                                 onClick={() => (setImgSelected(key))}>\n                                                <Images src={`${getImageByQuality(img, 'small')}`}\n                                                        alt={img.filename}\n                                                        className=\"img-fluid mx-auto d-block tab-img rounded\"/>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </Col>\n                                <Col md={8}>\n                                    <div className=\"tab-content position-relative\" id=\"v-pills-tabContent\">\n                                        {map(productData.productImage, (img, key) => (\n                                            <div key={key} className={`tab-pane fade ${imgSelected === key ? 'show active bg-white border-1' : ''}`} id={`product-${key}`} role=\"tabpanel\">\n                                                <div className=\"product-img panel-bordered\">\n                                                    <Images src={`${getImageByQuality(img, 'medium')}`}\n                                                            alt={img.filename}\n                                                            className=\"img-fluid mx-auto d-block\"\n                                                            width={200}\n                                                            data-zoom={`${img.path}`}/>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md={9}>\n                            <Row>\n                                <Col md={8}>\n                                    <Row>\n                                        <Col md={12}>\n                                            <div className=\"p-1\">\n                                                <b className=\"text-info font-size-16\">{productData.reference}</b> - <span>{productData.name}</span>\n                                            </div>\n                                        </Col>\n                                        <Col md={12}>\n                                            <label>Categoria: </label>\n                                            <span className=\"p-1\">{productData.category?.name}</span>\n                                        </Col>\n                                        <Col md={12}>\n                                            <label>Material: </label>\n                                            <span className=\"p-1\">{productData.material}</span>\n                                        </Col>\n                                        {productData.size && (\n                                            <Col md={12}>\n                                                <label>Tipo: </label>\n                                                <span className=\"p-1\">{productData.size.name}</span>\n                                            </Col>\n                                        )}\n                                    </Row>\n                                </Col>\n                                <Col md={4}>\n                                    <Row>\n                                        <Col md={12} className=\"text-right\">\n                                            <div className=\"mt-3\">\n                                                <p className=\"text-muted mb-2\">Precio</p>\n                                                <h5 className=\"font-size-20\">{priceFormat(productData.price)}</h5>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            <hr/>\n                            <Row>\n                                <Col md={4}>\n                                    <Label className=\"control-label\">Color</Label>\n                                    <FieldSelect\n                                        id={\"color\"}\n                                        name={\"color\"}\n                                        options={colors}\n                                        value={color}\n                                        onChange={(e) => {\n                                            setSizes(colorsMap[e.label]);\n                                            setColor(colors.find(s => s.id === e.value));\n                                        }}\n                                        isSearchable\n                                        required\n                                    />\n                                </Col>\n                                <Col md={3}>\n                                    <Label className=\"control-label\">Tallas</Label>\n                                    <FieldSelect\n                                        id={\"size\"}\n                                        name={\"size\"}\n                                        options={sizes}\n                                        defaultValue={size}\n                                        onChange={(e) => onChangeSize(e)}\n                                        isSearchable\n                                        required\n                                    />\n                                </Col>\n                                <Col md={3}>\n                                    <Label htmlFor=\"weight\">Cantidad</Label>\n                                    <FieldSelect\n                                        id={\"quantity\"}\n                                        name={\"quantity\"}\n                                        options={buildNumericOptions(quantityAvailable, 1, 1)}\n                                        defaultValue={0}\n                                        required\n                                    />\n                                </Col>\n                                <Col md={2} style={{display: 'flex', 'alignItems': 'normal'}}>\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block waves-effect waves-light mt-2 me-1 w-100\">\n                                        <i className=\"uil uil-shopping-cart-alt me-2\"> </i> Agregar\n                                    </button>\n                                </Col>\n                            </Row>\n                        </Col>\n\n                    </Row>\n                )}\n            </AvForm>\n        </React.Fragment>\n    )\n}\n\nOrderProducts.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    history: PropTypes.object\n}\n\nconst mapStateToProps = state => {\n    const {product, error, loading} = state.Product;\n    const {car} = state.Order;\n    return {car, product, error, loading};\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetProduct: (id) => dispatch(getProduct(id)),\n    onUpdateCar: (data) => dispatch(updateCard(data)),\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OrderProducts))\n","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/orderCar.js",["957"],"import React, {useEffect, useState} from \"react\"\nimport {Col, Label, Row} from \"reactstrap\"\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getProduct} from \"../../../store/product/actions\";\nimport {map} from \"lodash\";\nimport Images from \"../../../components/Common/Image\";\nimport {buildNumericOptions, getImageByQuality, priceFormat} from \"../../../common/utils\";\nimport {FieldDecimalNumber, FieldSelect} from \"../../../components/Fields\";\nimport {HtmlTooltip} from \"../../../components/Common/HtmlTooltip\";\nimport {AvForm} from \"availity-reactstrap-validation\";\nimport {updateCard} from \"../../../store/order/actions\";\n\n\nconst OrderCar = (props) => {\n    const {car, onUpdateCar} = props;\n    const [globalDiscount, setGlobalDiscount] = useState(0);\n\n    useEffect(() => {\n        if (car.products && car.products.length > 0) {\n            const list = [...car.products];\n            let totaledProductList = getProductListWithTotals(list);\n\n            if(JSON.stringify(totaledProductList) !== JSON.stringify(car.products)){\n                onUpdateCar({...car, products: totaledProductList})\n            }\n        }\n    }, [car.products, globalDiscount])\n\n    const getProductListWithTotals = (list) => {\n        var map = {};\n        list.map((prod) => {\n            const discountPercentage = globalDiscount > 0 ? globalDiscount : prod.discountPercentage;\n            let total = prod.origin.price * prod.quantity;\n            const discount = total * (discountPercentage / 100);\n            total = total - discount;\n\n            return {\n                ...prod,\n                quantity: parseInt(prod.quantity),\n                discountPercentage: discountPercentage,\n                discount: discount,\n                total: total,\n            };\n        }).forEach((prod) => {\n            const key = prod.origin.id + '_' + prod.color + '_' + prod.sizeId;\n            if (map[key]) {\n                map[key].quantity += prod.quantity;\n                if (map[key].quantity > prod.quantityAvailable) map[key].quantity = prod.quantityAvailable;\n                map[key].total += prod.total;\n            } else {\n                map[key] = prod;\n            }\n        });\n        return Object.keys(map).map((key) => (map[key]));\n    }\n\n    const removeProduct = (prod) => {\n        const list = [...car.products];\n        list.splice(list.indexOf(prod), 1);\n        onUpdateCar({...car, products: list})\n    }\n\n    const onChangeQuantity = (quantity, p) => {\n        if (quantity === 0) {\n            removeProduct(p);\n        } else {\n            const list = [...car.products];\n            list.forEach((prod) => {\n                if (prod.origin.id === p.origin.id) {\n                    prod.quantity = parseInt(quantity);\n                }\n            });\n            onUpdateCar({...car, products: getProductListWithTotals(list)})\n        }\n    }\n\n    const onChangeDiscount = (discountPercentage, p) => {\n        const list = [...car.products];\n        list.forEach((prod) => {\n            if (prod.origin.id === p.origin.id && prod.color === p.color && prod.size === p.size) {\n                prod.discountPercentage = parseFloat(discountPercentage);\n            }\n        });\n        onUpdateCar({...car, products: getProductListWithTotals(list)})\n    }\n\n    return (\n        <React.Fragment>\n            <AvForm className=\"needs-validation\" autoComplete=\"off\">\n                <Row>\n                    <Col md={12} className=\"mb-3\">\n                        <h4 className=\"card-title text-info\"><i className=\"uil-box me-2\"> </i> Productos</h4>\n                    </Col>\n                    <Col md={4} className=\"mb-3\">\n                        <Label htmlFor=\"weight\">Descuento Global</Label>\n                        <FieldSelect\n                            id={\"discount\"}\n                            name={\"discount\"}\n                            options={buildNumericOptions(100, 5, 0)}\n                            defaultValue={globalDiscount}\n                            onChange={(item => setGlobalDiscount(parseInt(item.value)))}\n                            required\n                        />\n                    </Col>\n                    <Col md={12}>\n                        <table className=\"table table-sm table-striped table-bordered table-centered table-nowrap font-size-11\">\n                            <thead>\n                            <tr>\n                                <th className=\"text-center\">Código</th>\n                                <th className=\"text-center\">Color</th>\n                                <th className=\"text-center\">Talla</th>\n                                <th className=\"text-center\">Cantidad</th>\n                                <th className=\"text-center\">Precio Unit.</th>\n                                <th className=\"text-center\">% Desc.</th>\n                                <th className=\"text-center\">Total Desc.</th>\n                                <th className=\"text-center\">SubTotal</th>\n                                <th className=\"text-center\"> </th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {map(car.products, (product, key) => (\n                                <tr key={key}>\n                                    <td style={{width: '10%'}}>\n                                        <HtmlTooltip\n                                            title={\n                                                <React.Fragment>\n                                                    <Images src={`${getImageByQuality(product.origin.productImage.length > 0 ? product.origin.productImage[0] : {}, 'medium')}`}\n                                                            alt={product.origin.reference}\n                                                            height={100}\n                                                            className=\"img-fluid mx-auto d-block tab-img rounded\"/>\n                                                </React.Fragment>\n                                            }>\n                                            <div className=\"text-info\">{product.origin.reference}</div>\n                                        </HtmlTooltip>\n                                    </td>\n                                    <td style={{width: '25%'}} className=\"text-center\">{product.color}</td>\n                                    <td style={{width: '15%'}} className=\"text-center\">{product.size}</td>\n                                    <td style={{width: '10%'}}>\n                                        <FieldSelect\n                                            id={\"quantity\"}\n                                            name={\"quantity\"}\n                                            options={buildNumericOptions(product.quantityAvailable)}\n                                            defaultValue={product.quantity}\n                                            onChange={item => onChangeQuantity(item.value, product)}\n                                            required\n                                        />\n                                    </td>\n                                    <td style={{width: '10%'}} className=\"text-end\">{priceFormat(product.origin.price)}</td>\n                                    <td style={{width: '10%'}} className=\"text-center\">\n                                        {globalDiscount > 0 && (<>{product.discountPercentage + '%'}</>)}\n                                        {globalDiscount === 0 && (\n                                            <FieldDecimalNumber\n                                                id={\"discountProd\"}\n                                                name={\"discountProd\"}\n                                                value={product.discountPercentage}\n                                                onChange={el => onChangeDiscount(el.target.value, product)}\n                                            />\n                                        )}\n                                    </td>\n                                    <td style={{width: '10%'}} className=\"text-end\">{priceFormat(product.discount)}</td>\n                                    <td style={{width: '15%'}} className=\"text-end\">{priceFormat(product.total)}</td>\n                                    <td style={{width: '5%'}} className=\"text-end\">\n                                        <button size=\"small\" className=\"btn btn-sm text-danger\" onClick={() => removeProduct(product)}>\n                                            <i className=\"uil uil-trash-alt font-size-18\"> </i>\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                            {car.products.length === 0 && (\n                                <tr>\n                                    <td colSpan={8} className=\"text-center text-muted\">Pedido vacio</td>\n                                </tr>\n                            )}\n                            </tbody>\n                        </table>\n                    </Col>\n                </Row>\n            </AvForm>\n        </React.Fragment>\n    )\n}\n\nOrderCar.propTypes = {\n    history: PropTypes.object\n}\n\nconst mapStateToProps = state => {\n    const {product, error, loading} = state.Product\n    const {car} = state.Order\n    return {car, product, error, loading};\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetProduct: (id) => dispatch(getProduct(id)),\n    onUpdateCar: (data) => dispatch(updateCard(data)),\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OrderCar))\n","/home/dev/workspace/repositories/moie-admin/src/components/Fields/InputSelectBasicField.js",["958","959","960","961","962","963","964","965","966"],"import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport {AvBaseInput} from \"availity-reactstrap-validation\";\nimport messages from \"./messages\";\nimport {FormText, FormGroup} from \"reactstrap\";\nimport './style.scss';\nimport {map} from \"lodash\";\nimport InputAsyncSearchField from \"./InputAsyncSearchField\";\nimport {FieldSelectBasic} from \"./index\";\n\nconst InputSelectBasicField = (props) => {\n    return (\n        <select\n            id={props.id}\n            name={props.name}\n            value={props.value}\n            onChange={(e => props.onChange?props.onChange(e.target.value):'')}\n            className={props.className || \"form-control\"}>\n            {map(props.options, (option, k) => (<option key={k} value={option.value}>{option.label}</option>))}\n        </select>\n    )\n}\n\nInputSelectBasicField.propTypes = {\n    name: PropTypes.string,\n    placeholder: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.array.isRequired,\n};\n\nexport default InputSelectBasicField;","/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/orderDeliveryOptions.js",["967","968","969","970","971","972","973","974"],"import React, {useEffect, useState} from \"react\"\nimport {Col, Label, Row} from \"reactstrap\"\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {FieldNumber, FieldSelect} from \"../../../components/Fields\";\nimport {getProduct} from \"../../../store/product/actions\";\nimport {AvForm} from \"availity-reactstrap-validation\";\nimport {getFieldOptionByGroup} from \"../../../store/fieldOptions/actions\";\nimport {DELIVERY_METHODS_PAYMENT_TYPES, DELIVERY_TYPES, GROUPS, PAYMENT_TYPES, PAYMENT_TYPES_LIST} from \"../../../common/constants\";\nimport {getDeliveryMethods, getDeliveryQuote, updateCard} from \"../../../store/order/actions\";\nimport {getEmptyOptions} from \"../../../common/converters\";\nimport {Button} from \"@material-ui/core\";\n\nconst OrderDeliveryOptions = (props) => {\n    const {onUpdateCar, car, fieldOptions, onGetFieldOptions, onGetDeliveryMethods, onGetDeliveryQuote, deliveryMethods, deliveryQuote,\n        showAsModal, onCloseModal, onAcceptModal, pOriginOrder} = props;\n\n    const [initComponent, setInitComponent] = useState(true);\n    const [deliveryMethodList, setDeliveryMethodList] = useState([]);\n    const [deliveryMethod, setDeliveryMethod] = useState(null);\n    const [originOrders, setOriginOrders] = useState([]);\n    const [originOrder, setOriginOrder] = useState(pOriginOrder || null);\n    const [deliveryTypes, setDeliveryTypes] = useState(null);\n    const [deliveryType, setDeliveryType] = useState(null);\n    const [paymentTypes, setPaymentTypes] = useState(null);\n    const [paymentType, setPaymentType] = useState(null);\n    const [deliveryCost, setDeliveryCost] = useState(0);\n    const [pieceToChange, setPieceToChange] = useState(0);\n    const [showPaymentType, setShowPaymentType] = useState(false);\n    const [productQty, setProductQty] = useState(0);\n\n    //Carga inicial\n    useEffect(() => {\n        setDeliveryTypes([getEmptyOptions(), ...DELIVERY_TYPES.map(dt => ({label: dt.label, value: dt.id}))]);\n        setPaymentTypes([getEmptyOptions(), ...PAYMENT_TYPES_LIST]);\n        onGetFieldOptions();\n        onGetDeliveryMethods();\n        if(car.reset){\n            setDeliveryMethod(null);\n            setOriginOrder(null);\n            setDeliveryType(null);\n            setPaymentType(null);\n            setDeliveryCost(0);\n            setPieceToChange(0);\n            setShowPaymentType(false);\n            setProductQty(0);\n        }\n    }, [onGetFieldOptions, car.reset]);\n\n    useEffect(() => {\n        const list = fieldOptions || [];\n        setOriginOrders([getEmptyOptions(), ...list.filter(op => (op.groups === GROUPS.ORDERS_ORIGIN)).map(op => ({label: op.name, value: op.name}))]);\n    }, [fieldOptions]);\n\n    useEffect(() => {\n        const list = deliveryMethods || [];\n        const ot = deliveryType +'';\n        setDeliveryMethodList([getEmptyOptions(), ...list.filter(op => (op.settings.includes(ot))).map(op => ({label: op.name, value: op.code}))]);\n        onChangeDeliveryOptions();\n    }, [deliveryType]);\n\n    useEffect(() => {\n        if (deliveryMethod) {\n            setShowPaymentType(DELIVERY_METHODS_PAYMENT_TYPES.includes(deliveryMethod));\n            getQuote();\n            onChangeDeliveryOptions();\n        }\n    }, [deliveryMethod]);\n\n    useEffect(() => {\n        if (deliveryMethod && deliveryQuote) {\n            setDeliveryCost(parseFloat(deliveryQuote.amount || 0));\n            onChangeDeliveryOptions();\n        }\n    }, [deliveryQuote]);\n\n    useEffect(() => {\n        onChangeDeliveryOptions();\n    }, [deliveryCost, paymentType, pieceToChange]);\n\n    useEffect(() => {\n        getQuote();\n    }, [car.products]);\n\n    useEffect(() => {\n        if(car.isEdit && car.deliveryOptions && car.deliveryOptions.origin && initComponent){\n            setInitComponent(false);\n\n            setDeliveryMethod(car.deliveryOptions.method);\n            setOriginOrder(car.deliveryOptions.origin);\n            setDeliveryType(car.deliveryOptions.type);\n            setDeliveryCost(car.deliveryOptions.cost);\n            setPieceToChange(car.deliveryOptions.pieces);\n            setShowPaymentType(DELIVERY_METHODS_PAYMENT_TYPES.includes(car.deliveryOptions.method));\n\n            if(car.deliveryOptions.paymentType)\n                setPaymentType(car.deliveryOptions.paymentType === 1 ?PAYMENT_TYPES.CASH:PAYMENT_TYPES.TRANSFER);\n            //getQuote()\n        }\n    }, [car.deliveryOptions]);\n\n    const getQuote = () => {\n        let qty = 0;\n        car.products.forEach(prod => (qty += prod.quantity));\n        if (qty > 0 && deliveryMethod && (qty !== productQty || car.deliveryOptions.method !== deliveryMethod)) {\n            setProductQty(qty);\n            let products = car.products.map(prod => ({id: prod.origin.id, qty: prod.quantity}));\n            onGetDeliveryQuote({deliveryType: deliveryType, deliveryMethodCode: deliveryMethod, products});\n        }\n    }\n\n    const onChangeDeliveryOptions = () => {\n        let deliveryOps = {origin: originOrder, type: deliveryType, method: deliveryMethod, cost: (parseFloat(deliveryCost) || 0), paymentType: paymentType, pieces: pieceToChange};\n        //console.log(deliveryOps, paymentType)\n        onUpdateCar({...car, deliveryOptions: deliveryOps});\n    }\n\n    const acceptModal = () => {\n        onAcceptModal(car);\n    }\n\n    return (\n        <React.Fragment>\n            <AvForm className=\"needs-validation\" autoComplete=\"off\">\n                <Row>\n                    <Col>\n                        <h4 className=\"card-title text-info\"><i className=\"uil-archive me-2\"> </i> Opciones de envio</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={6}>\n                        <Label htmlFor=\"weight\">Origen del pedido</Label>\n                        <FieldSelect\n                            id={\"originOrder\"}\n                            name={\"originOrder\"}\n                            options={originOrders}\n                            defaultValue={originOrder}\n                            onChange={item => setOriginOrder(item.value)}\n                            required\n                        />\n                    </Col>\n                    <Col md={6}>\n                        <Label htmlFor=\"weight\">Tipo de pedido</Label>\n                        <FieldSelect\n                            id={\"deliveryType\"}\n                            name={\"deliveryType\"}\n                            options={deliveryTypes}\n                            defaultValue={deliveryType}\n                            onChange={item => setDeliveryType(item.value)}\n                            required\n                        />\n                    </Col>\n                    <Col md={6}>\n                        <Label htmlFor=\"weight\">Metodo de envio</Label>\n                        <FieldSelect\n                            id={\"deliveryMethod\"}\n                            name={\"deliveryMethod\"}\n                            options={deliveryMethodList}\n                            defaultValue={deliveryMethod}\n                            onChange={item => setDeliveryMethod(item.value)}\n                            required\n                        />\n                    </Col>\n                    <Col md={6}>\n                        <Label htmlFor=\"weight\">Costo del envio</Label>\n                        <FieldNumber\n                            id={\"deliveryCost\"}\n                            name={\"deliveryCost\"}\n                            value={deliveryCost}\n                            disabled={deliveryQuote.hasCharge}\n                            onChange={item => setDeliveryCost(item.target.value)}\n                            required/>\n                    </Col>\n                    {showPaymentType && (\n                        <>\n                            <Col md={6}>\n                                <Label htmlFor=\"weight\">Forma de pago</Label>\n                                <FieldSelect\n                                    id={\"paymentType\"}\n                                    name={\"paymentType\"}\n                                    options={paymentTypes}\n                                    defaultValue={paymentType}\n                                    onChange={item => {\n                                        setPaymentType(item.value)\n                                    }}\n                                    required\n                                />\n                            </Col>\n                            <Col md={6}>\n                                <Label htmlFor=\"weight\">Piezas para cambio</Label>\n                                <FieldNumber\n                                    id={\"pieceToChange\"}\n                                    name={\"pieceToChange\"}\n                                    value={pieceToChange}\n                                    onChange={item => setPieceToChange(item.target.value)}\n                                    required/>\n                            </Col>\n                        </>\n                    )}\n\n                </Row>\n            </AvForm>\n            {showAsModal  && (\n                <>\n                    <hr/>\n                    <Row>\n                        <Col md={12} className=\"text-right\">\n                            {onCloseModal && (\n                                <button type=\"button\" className=\"btn btn-light\" onClick={() => props.onCloseModal()}>Cancelar</button>\n                            )}\n                            {onAcceptModal && (\n                                <Button color=\"primary\" type=\"button\" onClick={() => acceptModal()}>Guardar</Button>\n                            )}\n                        </Col>\n                    </Row>\n                </>\n\n            )}\n\n        </React.Fragment>\n    )\n}\n\nOrderDeliveryOptions.propTypes = {\n    history: PropTypes.object\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetProduct: (id) => dispatch(getProduct(id)),\n    onGetFieldOptions: (conditional = null, limit = 500, page) => dispatch(getFieldOptionByGroup([GROUPS.ORDERS_ORIGIN], limit, page)),\n    onGetDeliveryMethods: (conditional = null, limit = 50, page) => dispatch(getDeliveryMethods(conditional, limit, page)),\n    onGetDeliveryQuote: (request) => dispatch(getDeliveryQuote(request)),\n    onUpdateCar: (data) => dispatch(updateCard(data)),\n})\n\nconst mapStateToProps = state => {\n    const {fieldOptions, refresh} = state.FieldOption\n    const {car, deliveryMethods, deliveryQuote} = state.Order\n    return {car, deliveryMethods: deliveryMethods.data, deliveryQuote: deliveryQuote.data, fieldOptions};\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OrderDeliveryOptions))\n","/home/dev/workspace/repositories/moie-admin/src/pages/CustomerEdit/CustomerForm.js",["975","976","977","978","979","980","981","982","983","984"],"import React, {useEffect, useState} from \"react\"\nimport {CardBody, Col, Container, Label, Row, Spinner} from \"reactstrap\"\nimport {AvField, AvForm} from \"availity-reactstrap-validation\"\nimport {Button, Card} from \"@material-ui/core\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {apiError} from \"../../store/auth/login/actions\";\nimport PropTypes from \"prop-types\";\nimport {getCustomer, registerCustomer, updateCustomer} from \"../../store/customer/actions\";\nimport {getMunicipalities, getStates} from \"../../store/location/actions\";\nimport Conditionals from \"../../common/conditionals\";\nimport {FieldEmail, FieldPhone, FieldSelect, FieldSwitch, FieldText} from \"../../components/Fields\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\nimport {STATUS} from \"../../common/constants\";\nimport ButtonSubmit from \"../../components/Common/ButtonSubmit\";\n\nconst CustomerForm = (props) => {\n    const {getCustomer, customer, showAsModal = false, onCloseModal= false, onAcceptModal= false} = props;\n    const [customerData, setCustomerData] = useState({_status: \"true\"});\n\n    // definición de localidades\n    const {getStates, states} = props;\n    const {getMunicipalities, municipalities} = props;\n    const [state, setState] = useState(null);\n    const [municipality, setMunicipality] = useState(null);\n\n    const [statesOptions, setStates] = useState([]);\n    const [municipalitiesOptions, setMunicipalities] = useState([]);\n\n    //carga inicial\n    useEffect(() => {\n        if (props.match.params.id && getCustomer) {\n            getCustomer(props.match.params.id);\n        }\n        getStates();\n    }, [getCustomer]);\n\n    //cargar la información del cliente\n    useEffect(() => {\n        if (customer.id) {\n            setCustomerData(customer);\n\n            //definir estado por defecto\n            const defaultState = customer.state?.id || null;\n            setState(defaultState);\n\n            //definir municipalidad por defecto\n            const defaultMunicipality = customer.municipality?.id || null;\n            setMunicipality(defaultMunicipality);\n\n        }\n    }, [customer]);\n\n    //cargar estados\n    useEffect(() => {\n        if (states && states.length > 0) {\n            const itemsConverter = item => ({\n                label: item.name,\n                value: item.id\n            });\n            setStates(states.map(itemsConverter));\n        } else {\n            setStates([]);\n        }\n    }, [states]);\n\n    //cargar municipios\n    useEffect(() => {\n        if (municipalities && municipalities.length > 0) {\n            const itemsConverter = item => ({\n                label: item.name,\n                value: item.id\n            });\n            setMunicipalities(municipalities.map(itemsConverter));\n        } else {\n            setMunicipalities([]);\n        }\n    }, [municipalities]);\n\n    useEffect(() => {\n        if (state != null) {\n            const conditions = new Conditionals.Condition;\n            conditions.add('state', state);\n            getMunicipalities(conditions.all());\n        }\n    }, [state]);\n\n    const handleValidSubmit = (event, values) => {\n        const data = filteredValues(values);\n        //console.log(data, values)\n        if (!customer.id) {\n            props.registerCustomer(data, props.history)\n        } else {\n            props.updateCustomer(customer.id, data, props.history)\n        }\n        if(showAsModal && onAcceptModal){\n            onAcceptModal(customer.id);\n        }\n    }\n\n    const filteredValues = (values) => {\n        const data = {...values};\n        data.state = values.state?.value;\n        data.municipality = values.municipality?.value;\n        data.status = values._status;\n        data.cellphone = values.cellphone ? values.cellphone.replace(/\\s/g, '') : '';\n        data.phone = values.phone ? values.phone.replace(/\\s/g, '') : '';\n        delete data._status;\n        return data;\n    }\n\n    function handleSelectDepartment(option) {\n        getMunicipalities(option.value);\n        setState(option.value);\n    }\n\n    return (\n        <React.Fragment>\n            <AvForm className=\"needs-validation\" autoComplete=\"off\" onValidSubmit={(e, v) => handleValidSubmit(e, v)}>\n                <Row>\n                    <Col xl={12}>\n                        {!showAsModal && (\n                            <div className={\"mt-1 mb-5\"} style={{position: \"relative\"}}>\n                                <div className={\"float-end\"}>\n                                    <Row>\n                                        <Col>\n                                            ¿Activo?\n                                        </Col>\n                                        <Col>\n                                            <FieldSwitch\n                                                value={customerData.status}\n                                                defaultValue={customerData.status}\n                                                name={\"_status\"}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                        )}\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3\">\n                                    <Label htmlFor=\"name\">Nombre <span className=\"text-danger\">*</span></Label>\n                                    <FieldText\n                                        id={\"name\"}\n                                        name={\"name\"}\n                                        value={customerData.name}\n                                        required\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3\">\n                                    <Label htmlFor=\"validationCustom02\">Email <span className=\"text-danger\">*</span></Label>\n                                    <FieldEmail\n                                        name={\"email\"}\n                                        value={customerData.email}\n                                        required/>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md=\"4\">\n                                <div className=\"mb-3\">\n                                    <Label htmlFor=\"document\">Documento <span className=\"text-danger\">*</span></Label>\n                                    <FieldText\n                                        id='document'\n                                        name={\"document\"}\n                                        value={customerData.document}\n                                        required/>\n                                </div>\n                            </Col>\n                            <Col md=\"4\">\n                                <div className=\"mb-3\">\n                                    <Label htmlFor=\"cellphone\">Teléfono Celular <span className=\"text-danger\">*</span></Label>\n                                    <FieldPhone\n                                        id=\"cellphone\"\n                                        name=\"cellphone\"\n                                        value={customerData.cellphone}\n                                        placeholder=\"\"\n                                        type=\"text\"\n                                        errorMessage=\"Ingrese un número valido (Ejemplo: 00000000)\"\n                                        className=\"form-control\"\n                                        validate={{required: {value: true}}}\n                                        onChange={(value) => setCustomerData({...customerData, cellphone: value})}\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"4\">\n                                <div className=\"mb-3\">\n                                    <Label htmlFor=\"phone\">Teléfono Residencial</Label>\n                                    <FieldPhone\n                                        id=\"phone\"\n                                        name=\"phone\"\n                                        value={customerData.phone}\n                                        placeholder=\"\"\n                                        type=\"text\"\n                                        errorMessage=\"Ingrese un número valido (Ejemplo: 00000000)\"\n                                        className=\"form-control\"\n                                        validate={{required: {value: true}}}\n                                        onChange={(value) => setCustomerData({...customerData, phone: value})}\n                                    />\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3\">\n                                    <Label htmlFor=\"state\">Departamento <span className=\"text-danger\">*</span></Label>\n                                    <FieldSelect\n                                        id=\"state\"\n                                        defaultValue={state}\n                                        name={\"state\"}\n                                        placeholder={\"Indique un departamento\"}\n                                        options={statesOptions}\n                                        onChange={handleSelectDepartment}\n                                        required\n                                        isSearchable\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3\">\n                                    <Label htmlFor=\"validationCustom03\">Municipio <span className=\"text-danger\">*</span></Label>\n                                    <FieldSelect\n                                        id=\"municipality\"\n                                        defaultValue={municipality}\n                                        name={\"municipality\"}\n                                        placeholder={\"Indique un municipio\"}\n                                        options={municipalitiesOptions}\n                                        required\n                                        isSearchable\n                                    />\n                                </div>\n                            </Col>\n                        </Row>\n\n                        {customerData.temporalAddress && (\n                            <Row>\n                                <hr/>\n                                <p className=\"alert alert-warning\">Este cliente tiene una dirección de una versión anterior, es recomendable que por favor agregue la dirección en la parte superior.</p>\n                                <Col md=\"12\">\n                                    <div className=\"mb-3\">\n                                        <h4>Dirección temporal</h4>\n                                    </div>\n                                </Col>\n                                <Col md=\"6\">\n                                    <div className=\"mb-3\">\n                                        <Label htmlFor=\"validationCustom04\">Departamento temporal</Label>\n                                        <div className=\"form-control\">\n                                            {customerData.temporalAddress.state}\n                                        </div>\n                                    </div>\n                                </Col>\n                                <Col md=\"6\">\n                                    <div className=\"mb-3\">\n                                        <Label htmlFor=\"validationCustom04\">Municipio temporal</Label>\n                                        <div className=\"form-control\">\n                                            {customerData.temporalAddress.municipality}\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        )}\n                        <Row>\n                            <Col>\n                                <div className=\"\">\n                                    <AvField\n                                        checked={customerData.hasNotification ? true : false}\n                                        className=\"form-check-input\"\n                                        type=\"checkbox\"\n                                        name=\"hasNotification\"\n                                        label=\"Recibe notificaciones\"/>\n                                </div>\n                            </Col>\n                        </Row>\n                        <hr/>\n                        <Row>\n                            <Col md={12} className=\"text-right\">\n                                {showAsModal && onCloseModal && (\n                                    <button type=\"button\" className=\"btn btn-light\" onClick={() => props.onCloseModal()}>Cancelar</button>\n                                )}\n                                <ButtonSubmit loading={props.loading}/>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </AvForm>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    const {error, loading} = state.Customer\n    const {states, municipalities} = state.Location\n    return {error, states, municipalities, loading}\n}\n\nexport default withRouter(\n    connect(mapStateToProps, {apiError, registerCustomer, updateCustomer, getCustomer, getStates, getMunicipalities})(CustomerForm)\n)\n\nCustomerForm.propTypes = {\n    error: PropTypes.any,\n    history: PropTypes.object\n}\n\n","/home/dev/workspace/repositories/moie-admin/src/components/Modal/CommosModal.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Orders/create/orderSummary.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/Orders/OrderCardList.js",["985","986","987","988","989","990","991","992","993"],"import React, {useEffect, useState} from \"react\"\nimport {Col, Row} from \"reactstrap\"\nimport {Link, withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport {map} from \"lodash\";\nimport {getOrder, getOrders} from \"../../store/order/actions\";\nimport Conditionals from \"../../common/conditionals\";\nimport {formatDate, priceFormat} from \"../../common/utils\";\nimport {Tooltip} from \"@material-ui/core\";\nimport {DELIVERY_TYPES, ORDER_STATUS} from \"../../common/constants\";\nimport {StatusField} from \"../../components/StatusField\";\n\nconst OrderCardList = (props) => {\n\n    const {onGetOrder, onGetOrders, order, orders, productId, customerId} = props;\n    const [ordersList, setOrdersList] = useState([]);\n    const [openCustomerModal, setOpenCustomerModal] = useState(false);\n\n    useEffect(() => {\n        if (customerId) {\n            const conditions = new Conditionals.Condition;\n            conditions.add(\"customer\", customerId, Conditionals.OPERATORS.EQUAL);\n            onGetOrders(conditions);\n        }\n    }, [customerId]);\n\n    useEffect(() => {\n        if (orders && orders.length > 0) {\n            setOrdersList(orders);\n        }\n        //console.log('orders', orders)\n    }, [orders]);\n\n    const getDeliveryType = (deliveryType) => {\n        let find = DELIVERY_TYPES.find(dt => dt.id === deliveryType);\n        return find ? find.label : '';\n    }\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col md={12}>\n                    <h4 className=\"card-title text-info\"><i className=\"uil-shopping-cart-alt me-2\"> </i> Pedidos recientes</h4>\n                </Col>\n                {ordersList.sort((a,b) => a.id < b.id).map((order, k) => (\n                    <div key={k} className=\"order-box\">\n                        <Row>\n                            <Col md={6} className=\"\">\n                                <div>\n                                    <Link to={`/order/${order.id}`} className=\"text-primary\">\n                                        <small className=\"font-weight-600 text-info\">Pedido #: {order.id}</small>\n                                    </Link>\n                                    <br/>\n                                    <small><span className=\"font-weight-600\">Origen:</span> {order.origen}</small>\n                                    <br/>\n                                    <small><span className=\"font-weight-600\">Tipo de entrega:</span> {getDeliveryType(order.deliveryType)}</small>\n                                    <br/>\n                                    <small><span className=\"font-weight-600\">Método de entrega:</span> {order.deliveryMethod.name}</small>\n                                </div>\n                            </Col>\n                            <Col md={6} className=\"text-right\">\n                                <div>\n                                    <div>\n                                        <span className=\"m-2 mb-4\">\n                                            <Tooltip placement=\"bottom\" title=\"Estado\" aria-label=\"add\">\n                                                <StatusField color={ORDER_STATUS[order.status].color}>{ORDER_STATUS[order.status].name}</StatusField>\n                                            </Tooltip>\n                                        </span>\n                                        <span className=\"m-2 mb-4\">\n                                            <Tooltip placement=\"bottom\" title=\"Fecha creación\" aria-label=\"add\">\n                                                <small className=\"badge rounded-pill bg-light p-2\">{formatDate(order.createdAt)}</small>\n                                            </Tooltip>\n                                        </span>\n                                    </div>\n                                    <div className=\"m-1\">\n                                        <Tooltip placement=\"bottom\" title=\"Cantidad de piezas\" aria-label=\"add\">\n                                             <small className=\"badge rounded-pill bg-light p-2\"><span className=\"font-weight-600\">Cant. piezas :</span> {order.quantity}</small>\n                                        </Tooltip>\n                                    </div>\n                                    <div>\n                                        <small className=\"m-2 fw-bold font-size-16\">{priceFormat(order.totalAmount)}</small>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                ))}\n            </Row>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => {\n    const {products, product} = state.Product\n    const {error, car, order, orders, loading} = state.Order;\n    return {error, car, order, orders, products, loading}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetOrder: (id) => dispatch(getOrder(id)),\n    onGetOrders: (conditions) => dispatch(getOrders(conditions.all(), 5, 0)),\n})\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(OrderCardList)\n)\n\nOrderCardList.propTypes = {\n    customerId: PropTypes.number,\n    error: PropTypes.any,\n    history: PropTypes.object\n}","/home/dev/workspace/repositories/moie-admin/src/components/Common/StatusWidgetCard.js",["994","995","996","997","998","999"],"import React, {useEffect, useState} from \"react\"\nimport imageNotFound from \"../../assets/images/image-not-found.png\"\nimport {Card, CardBody} from \"reactstrap\";\nimport ReactApexChart from \"react-apexcharts\";\nimport CountUp from \"react-countup\";\nimport PropTypes from \"prop-types\";\nimport WidgetCard from \"./WidgetCard\";\n\nconst series1 = [{\n    data: [25, 66, 41, 89, 63, 25, 44, 20, 36, 40, 54]\n}]\nconst options1 = {\n    fill: {\n        colors: ['#5b73e8']\n    },\n    chart: {\n        width: 70,\n        sparkline: {\n            enabled: !0\n        }\n    },\n    plotOptions: {\n        bar: {\n            columnWidth: '50%'\n        }\n    },\n    labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n    xaxis: {\n        crosshairs: {\n            width: 1\n        },\n    },\n    tooltip: {\n        fixed: {\n            enabled: !1\n        },\n        x: {\n            show: !1\n        },\n        y: {\n            title: {\n                formatter: function (seriesName) {\n                    return ''\n                }\n            }\n        },\n        marker: {\n            show: !1\n        }\n    }\n};\n\nconst StatusWidgetCard = props => {\n    const {statusGroup, title} = props;\n    const [dataCard, setDataCard] = useState({});\n\n    useEffect(() => {\n        let active = 0;\n        let inactive = 0;\n        if(statusGroup ){\n            if(statusGroup[1]) active = statusGroup[1];\n            if(statusGroup[0]) inactive = statusGroup[0];\n        }\n\n        const total = active + inactive;\n        const data = {\n            id: 1,\n            icon: \"mdi mdi-clock-five-time\",\n            title: title,\n            value: total,\n            prefix: \"\",\n            suffix: \"\",\n            decimal: 0,\n            charttype: \"bar\",\n            chartheight: 40,\n            chartwidth: 70,\n            badgeValue: active,\n            color: \"success\",\n            desc: \"activos\",\n            badgeValue2: inactive,\n            color2: \"danger\",\n            desc2: \"inactivos\",\n            series: series1,\n            options: options1,\n        };\n        setDataCard(data);\n        console.log(data)\n    }, [statusGroup])\n\n    return (\n        <WidgetCard report={dataCard} />\n    )\n}\n\n\nStatusWidgetCard.propTypes = {\n    statusGroup: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired\n}\n\nexport default StatusWidgetCard\n","/home/dev/workspace/repositories/moie-admin/src/pages/CustomerEdit/Observations.js",["1000"],"import React, {useEffect, useState} from \"react\"\nimport {AvForm} from \"availity-reactstrap-validation\"\nimport {Col, Row} from \"reactstrap\"\nimport {Card} from \"@material-ui/core\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getCustomer} from \"../../store/customer/actions\";\nimport CustomizedTimeline from \"./TimeLine\";\nimport ButtonSubmit from \"../../components/Common/ButtonSubmit\";\n\nconst Observations = (props) => {\n\n    const {getCustomer, comments} = props;\n    const [comment, setComment] = useState(undefined);\n    const [commentList, setCommentList] = useState([]);\n\n    useEffect(() => {\n        if (comments && comments.length > 0) {\n            setCommentList(comments);\n        }\n    }, [comments]);\n\n    const onDelete = (id) => {\n        console.log(id);\n\n        //CALL SERVICE\n        const list = [...commentList];\n        const item = list.find(cl => cl.id === id);\n        list.splice(list.indexOf(item), 1);\n        setCommentList(list);\n    }\n\n    const handleValidSubmit = (event, values) => {\n        if (!comment || comment === '') return;\n        setComment(undefined);\n        event.target.reset();\n\n        const list = [...commentList];\n        list.push({id: new Date().getTime(), user: \"Usuario 1\", comment: comment, date: new Date()});\n        setCommentList(list);\n    }\n\n    return (\n        <React.Fragment>\n            <Card id={''} className=\"p-3\">\n                <Row>\n                    <Col md={12}>\n                        <h4 className=\"card-title text-info\">Agregar observacion</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                        <AvForm className=\"needs-validation\" autoComplete=\"off\" onValidSubmit={(e, v) => handleValidSubmit(e, v)}>\n                            <Row>\n                                <Col md={10}>\n                                    <input id={\"comment\"} name={\"comment\"} className=\"form-control\" value={comment} onChange={(e) => setComment(e.target.value)} required/>\n                                </Col>\n                                <Col md={2}>\n                                    <ButtonSubmit loading={props.loading}/>\n                                </Col>\n                            </Row>\n                        </AvForm>\n                    </Col>\n                    <Col md={12}>\n                        <hr/>\n                        <h4 className=\"card-title text-info\">Observaciones</h4>\n                    </Col>\n                    <Col md={12}>\n                        {commentList.length > 0 ? (<CustomizedTimeline data={commentList} onDelete={onDelete}/>) : \"No hay observaciones\"}\n                    </Col>\n                </Row>\n            </Card>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => {\n    const {error, customer, loading} = state.Customer\n    return {error, customer, loading}\n}\n\nexport default withRouter(\n    connect(mapStateToProps, {getCustomer})(Observations)\n)\n\nObservations.propTypes = {\n    error: PropTypes.any,\n    history: PropTypes.object\n}","/home/dev/workspace/repositories/moie-admin/src/pages/CustomerEdit/TimeLine.js",[],"/home/dev/workspace/repositories/moie-admin/src/pages/ProductEdit/ProductsPending.js",["1001"],"import React, {useEffect} from \"react\";\nimport {Col, Row} from \"reactstrap\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {Card} from \"@material-ui/core\";\nimport {map} from \"lodash\";\nimport {pendingProducts} from \"../../store/product/actions\";\n\nconst ProductsPendingList = (props) => {\n\n    const {onGetProductsPending, product, productsPending=[]} = props;\n\n    useEffect(() => {\n        if(product && product.id) {\n            onGetProductsPending(product.id);\n            //TODO revisar porque no retorna ordenes para el product codigo A1\n        }\n    }, [product]);\n\n    return (\n        <React.Fragment>\n            <Card className=\"p-3\">\n                <Row>\n                    <Col md={12}>\n                        <h4 className=\"card-title text-info\">Ordenes pendientes</h4>\n                    </Col>\n                </Row>\n                <Row>\n                   <Col md={12}>\n                       <table className=\"table table-sm table-striped table-bordered table-centered table-nowrap font-size-11\">\n                           <thead>\n                           <tr>\n                               <th style={{width: '25%'}} className=\"text-center\">Pedido #</th>\n                               <th style={{width: '25%'}} className=\"text-center\">Color</th>\n                               <th style={{width: '25%'}} className=\"text-center\">Talla</th>\n                               <th style={{width: '25%'}} className=\"text-center\">Cantidad</th>\n                               <th style={{width: '25%'}} className=\"text-center\">Cliente</th>\n                               <th style={{width: '25%'}} className=\"text-center\">Estado del pedido</th>\n                           </tr>\n                           </thead>\n                           <tbody>\n                           {map(productsPending, (prod, key) => (\n                               <tr key={key}>\n                                   <td className=\"text-center\">{prod.order.id}</td>\n                                   <td className=\"text-center\">{prod.color}</td>\n                                   <td className=\"text-center\">{prod.size}</td>\n                                   <td className=\"text-center\">{prod.quantity}</td>\n                                   <td className=\"text-center\">{prod.customer.name}</td>\n                                   <td className=\"text-center\">{prod.order.status}</td>\n                               </tr>\n                           ))}\n                           {productsPending.length === 0 && (\n                               <tr>\n                                   <td colSpan={8} className=\"text-center text-muted\">No hay ordenes pendientes</td>\n                               </tr>\n                           )}\n                           </tbody>\n                       </table>\n                   </Col>\n                </Row>\n            </Card>\n        </React.Fragment>\n    ) ;\n}\n\nconst mapStateToProps = state => {\n    const {error, product, loading} = state.Product\n    return {error, product, loading}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onGetProductsPending: (id) => dispatch(pendingProducts(id)),\n})\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(ProductsPendingList)\n)\n\nProductsPendingList.propTypes = {\n    error: PropTypes.any,\n    history: PropTypes.object,\n    product: PropTypes.object,\n}\n",{"ruleId":"1002","replacedBy":"1003"},{"ruleId":"1004","replacedBy":"1005"},{"ruleId":"1006","severity":1,"message":"1007","line":24,"column":8,"nodeType":"1008","endLine":24,"endColumn":20,"suggestions":"1009"},{"ruleId":"1006","severity":1,"message":"1007","line":23,"column":8,"nodeType":"1008","endLine":23,"endColumn":21,"suggestions":"1010"},{"ruleId":"1011","severity":1,"message":"1012","line":5,"column":9,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1015","line":24,"column":9,"nodeType":"1013","messageId":"1014","endLine":24,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1016","line":24,"column":19,"nodeType":"1013","messageId":"1014","endLine":24,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1017","line":55,"column":9,"nodeType":"1013","messageId":"1014","endLine":55,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1018","line":63,"column":9,"nodeType":"1013","messageId":"1014","endLine":63,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1019","line":5,"column":31,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":34},{"ruleId":"1011","severity":1,"message":"1020","line":5,"column":36,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":39},{"ruleId":"1011","severity":1,"message":"1021","line":13,"column":8,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1022","line":22,"column":8,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1023","line":23,"column":8,"nodeType":"1013","messageId":"1014","endLine":23,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1024","line":24,"column":8,"nodeType":"1013","messageId":"1014","endLine":24,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1025","line":25,"column":8,"nodeType":"1013","messageId":"1014","endLine":25,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1026","line":26,"column":8,"nodeType":"1013","messageId":"1014","endLine":26,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1027","line":27,"column":8,"nodeType":"1013","messageId":"1014","endLine":27,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1028","line":41,"column":10,"nodeType":"1013","messageId":"1014","endLine":41,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1029","line":41,"column":21,"nodeType":"1013","messageId":"1014","endLine":41,"endColumn":33},{"ruleId":"1011","severity":1,"message":"1019","line":3,"column":10,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1020","line":3,"column":15,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1030","line":13,"column":10,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1031","line":13,"column":14,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1032","line":14,"column":10,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1033","line":14,"column":15,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1034","line":15,"column":10,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1035","line":15,"column":17,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1036","line":16,"column":10,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1037","line":16,"column":21,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":33},{"ruleId":"1011","severity":1,"message":"1038","line":17,"column":10,"nodeType":"1013","messageId":"1014","endLine":17,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1039","line":17,"column":19,"nodeType":"1013","messageId":"1014","endLine":17,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1040","line":18,"column":10,"nodeType":"1013","messageId":"1014","endLine":18,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1041","line":18,"column":21,"nodeType":"1013","messageId":"1014","endLine":18,"endColumn":33},{"ruleId":"1011","severity":1,"message":"1042","line":19,"column":10,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1043","line":19,"column":16,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1044","line":20,"column":10,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1045","line":20,"column":17,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1046","line":21,"column":10,"nodeType":"1013","messageId":"1014","endLine":21,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1047","line":21,"column":17,"nodeType":"1013","messageId":"1014","endLine":21,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1048","line":22,"column":10,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1049","line":22,"column":16,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1050","line":23,"column":10,"nodeType":"1013","messageId":"1014","endLine":23,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1051","line":23,"column":15,"nodeType":"1013","messageId":"1014","endLine":23,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1052","line":25,"column":10,"nodeType":"1013","messageId":"1014","endLine":25,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1053","line":25,"column":19,"nodeType":"1013","messageId":"1014","endLine":25,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1054","line":6,"column":26,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1019","line":11,"column":10,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1020","line":11,"column":15,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1055","line":11,"column":20,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1056","line":11,"column":30,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":44},{"ruleId":"1011","severity":1,"message":"1057","line":11,"column":46,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":58},{"ruleId":"1011","severity":1,"message":"1021","line":14,"column":8,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1022","line":23,"column":8,"nodeType":"1013","messageId":"1014","endLine":23,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1023","line":24,"column":8,"nodeType":"1013","messageId":"1014","endLine":24,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1024","line":25,"column":8,"nodeType":"1013","messageId":"1014","endLine":25,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1025","line":26,"column":8,"nodeType":"1013","messageId":"1014","endLine":26,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1026","line":27,"column":8,"nodeType":"1013","messageId":"1014","endLine":27,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1027","line":28,"column":8,"nodeType":"1013","messageId":"1014","endLine":28,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1028","line":36,"column":10,"nodeType":"1013","messageId":"1014","endLine":36,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1029","line":36,"column":21,"nodeType":"1013","messageId":"1014","endLine":36,"endColumn":33},{"ruleId":"1011","severity":1,"message":"1058","line":12,"column":9,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1059","line":57,"column":7,"nodeType":"1013","messageId":"1014","endLine":57,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1060","line":14,"column":9,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1061","line":2,"column":47,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":54},{"ruleId":"1011","severity":1,"message":"1062","line":3,"column":17,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1063","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1064","line":5,"column":21,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1065","line":25,"column":8,"nodeType":"1008","endLine":25,"endColumn":18,"suggestions":"1066"},{"ruleId":"1006","severity":1,"message":"1067","line":32,"column":8,"nodeType":"1008","endLine":32,"endColumn":16,"suggestions":"1068"},{"ruleId":"1011","severity":1,"message":"1061","line":2,"column":47,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":54},{"ruleId":"1011","severity":1,"message":"1062","line":3,"column":17,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1063","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1064","line":5,"column":21,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1069","line":29,"column":8,"nodeType":"1008","endLine":29,"endColumn":25,"suggestions":"1070"},{"ruleId":"1006","severity":1,"message":"1067","line":39,"column":8,"nodeType":"1008","endLine":39,"endColumn":22,"suggestions":"1071"},{"ruleId":"1011","severity":1,"message":"1061","line":2,"column":47,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":54},{"ruleId":"1011","severity":1,"message":"1062","line":3,"column":17,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1063","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1064","line":5,"column":21,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1065","line":25,"column":8,"nodeType":"1008","endLine":25,"endColumn":21,"suggestions":"1072"},{"ruleId":"1006","severity":1,"message":"1067","line":32,"column":8,"nodeType":"1008","endLine":32,"endColumn":18,"suggestions":"1073"},{"ruleId":"1006","severity":1,"message":"1065","line":21,"column":8,"nodeType":"1008","endLine":21,"endColumn":21,"suggestions":"1074"},{"ruleId":"1011","severity":1,"message":"1061","line":2,"column":54,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":61},{"ruleId":"1011","severity":1,"message":"1075","line":7,"column":21,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1063","line":13,"column":9,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1076","line":16,"column":9,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1077","line":23,"column":8,"nodeType":"1013","messageId":"1014","endLine":23,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1078","line":25,"column":9,"nodeType":"1013","messageId":"1014","endLine":25,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1079","line":57,"column":12,"nodeType":"1013","messageId":"1014","endLine":57,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1080","line":57,"column":29,"nodeType":"1013","messageId":"1014","endLine":57,"endColumn":47},{"ruleId":"1011","severity":1,"message":"1081","line":58,"column":12,"nodeType":"1013","messageId":"1014","endLine":58,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1082","line":58,"column":25,"nodeType":"1013","messageId":"1014","endLine":58,"endColumn":39},{"ruleId":"1011","severity":1,"message":"1083","line":62,"column":12,"nodeType":"1013","messageId":"1014","endLine":62,"endColumn":24},{"ruleId":"1006","severity":1,"message":"1084","line":75,"column":8,"nodeType":"1008","endLine":75,"endColumn":22,"suggestions":"1085"},{"ruleId":"1006","severity":1,"message":"1086","line":83,"column":8,"nodeType":"1008","endLine":83,"endColumn":24,"suggestions":"1087"},{"ruleId":"1006","severity":1,"message":"1067","line":104,"column":8,"nodeType":"1008","endLine":104,"endColumn":17,"suggestions":"1088"},{"ruleId":"1006","severity":1,"message":"1089","line":125,"column":8,"nodeType":"1008","endLine":125,"endColumn":15,"suggestions":"1090"},{"ruleId":"1006","severity":1,"message":"1091","line":146,"column":8,"nodeType":"1008","endLine":146,"endColumn":29,"suggestions":"1092"},{"ruleId":"1011","severity":1,"message":"1093","line":9,"column":8,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1076","line":6,"column":9,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1094","line":9,"column":51,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":72},{"ruleId":"1011","severity":1,"message":"1095","line":22,"column":23,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1096","line":22,"column":29,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":36},{"ruleId":"1006","severity":1,"message":"1097","line":57,"column":8,"nodeType":"1008","endLine":57,"endColumn":22,"suggestions":"1098"},{"ruleId":"1011","severity":1,"message":"1099","line":59,"column":11,"nodeType":"1013","messageId":"1014","endLine":59,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1100","line":62,"column":11,"nodeType":"1013","messageId":"1014","endLine":62,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1101","line":65,"column":11,"nodeType":"1013","messageId":"1014","endLine":65,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1102","line":3,"column":9,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1061","line":3,"column":36,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":43},{"ruleId":"1011","severity":1,"message":"1103","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1104","line":4,"column":22,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":33},{"ruleId":"1011","severity":1,"message":"1105","line":4,"column":48,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":57},{"ruleId":"1011","severity":1,"message":"1106","line":8,"column":9,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1063","line":9,"column":9,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1107","line":15,"column":25,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":39},{"ruleId":"1006","severity":1,"message":"1108","line":21,"column":8,"nodeType":"1008","endLine":21,"endColumn":17,"suggestions":"1109"},{"ruleId":"1011","severity":1,"message":"1102","line":3,"column":15,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1061","line":3,"column":35,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1063","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1110","line":21,"column":21,"nodeType":"1013","messageId":"1014","endLine":21,"endColumn":38},{"ruleId":"1011","severity":1,"message":"1111","line":21,"column":55,"nodeType":"1013","messageId":"1014","endLine":21,"endColumn":62},{"ruleId":"1011","severity":1,"message":"1112","line":22,"column":12,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1113","line":24,"column":12,"nodeType":"1013","messageId":"1014","endLine":24,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1114","line":24,"column":32,"nodeType":"1013","messageId":"1014","endLine":24,"endColumn":53},{"ruleId":"1011","severity":1,"message":"1115","line":2,"column":8,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":21},{"ruleId":"1116","severity":1,"message":"1117","line":31,"column":26,"nodeType":"1118","messageId":"1119","endLine":31,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1120","line":2,"column":8,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1121","line":77,"column":196,"nodeType":"1013","messageId":"1014","endLine":77,"endColumn":204},{"ruleId":"1011","severity":1,"message":"1102","line":3,"column":9,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1061","line":3,"column":29,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":36},{"ruleId":"1011","severity":1,"message":"1122","line":14,"column":31,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":48},{"ruleId":"1011","severity":1,"message":"1123","line":14,"column":50,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":62},{"ruleId":"1011","severity":1,"message":"1111","line":14,"column":64,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":71},{"ruleId":"1006","severity":1,"message":"1124","line":28,"column":8,"nodeType":"1008","endLine":28,"endColumn":17,"suggestions":"1125"},{"ruleId":"1006","severity":1,"message":"1126","line":32,"column":8,"nodeType":"1008","endLine":32,"endColumn":26,"suggestions":"1127"},{"ruleId":"1011","severity":1,"message":"1128","line":61,"column":11,"nodeType":"1013","messageId":"1014","endLine":61,"endColumn":28},{"ruleId":"1129","severity":1,"message":"1130","line":68,"column":35,"nodeType":"1131","messageId":"1132","endLine":68,"endColumn":37},{"ruleId":"1129","severity":1,"message":"1130","line":81,"column":47,"nodeType":"1131","messageId":"1132","endLine":81,"endColumn":49},{"ruleId":"1133","severity":1,"message":"1134","line":241,"column":28,"nodeType":"1135","messageId":"1136","endLine":241,"endColumn":54,"fix":"1137"},{"ruleId":"1011","severity":1,"message":"1061","line":4,"column":35,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1138","line":15,"column":9,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":26},{"ruleId":"1011","severity":1,"message":"1139","line":20,"column":8,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1095","line":23,"column":24,"nodeType":"1013","messageId":"1014","endLine":23,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1096","line":23,"column":62,"nodeType":"1013","messageId":"1014","endLine":23,"endColumn":69},{"ruleId":"1006","severity":1,"message":"1140","line":37,"column":8,"nodeType":"1008","endLine":37,"endColumn":17,"suggestions":"1141"},{"ruleId":"1011","severity":1,"message":"1142","line":71,"column":9,"nodeType":"1013","messageId":"1014","endLine":71,"endColumn":22},{"ruleId":"1133","severity":1,"message":"1134","line":25,"column":24,"nodeType":"1135","messageId":"1136","endLine":25,"endColumn":50,"fix":"1143"},{"ruleId":"1133","severity":1,"message":"1134","line":35,"column":24,"nodeType":"1135","messageId":"1136","endLine":35,"endColumn":50,"fix":"1144"},{"ruleId":"1011","severity":1,"message":"1145","line":15,"column":9,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":24},{"ruleId":"1133","severity":1,"message":"1134","line":31,"column":24,"nodeType":"1135","messageId":"1136","endLine":31,"endColumn":50,"fix":"1146"},{"ruleId":"1011","severity":1,"message":"1147","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":25},{"ruleId":"1133","severity":1,"message":"1134","line":7,"column":24,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":50,"fix":"1148"},{"ruleId":"1011","severity":1,"message":"1061","line":4,"column":35,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1138","line":15,"column":9,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":26},{"ruleId":"1011","severity":1,"message":"1149","line":19,"column":31,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":46},{"ruleId":"1011","severity":1,"message":"1150","line":22,"column":12,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1095","line":22,"column":36,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":40},{"ruleId":"1011","severity":1,"message":"1096","line":22,"column":96,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":103},{"ruleId":"1006","severity":1,"message":"1151","line":36,"column":8,"nodeType":"1008","endLine":36,"endColumn":17,"suggestions":"1152"},{"ruleId":"1006","severity":1,"message":"1153","line":41,"column":8,"nodeType":"1008","endLine":41,"endColumn":29,"suggestions":"1154"},{"ruleId":"1011","severity":1,"message":"1142","line":83,"column":9,"nodeType":"1013","messageId":"1014","endLine":83,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1096","line":20,"column":54,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":61},{"ruleId":"1006","severity":1,"message":"1155","line":35,"column":8,"nodeType":"1008","endLine":35,"endColumn":17,"suggestions":"1156"},{"ruleId":"1011","severity":1,"message":"1142","line":69,"column":9,"nodeType":"1013","messageId":"1014","endLine":69,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1157","line":10,"column":26,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1158","line":16,"column":8,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1159","line":20,"column":7,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1160","line":22,"column":7,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1161","line":50,"column":7,"nodeType":"1013","messageId":"1014","endLine":50,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1162","line":52,"column":7,"nodeType":"1013","messageId":"1014","endLine":52,"endColumn":15},{"ruleId":"1006","severity":1,"message":"1163","line":158,"column":8,"nodeType":"1008","endLine":158,"endColumn":17,"suggestions":"1164"},{"ruleId":"1006","severity":1,"message":"1165","line":163,"column":8,"nodeType":"1008","endLine":163,"endColumn":23,"suggestions":"1166"},{"ruleId":"1006","severity":1,"message":"1167","line":178,"column":8,"nodeType":"1008","endLine":178,"endColumn":20,"suggestions":"1168"},{"ruleId":"1011","severity":1,"message":"1169","line":7,"column":9,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":22},{"ruleId":"1170","severity":1,"message":"1171","line":1,"column":1,"nodeType":"1172","endLine":6,"endColumn":3},{"ruleId":"1011","severity":1,"message":"1173","line":3,"column":15,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1102","line":3,"column":21,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1174","line":4,"column":8,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1175","line":5,"column":8,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1176","line":2,"column":44,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":49},{"ruleId":"1011","severity":1,"message":"1177","line":2,"column":51,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":56},{"ruleId":"1006","severity":1,"message":"1178","line":35,"column":8,"nodeType":"1008","endLine":35,"endColumn":17,"suggestions":"1179"},{"ruleId":"1011","severity":1,"message":"1180","line":7,"column":9,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1181","line":44,"column":39,"nodeType":"1013","messageId":"1014","endLine":44,"endColumn":47},{"ruleId":"1011","severity":1,"message":"1182","line":1,"column":16,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1183","line":1,"column":27,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1181","line":43,"column":43,"nodeType":"1013","messageId":"1014","endLine":43,"endColumn":51},{"ruleId":"1011","severity":1,"message":"1184","line":3,"column":8,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1115","line":2,"column":8,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1185","line":8,"column":59,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":72},{"ruleId":"1133","severity":1,"message":"1134","line":34,"column":32,"nodeType":"1135","messageId":"1136","endLine":34,"endColumn":58,"fix":"1186"},{"ruleId":"1133","severity":1,"message":"1134","line":100,"column":28,"nodeType":"1135","messageId":"1136","endLine":100,"endColumn":54,"fix":"1187"},{"ruleId":"1011","severity":1,"message":"1188","line":10,"column":8,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":20},{"ruleId":"1133","severity":1,"message":"1134","line":33,"column":32,"nodeType":"1135","messageId":"1136","endLine":33,"endColumn":58,"fix":"1189"},{"ruleId":"1133","severity":1,"message":"1134","line":72,"column":28,"nodeType":"1135","messageId":"1136","endLine":72,"endColumn":54,"fix":"1190"},{"ruleId":"1011","severity":1,"message":"1063","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1120","line":1,"column":8,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":13},{"ruleId":"1191","severity":1,"message":"1192","line":12,"column":13,"nodeType":"1193","messageId":"1194","endLine":12,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1169","line":7,"column":9,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1064","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1195","line":28,"column":52,"nodeType":"1013","messageId":"1014","endLine":28,"endColumn":65},{"ruleId":"1011","severity":1,"message":"1196","line":28,"column":98,"nodeType":"1013","messageId":"1014","endLine":28,"endColumn":106},{"ruleId":"1006","severity":1,"message":"1197","line":43,"column":8,"nodeType":"1008","endLine":43,"endColumn":20,"suggestions":"1198"},{"ruleId":"1006","severity":1,"message":"1199","line":89,"column":8,"nodeType":"1008","endLine":89,"endColumn":15,"suggestions":"1200"},{"ruleId":"1011","severity":1,"message":"1201","line":168,"column":11,"nodeType":"1013","messageId":"1014","endLine":168,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1202","line":17,"column":41,"nodeType":"1013","messageId":"1014","endLine":17,"endColumn":55},{"ruleId":"1006","severity":1,"message":"1203","line":29,"column":8,"nodeType":"1008","endLine":29,"endColumn":23,"suggestions":"1204"},{"ruleId":"1011","severity":1,"message":"1061","line":2,"column":26,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":33},{"ruleId":"1006","severity":1,"message":"1205","line":35,"column":8,"nodeType":"1008","endLine":35,"endColumn":21,"suggestions":"1206"},{"ruleId":"1006","severity":1,"message":"1199","line":44,"column":8,"nodeType":"1008","endLine":44,"endColumn":18,"suggestions":"1207"},{"ruleId":"1011","severity":1,"message":"1157","line":6,"column":26,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1208","line":11,"column":9,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1096","line":20,"column":39,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":46},{"ruleId":"1006","severity":1,"message":"1209","line":33,"column":8,"nodeType":"1008","endLine":33,"endColumn":17,"suggestions":"1210"},{"ruleId":"1011","severity":1,"message":"1211","line":7,"column":9,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":21},{"ruleId":"1006","severity":1,"message":"1212","line":29,"column":8,"nodeType":"1008","endLine":29,"endColumn":38,"suggestions":"1213"},{"ruleId":"1011","severity":1,"message":"1182","line":1,"column":16,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1183","line":1,"column":27,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1184","line":3,"column":8,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1214","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1215","line":5,"column":8,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1216","line":6,"column":9,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1217","line":6,"column":19,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1218","line":9,"column":8,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1219","line":10,"column":9,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1220","line":49,"column":8,"nodeType":"1008","endLine":49,"endColumn":38,"suggestions":"1221"},{"ruleId":"1006","severity":1,"message":"1222","line":61,"column":8,"nodeType":"1008","endLine":61,"endColumn":22,"suggestions":"1223"},{"ruleId":"1006","severity":1,"message":"1224","line":69,"column":8,"nodeType":"1008","endLine":69,"endColumn":24,"suggestions":"1225"},{"ruleId":"1006","severity":1,"message":"1226","line":76,"column":8,"nodeType":"1008","endLine":76,"endColumn":23,"suggestions":"1227"},{"ruleId":"1006","severity":1,"message":"1228","line":80,"column":8,"nodeType":"1008","endLine":80,"endColumn":50,"suggestions":"1229"},{"ruleId":"1006","severity":1,"message":"1230","line":84,"column":8,"nodeType":"1008","endLine":84,"endColumn":22,"suggestions":"1231"},{"ruleId":"1006","severity":1,"message":"1232","line":101,"column":8,"nodeType":"1008","endLine":101,"endColumn":29,"suggestions":"1233"},{"ruleId":"1011","severity":1,"message":"1111","line":238,"column":26,"nodeType":"1013","messageId":"1014","endLine":238,"endColumn":33},{"ruleId":"1011","severity":1,"message":"1102","line":2,"column":9,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1234","line":2,"column":24,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":33},{"ruleId":"1011","severity":1,"message":"1061","line":2,"column":47,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":54},{"ruleId":"1011","severity":1,"message":"1063","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1173","line":4,"column":17,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1235","line":13,"column":8,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1106","line":14,"column":9,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":15},{"ruleId":"1006","severity":1,"message":"1236","line":36,"column":8,"nodeType":"1008","endLine":36,"endColumn":21,"suggestions":"1237"},{"ruleId":"1133","severity":1,"message":"1134","line":82,"column":32,"nodeType":"1135","messageId":"1136","endLine":82,"endColumn":58,"fix":"1238"},{"ruleId":"1006","severity":1,"message":"1239","line":86,"column":8,"nodeType":"1008","endLine":86,"endColumn":15,"suggestions":"1240"},{"ruleId":"1011","severity":1,"message":"1241","line":7,"column":9,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1242","line":17,"column":12,"nodeType":"1013","messageId":"1014","endLine":17,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1243","line":17,"column":37,"nodeType":"1013","messageId":"1014","endLine":17,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1244","line":17,"column":52,"nodeType":"1013","messageId":"1014","endLine":17,"endColumn":61},{"ruleId":"1011","severity":1,"message":"1245","line":19,"column":12,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1246","line":19,"column":31,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":51},{"ruleId":"1133","severity":1,"message":"1134","line":23,"column":32,"nodeType":"1135","messageId":"1136","endLine":23,"endColumn":58,"fix":"1247"},{"ruleId":"1006","severity":1,"message":"1209","line":27,"column":8,"nodeType":"1008","endLine":27,"endColumn":20,"suggestions":"1248"},{"ruleId":"1011","severity":1,"message":"1249","line":96,"column":22,"nodeType":"1013","messageId":"1014","endLine":96,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1115","line":2,"column":8,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1173","line":3,"column":9,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1102","line":3,"column":15,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1175","line":4,"column":8,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1174","line":5,"column":8,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":15},{"ruleId":"1006","severity":1,"message":"1250","line":88,"column":8,"nodeType":"1008","endLine":88,"endColumn":21,"suggestions":"1251"},{"ruleId":"1011","severity":1,"message":"1252","line":14,"column":12,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":23},{"ruleId":"1006","severity":1,"message":"1253","line":19,"column":8,"nodeType":"1008","endLine":19,"endColumn":17,"suggestions":"1254"},"no-native-reassign",["1255"],"no-negated-in-lhs",["1256"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["1257"],["1258"],"no-unused-vars","'CustomerFilter' is defined but never used.","Identifier","unusedVar","'facebook' is defined but never used.","'google' is defined but never used.","'googleResponse' is assigned a value but never used.","'facebookResponse' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'LanguageDropdown' is defined but never used.","'github' is defined but never used.","'bitbucket' is defined but never used.","'dribbble' is defined but never used.","'dropbox' is defined but never used.","'mail_chimp' is defined but never used.","'slack' is defined but never used.","'socialDrp' is assigned a value but never used.","'setsocialDrp' is assigned a value but never used.","'ui' is assigned a value but never used.","'setui' is assigned a value but never used.","'app' is assigned a value but never used.","'setapp' is assigned a value but never used.","'email' is assigned a value but never used.","'setemail' is assigned a value but never used.","'ecommerce' is assigned a value but never used.","'setecommerce' is assigned a value but never used.","'contact' is assigned a value but never used.","'setcontact' is assigned a value but never used.","'component' is assigned a value but never used.","'setcomponent' is assigned a value but never used.","'form' is assigned a value but never used.","'setform' is assigned a value but never used.","'table' is assigned a value but never used.","'settable' is assigned a value but never used.","'chart' is assigned a value but never used.","'setchart' is assigned a value but never used.","'icon' is assigned a value but never used.","'seticon' is assigned a value but never used.","'map' is assigned a value but never used.","'setmap' is assigned a value but never used.","'invoice' is assigned a value but never used.","'setinvoice' is assigned a value but never used.","'Router' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'RESET_CUSTOMERS' is defined but never used.","'LIST_URL' is assigned a value but never used.","'RESET_PRODUCT_SIZE' is defined but never used.","'Spinner' is defined but never used.","'AvField' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'isEdit' and 'props.match.params.id'. Either include them or remove the dependency array.",["1259"],"React Hook useEffect has a missing dependency: 'isEdit'. Either include it or remove the dependency array.",["1260"],"React Hook useEffect has missing dependencies: 'getStates', 'isEdit', and 'props.match.params.id'. Either include them or remove the dependency array.",["1261"],["1262"],["1263"],["1264"],["1265"],"'getProducts' is defined but never used.","'parseJson' is defined but never used.","'FieldOption' is defined but never used.","'DEFAULT_PAGE_LIMIT' is defined but never used.","'materialDefault' is assigned a value but never used.","'setMaterialDefault' is assigned a value but never used.","'publication' is assigned a value but never used.","'setPublication' is assigned a value but never used.","'sizeSelected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isEdit', 'onGetCategories', 'onGetFieldOptions', 'onGetSizes', and 'props.match.params.id'. Either include them or remove the dependency array.",["1266"],"React Hook useEffect has missing dependencies: 'onGetProduct', 'onResetProductImages', 'onResetProductSize', and 'product.id'. Either include them or remove the dependency array.",["1267"],["1268"],"React Hook useEffect has a missing dependency: 'product.size'. Either include it or remove the dependency array.",["1269"],"React Hook useEffect has a missing dependency: 'onGetFieldOptions'. Either include it or remove the dependency array.",["1270"],"'avatar4' is defined but never used.","'getProductFieldOption' is defined but never used.","'meta' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fieldOption.groups'. Either include it or remove the dependency array.",["1271"],"'isReferenceGroup' is assigned a value but never used.","'handleTableChange' is assigned a value but never used.","'onFilterAction' is assigned a value but never used.","'CardBody' is defined but never used.","'FieldNumber' is defined but never used.","'FieldSelect' is defined but never used.","'FieldText' is defined but never used.","'STATUS' is defined but never used.","'setProductData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fillValues'. Either include it or remove the dependency array.",["1272"],"'onGetProductImage' is assigned a value but never used.","'refresh' is assigned a value but never used.","'productImageList' is assigned a value but never used.","'productImageGroups' is assigned a value but never used.","'setProductImageGroups' is assigned a value but never used.","'imageNotFound' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","'disabled' is assigned a value but never used.","'onGetProductSizes' is assigned a value but never used.","'productSizes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fillSelectValues' and 'parseList'. Either include them or remove the dependency array.",["1273"],"React Hook useEffect has a missing dependency: 'calculateTotals'. Either include it or remove the dependency array.",["1274"],"'parseDefaultValue' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"1275","text":"1276"},"'ConfirmationModal' is defined but never used.","'Category' is defined but never used.","React Hook useEffect has a missing dependency: 'onGetCategories'. Either include it or remove the dependency array.",["1277"],"'selectRowProp' is assigned a value but never used.",{"range":"1278","text":"1276"},{"range":"1279","text":"1276"},"'getFieldOptions' is defined but never used.",{"range":"1280","text":"1276"},"'DELIVERY_METHODS' is defined but never used.",{"range":"1281","text":"1276"},"'statesToOptions' is defined but never used.","'states' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetMunicipalities'. Either include it or remove the dependency array.",["1282"],"React Hook useEffect has a missing dependency: 'getStates'. Either include it or remove the dependency array.",["1283"],"React Hook useEffect has a missing dependency: 'onGetStates'. Either include it or remove the dependency array.",["1284"],"'Search' is defined but never used.","'WidgetCard' is defined but never used.","'series2' is assigned a value but never used.","'options2' is assigned a value but never used.","'series3' is assigned a value but never used.","'options3' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetProducts'. Either include it or remove the dependency array.",["1285"],"React Hook useEffect has a missing dependency: 'onCountProducts'. Either include it or remove the dependency array.",["1286"],"React Hook useEffect has a missing dependency: 'statusGroup'. Either include it or remove the dependency array.",["1287"],"'isValidOption' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Card' is defined but never used.","'CountUp' is defined but never used.","'ReactApexChart' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'onCountCustomers' and 'onGetCustomers'. Either include them or remove the dependency array.",["1288"],"'arrayToOptions' is defined but never used.","'validate' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Select' is defined but never used.","'isValidString' is defined but never used.",{"range":"1289","text":"1276"},{"range":"1290","text":"1276"},"'ButtonSubmit' is defined but never used.",{"range":"1291","text":"1276"},{"range":"1292","text":"1276"},"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'onGetProducts' is assigned a value but never used.","'products' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params'. Either include it or remove the dependency array.",["1293"],"React Hook useEffect has missing dependencies: 'car' and 'onUpdateCar'. Either include them or remove the dependency array.",["1294"],"'imageAsStyle' is assigned a value but never used.","'DELIVERY_TYPES' is defined but never used.","React Hook useEffect has a missing dependency: 'onResetOrder'. Either include it or remove the dependency array.",["1295"],"React Hook useEffect has missing dependencies: 'car.customer', 'car.isEdit', 'initComponent', and 'onGetCustomer'. Either include them or remove the dependency array.",["1296"],["1297"],"'ConfirmationModalAction' is defined but never used.","React Hook useEffect has a missing dependency: 'onGetOrders'. Either include it or remove the dependency array.",["1298"],"'GET_CUSTOMER' is defined but never used.","React Hook useEffect has missing dependencies: 'car', 'getProductListWithTotals', and 'onUpdateCar'. Either include them or remove the dependency array.",["1299"],"'AvBaseInput' is defined but never used.","'messages' is defined but never used.","'FormText' is defined but never used.","'FormGroup' is defined but never used.","'InputAsyncSearchField' is defined but never used.","'FieldSelectBasic' is defined but never used.","React Hook useEffect has a missing dependency: 'onGetDeliveryMethods'. Either include it or remove the dependency array.",["1300"],"React Hook useEffect has missing dependencies: 'deliveryMethods' and 'onChangeDeliveryOptions'. Either include them or remove the dependency array.",["1301"],"React Hook useEffect has missing dependencies: 'getQuote' and 'onChangeDeliveryOptions'. Either include them or remove the dependency array.",["1302"],"React Hook useEffect has missing dependencies: 'deliveryMethod' and 'onChangeDeliveryOptions'. Either include them or remove the dependency array.",["1303"],"React Hook useEffect has a missing dependency: 'onChangeDeliveryOptions'. Either include it or remove the dependency array.",["1304"],"React Hook useEffect has a missing dependency: 'getQuote'. Either include it or remove the dependency array.",["1305"],"React Hook useEffect has missing dependencies: 'car.isEdit' and 'initComponent'. Either include them or remove the dependency array.",["1306"],"'Container' is defined but never used.","'Breadcrumb' is defined but never used.","React Hook useEffect has missing dependencies: 'getStates' and 'props.match.params.id'. Either include them or remove the dependency array.",["1307"],{"range":"1308","text":"1276"},"React Hook useEffect has a missing dependency: 'getMunicipalities'. Either include it or remove the dependency array.",["1309"],"'map' is defined but never used.","'onGetOrder' is assigned a value but never used.","'order' is assigned a value but never used.","'productId' is assigned a value but never used.","'openCustomerModal' is assigned a value but never used.","'setOpenCustomerModal' is assigned a value but never used.",{"range":"1310","text":"1276"},["1311"],"'product' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.",["1312"],"'getCustomer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetProductsPending'. Either include it or remove the dependency array.",["1313"],"no-global-assign","no-unsafe-negation",{"desc":"1314","fix":"1315"},{"desc":"1316","fix":"1317"},{"desc":"1318","fix":"1319"},{"desc":"1320","fix":"1321"},{"desc":"1322","fix":"1323"},{"desc":"1324","fix":"1325"},{"desc":"1326","fix":"1327"},{"desc":"1328","fix":"1329"},{"desc":"1330","fix":"1331"},{"desc":"1332","fix":"1333"},{"desc":"1334","fix":"1335"},{"desc":"1336","fix":"1337"},{"desc":"1338","fix":"1339"},{"desc":"1340","fix":"1341"},{"desc":"1342","fix":"1343"},{"desc":"1344","fix":"1345"},{"desc":"1346","fix":"1347"},{"desc":"1348","fix":"1349"},[10024,10024],"()",{"desc":"1350","fix":"1351"},[798,798],[1194,1194],[858,858],[343,343],{"desc":"1352","fix":"1353"},{"desc":"1354","fix":"1355"},{"desc":"1356","fix":"1357"},{"desc":"1358","fix":"1359"},{"desc":"1360","fix":"1361"},{"desc":"1362","fix":"1363"},{"desc":"1364","fix":"1365"},[1290,1290],[4811,4811],[1295,1295],[3053,3053],{"desc":"1366","fix":"1367"},{"desc":"1368","fix":"1369"},{"desc":"1370","fix":"1371"},{"desc":"1372","fix":"1373"},{"desc":"1374","fix":"1375"},{"desc":"1376","fix":"1377"},{"desc":"1378","fix":"1379"},{"desc":"1380","fix":"1381"},{"desc":"1382","fix":"1383"},{"desc":"1384","fix":"1385"},{"desc":"1386","fix":"1387"},{"desc":"1388","fix":"1389"},{"desc":"1390","fix":"1391"},{"desc":"1392","fix":"1393"},{"desc":"1394","fix":"1395"},[2978,2978],{"desc":"1396","fix":"1397"},[935,935],{"desc":"1398","fix":"1399"},{"desc":"1400","fix":"1401"},{"desc":"1402","fix":"1403"},"Update the dependencies array to be: [getProduct, props.match.params.id]",{"range":"1404","text":"1405"},"Update the dependencies array to be: [getCustomer, props.match.params.id]",{"range":"1406","text":"1407"},"Update the dependencies array to be: [getState, isEdit, props.match.params.id]",{"range":"1408","text":"1409"},"Update the dependencies array to be: [estado, isEdit]",{"range":"1410","text":"1411"},"Update the dependencies array to be: [getMunicipality, getStates, isEdit, props.match.params.id]",{"range":"1412","text":"1413"},"Update the dependencies array to be: [isEdit, municipality]",{"range":"1414","text":"1415"},"Update the dependencies array to be: [getCategory, isEdit, props.match.params.id]",{"range":"1416","text":"1417"},"Update the dependencies array to be: [category, isEdit]",{"range":"1418","text":"1419"},"Update the dependencies array to be: [getCustomer, isEdit, props.match.params.id]",{"range":"1420","text":"1421"},"Update the dependencies array to be: [isEdit, onGetCategories, onGetFieldOptions, onGetProduct, onGetSizes, props.match.params.id]",{"range":"1422","text":"1423"},"Update the dependencies array to be: [onGetProduct, onResetProductImages, onResetProductSize, product.id, refreshProduct]",{"range":"1424","text":"1425"},"Update the dependencies array to be: [isEdit, product]",{"range":"1426","text":"1427"},"Update the dependencies array to be: [product.size, sizes]",{"range":"1428","text":"1429"},"Update the dependencies array to be: [onGetFieldOptions, refreshFieldOptions]",{"range":"1430","text":"1431"},"Update the dependencies array to be: [fieldOption.groups, fieldOptions]",{"range":"1432","text":"1433"},"Update the dependencies array to be: [fillValues, product]",{"range":"1434","text":"1435"},"Update the dependencies array to be: [fillSelectValues, parseList, product]",{"range":"1436","text":"1437"},"Update the dependencies array to be: [calculateTotals, productSizesList]",{"range":"1438","text":"1439"},"Update the dependencies array to be: [onGetCategories, refresh]",{"range":"1440","text":"1441"},"Update the dependencies array to be: [onGetMunicipalities, refresh]",{"range":"1442","text":"1443"},"Update the dependencies array to be: [getStates, onGetMunicipalities]",{"range":"1444","text":"1445"},"Update the dependencies array to be: [onGetStates, refresh]",{"range":"1446","text":"1447"},"Update the dependencies array to be: [onGetProducts, refresh]",{"range":"1448","text":"1449"},"Update the dependencies array to be: [onCountProducts, onGetProducts]",{"range":"1450","text":"1451"},"Update the dependencies array to be: [customData, statusGroup]",{"range":"1452","text":"1453"},"Update the dependencies array to be: [onCountCustomers, onGetCustomers, refresh]",{"range":"1454","text":"1455"},"Update the dependencies array to be: [onGetOrder, props.match.params]",{"range":"1456","text":"1457"},"Update the dependencies array to be: [car, onUpdateCar, order]",{"range":"1458","text":"1459"},"Update the dependencies array to be: [initComponent, onResetOrder]",{"range":"1460","text":"1461"},"Update the dependencies array to be: [car.customer, car.isEdit, initComponent, onGetCustomer, showAsModal]",{"range":"1462","text":"1463"},"Update the dependencies array to be: [car, customer, onUpdateCar]",{"range":"1464","text":"1465"},"Update the dependencies array to be: [onGetOrders, refresh]",{"range":"1466","text":"1467"},"Update the dependencies array to be: [car, car.products, getProductListWithTotals, globalDiscount, onUpdateCar]",{"range":"1468","text":"1469"},"Update the dependencies array to be: [onGetFieldOptions, car.reset, onGetDeliveryMethods]",{"range":"1470","text":"1471"},"Update the dependencies array to be: [deliveryMethods, deliveryType, onChangeDeliveryOptions]",{"range":"1472","text":"1473"},"Update the dependencies array to be: [deliveryMethod, getQuote, onChangeDeliveryOptions]",{"range":"1474","text":"1475"},"Update the dependencies array to be: [deliveryMethod, deliveryQuote, onChangeDeliveryOptions]",{"range":"1476","text":"1477"},"Update the dependencies array to be: [deliveryCost, onChangeDeliveryOptions, paymentType, pieceToChange]",{"range":"1478","text":"1479"},"Update the dependencies array to be: [car.products, getQuote]",{"range":"1480","text":"1481"},"Update the dependencies array to be: [car.deliveryOptions, car.isEdit, initComponent]",{"range":"1482","text":"1483"},"Update the dependencies array to be: [getCustomer, getStates, props.match.params.id]",{"range":"1484","text":"1485"},"Update the dependencies array to be: [getMunicipalities, state]",{"range":"1486","text":"1487"},"Update the dependencies array to be: [customerId, onGetOrders]",{"range":"1488","text":"1489"},"Update the dependencies array to be: [statusGroup, title]",{"range":"1490","text":"1491"},"Update the dependencies array to be: [onGetProductsPending, product]",{"range":"1492","text":"1493"},[983,995],"[getProduct, props.match.params.id]",[958,971],"[getCustomer, props.match.params.id]",[1059,1069],"[getState, isEdit, props.match.params.id]",[1250,1258],"[estado, isEdit]",[1374,1391],"[getMunicipality, getStates, isEdit, props.match.params.id]",[1728,1742],"[isEdit, municipality]",[1082,1095],"[getCategory, isEdit, props.match.params.id]",[1280,1290],"[category, isEdit]",[727,740],"[getCustomer, isEdit, props.match.params.id]",[3345,3359],"[isEdit, onGetCategories, onGetFieldOptions, onGetProduct, onGetSizes, props.match.params.id]",[3528,3544],"[onGetProduct, onResetProductImages, onResetProductSize, product.id, refreshProduct]",[4269,4278],"[isEdit, product]",[4919,4926],"[product.size, sizes]",[5642,5663],"[onGetFieldOptions, refreshFieldOptions]",[2338,2352],"[fieldOption.groups, fieldOptions]",[867,876],"[fillValues, product]",[1098,1107],"[fillSelectValues, parseList, product]",[1166,1184],"[calculateTotals, productSizesList]",[1532,1541],"[onGetCategories, refresh]",[1583,1592],"[onGetMunicipalities, refresh]",[1675,1696],"[getStates, onGetMunicipalities]",[1461,1470],"[onGetStates, refresh]",[4051,4060],"[onGetProducts, refresh]",[4144,4159],"[onCountProducts, onGetProducts]",[4597,4609],"[customData, statusGroup]",[1654,1663],"[onCountCustomers, onGetCustomers, refresh]",[1901,1913],"[onGetOrder, props.match.params]",[3684,3691],"[car, onUpdateCar, order]",[1285,1300],"[initComponent, onResetOrder]",[1851,1864],"[car.customer, car.isEdit, initComponent, onGetCustomer, showAsModal]",[2059,2069],"[car, customer, onUpdateCar]",[1378,1387],"[onGetOrders, refresh]",[1205,1235],"[car, car.products, getProductListWithTotals, globalDiscount, onUpdateCar]",[2452,2482],"[onGetFieldOptions, car.reset, onGetDeliveryMethods]",[3019,3033],"[deliveryMethods, deliveryType, onChangeDeliveryOptions]",[3258,3274],"[deliveryMethod, getQuote, onChangeDeliveryOptions]",[3471,3486],"[deliveryMethod, deliveryQuote, onChangeDeliveryOptions]",[3554,3596],"[deliveryCost, onChangeDeliveryOptions, paymentType, pieceToChange]",[3649,3663],"[car.products, getQuote]",[4410,4431],"[car.deliveryOptions, car.isEdit, initComponent]",[1655,1668],"[getCustomer, getStates, props.match.params.id]",[3090,3097],"[getMunicipalities, state]",[1073,1085],"[customerId, onGetOrders]",[2099,2112],"[statusGroup, title]",[639,648],"[onGetProductsPending, product]"]