
name: Continuous Deployment

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    env:
      SOURCE_DIR: "build/"
      AWS_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CI: false
    steps:
      - uses: actions/checkout@v3
      - name: Build
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - run: git config --global url."https://".insteadOf git://
      - run: yarn
      - run: yarn build

      - uses: elgohr/Publish-Docker-Github-Action@master
        name: Publish to Github Packages Registry
        with:
          name: ${{ secrets.DOCKER_REPOSITORY }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          dockerfile: Dockerfile
          tags: latest

      - name: Configure SSH
        run: |
            mkdir -p ~/.ssh/
            echo "$SSH_KEY" > ~/.ssh/staging.key
            chmod 600 ~/.ssh/staging.key
            cat >>~/.ssh/config <<END
            Host staging
              HostName $SSH_HOST
              User $SSH_USER
              IdentityFile ~/.ssh/staging.key
              StrictHostKeyChecking no
            END
        env:
          SSH_USER: ${{ secrets.AWS_USERNAME }}
          SSH_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.AWS_HOST }}
          DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      #- name: Stop the server
      #  run: ssh staging 'echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin'

      - name: Deploy in Cluster
        run: |
            ssh staging 'docker pull rolmos/moie-admin'
            ssh staging "docker stop $(docker ps -q --filter ancestor=rolmos/moie-admin )"
            ssh staging "docker rm $(docker ps -q --filter ancestor=rolmos/moie-admin )"
            ssh staging "docker build -t moie-admin ."
            ssh staging "docker run -d -p 8082:80 rolmos/moie-admin"
